!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("js-sha3"),require("big-integer"),require("@stablelib/base64"),require("big-integer/BigInteger"),require("base-x"),require("buffer"),require("tweetnacl"),require("tweetnacl-sealedbox-js"),require("@stablelib/utf8"),require("servie"),require("popsicle")):"function"==typeof define&&define.amd?define(["exports","js-sha3","big-integer","@stablelib/base64","big-integer/BigInteger","base-x","buffer","tweetnacl","tweetnacl-sealedbox-js","@stablelib/utf8","servie","popsicle"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).KnishIO={},e.jsSha3,e.bigInt,e.base64,e.bigIntB,e.baseX,e.buffer,e.tweetnacl,e.tweetnaclSealedboxJs,e.utf8,e.servie,e.popsicle)}(this,(function(e,t,s,n,l,i,a,r,o,u,c,h){"use strict";function d(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var p=d(s),m=d(l),f=d(i);class y{static toHex(e,t){const s=(e,t)=>{const s=t?["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F"]:["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"];return s[Math.floor(e/16)]+s[e%16]},n=Object.assign({grouping:0,rowlength:0,uppercase:!1},t||{});let l="",i=0,a=0;for(let t=0;t<e.length&&(l+=s(e[t],n.uppercase),t!==e.length-1);++t)n.grouping>0&&++i===n.grouping&&(i=0,n.rowlength>0&&++a===n.rowlength?(a=0,l+="\n"):l+=" ");return l}static toUint8Array(e){let t=e.toLowerCase().replace(/\s/g,"");t.length%2==1&&(t="0"+t);let s=new Uint8Array(Math.floor(t.length/2)),n=-1;for(let e=0;e<t.length;++e){let l=t[e],i=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"].indexOf(l);if(-1===i)throw Error("unexpected character");-1===n?n=16*i:(s[Math.floor(e/2)]=n+i,n=-1)}return s}}function g(e,t){const s=Math.ceil(e.length/t),n=new Array(s);for(let l=0,i=0;l<s;++l,i+=t)n[l]=e.substr(i,t);return n}function w(e=256,t="abcdef0123456789"){let s=new Uint8Array(e);return(window.crypto||window.msCrypto).getRandomValues(s),s=s.map((e=>t.charCodeAt(e%t.length))),String.fromCharCode.apply(null,s)}function _(e,t,s,n,l){if(n=n||"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz~`!@#$%^&*()-_=+[{]}\\|;:'\",<.>/?¿¡",l=l||n,t>n.length||s>l.length)return console.warn("Can't convert",e,"to base",s,"greater than symbol table length. src-table:",n.length,"dest-table:",l.length),!1;let i=p.default(0);for(let s=0;s<e.length;s++)i=i.multiply(t).add(n.indexOf(e.charAt(s)));if(i.lesser(0))return 0;let a=i.mod(s),r=l.charAt(a),o=i.divide(s);for(;!o.equals(0);)a=o.mod(s),o=o.divide(s),r=l.charAt(a)+r;return r}function k(e){return n.encode(y.toUint8Array(e))}function b(e){return y.toHex(n.decode(e),{})}function $(e){return/^[A-F0-9]+$/i.test(e)}String.prototype.trim||(String.prototype.trim=function(){return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")});class x{constructor(e,t,s,n=null){this.modelType=e,this.modelId=t,this.meta=s,this.snapshotMolecule=n,this.createdAt=+new Date}static normalizeMeta(e){if("[object Object]"===Object.prototype.toString.call(e)){const t=[];for(const s in e)e.hasOwnProperty(s)&&null!==e[s]&&t.push({key:s,value:e[s]});return t}return e}static aggregateMeta(e){const t={};if("[object Array]"===Object.prototype.toString.call(e))for(let s of e)t[s.key]=s.value;return Object.keys(t).length>0?t:e}}class S{constructor(e=null,t=null,s=null,n=null,l=null,i=null,a=null,r=null,o=null,u=null,c=null){this.position=e,this.walletAddress=t,this.isotope=s,this.token=n,this.value=null!==l?String(l):null,this.batchId=i,this.metaType=a,this.metaId=r,this.meta=o?x.normalizeMeta(o):[],this.index=c,this.otsFragment=u,this.createdAt=String(+new Date)}static jsonToObject(e){const t=Object.assign(new S,JSON.parse(e)),s=Object.keys(new S);for(const e in t)t.hasOwnProperty(e)&&!s.includes(e)&&delete t[e];return t}static hashAtoms(e,s="base17"){const n=t.shake256.create(256),l=e.length,i=S.sortAtoms(e);for(const e of i){n.update(String(l));for(const t in e)if(e.hasOwnProperty(t)){if(["batchId","pubkey","characters"].includes(t)&&null===e[t])continue;if(["otsFragment","index"].includes(t))continue;if("meta"===t){e[t]=x.normalizeMeta(e[t]);for(const s of e[t])void 0!==s.value&&null!==s.value&&(n.update(String(s.key)),n.update(String(s.value)));continue}if(["position","walletAddress","isotope"].includes(t)){n.update(null===e[t]?"":String(e[t]));continue}null!==e[t]&&n.update(null===e[t]?"":String(e[t]))}}switch(s){case"hex":return n.hex();case"array":return n.array();default:return _(n.hex(),16,17,"0123456789abcdef","0123456789abcdefg").padStart(64,"0")}}static sortAtoms(e){const t=[...e];return t.sort(((e,t)=>e.index===t.index?0:e.index<t.index?-1:1)),t}}class M{constructor(e={}){this.$options=Object.assign({characters:"GMP"},e),this.$encoder=f.default(this[this.$options.characters]||this.GMP)}encode(e){return this.$encoder.encode(a.Buffer.from(e))}decode(e){return this.$encoder.decode(e)}get GMP(){return"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuv"}get BITCOIN(){return"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}get FLICKR(){return"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}get RIPPLE(){return"rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz"}get IPFS(){return"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}}const I=10**18;class T{static val(e){return Math.abs(e*I)<1?0:e}static cmp(e,t,s=!1){const n=T.val(e)*I,l=T.val(t)*I;return Math.abs(n-l)<1?0:n>l?1:-1}static equal(e,t){return 0===T.cmp(e,t)}}class W{constructor(e=null){this.base=new M(e)}encrypt(e,t){return this.encode(o.seal(u.encode(JSON.stringify(e)),this.decode(t)))}decrypt(e,t,s){try{return JSON.parse(u.decode(o.open(this.decode(e),this.decode(s),this.decode(t))))}catch(e){return null}}generatePrivateKey(e){const s=t.shake256.create(8*r.box.secretKeyLength);return s.update(e),this.base.encode(a.Buffer.from(s.digest()))}generatePublicKey(e){const t=r.box.keyPair.fromSecretKey(this.decode(e));return this.encode(t.publicKey)}shortHash(e){const s=t.shake256.create(64);return s.update(e),this.base.encode(a.Buffer.from(s.digest()))}decode(e){return this.base.decode(e)}encode(e){return this.base.encode(e)}}function v(e=null,s=2048){if(console.info(`Crypto::generateSecret() - Computing new secret${e?" from existing seed":""}...`),e){const n=t.shake256.create(2*s);return n.update(e),n.hex()}return w(s)}function A(e){console.info("Crypto::bundle() - Computing wallet bundle from secret...");const s=t.shake256.create(256);return s.update(e),s.hex()}function C(){return w(64)}function q(e=64){return w(e,"abcdef0123456789")}function H(e,t,s=null){return new W(s).encrypt(e,t)}function U(e,t,s,n=null){return new W(n).decrypt(e,t,s)}function K(e,t=null){return new W(t).generatePrivateKey(e)}function R(e,t=null){return new W(t).generatePublicKey(e)}function O(e,t=null){return new W(t).shortHash(e)}class E{constructor(e=null,t="USER",s=null,n=null,l=null){this.token=t,this.balance=0,this.molecules={},this.key=null,this.address=null,this.privkey=null,this.pubkey=null,this.bundle=e?A(e):null,this.batchId=n,this.position=s,this.characters="undefined"!==(new M)[l]?l:null,e&&(this.position=this.position||q(),this.prepareKeys(e))}static create(e,t,s=null,n=null){let l=E.isBundleHash(e)?null:e,i=l?A(l):e,a=l?q():null,r=new E(l,t,a,s,n);return r.bundle=i,r}static isBundleHash(e){return"string"==typeof e&&(64===e.length&&$(e))}static getTokenUnits(e){let t=[];return e.forEach((e=>{t.push({id:e.shift(),name:e.shift(),metas:e})})),t}hasTokenUnits(){return"tokenUnits"in this}tokenUnitsJson(){if(!this.hasTokenUnits())return null;let e=[];return this.tokenUnits.forEach((t=>{e.push([t.id,t.name].concat(t.metas))})),JSON.stringify(e)}isShadow(){return!(void 0!==this.position&&null!==this.position||void 0!==this.address&&null!==this.address)}initBatchId(e,t){e.batchId&&(this.batchId=!this.batchId&&T.cmp(e.balance,t)>0?C():e.batchId)}prepareKeys(e){null===this.key&&null===this.address&&(this.key=E.generatePrivateKey(e,this.token,this.position),this.address=E.generatePublicKey(this.key),this.getMyEncPrivateKey(),this.getMyEncPublicKey())}getMyEncPrivateKey(){return null===this.privkey&&null!==this.key&&(this.privkey=K(this.key,this.characters)),this.privkey}getMyEncPublicKey(){const e=this.getMyEncPrivateKey();return!this.pubkey&&e&&(this.pubkey=R(e,this.characters)),this.pubkey}encryptMyMessage(e){const t={};for(let s=1,n=arguments.length;s<n;s++)t[O(arguments[s],this.characters)]=H(e,arguments[s],this.characters);return t}decryptMyMessage(e){const t=this.getMyEncPublicKey();let s=e;return null!==e&&"object"==typeof e&&"[object Object]"===Object.prototype.toString.call(e)&&(s=e[O(t,this.characters)]||""),U(s,this.getMyEncPrivateKey(),t,this.characters)}encryptString(e,t){if(e){const s=this.getMyEncPublicKey();"string"==typeof t&&(t=new Array(t));const n=this.encryptMyMessage(e,s,...t);return btoa(JSON.stringify(n))}}decryptString(e,t=null){if(e)try{const s=JSON.parse(atob(e));return this.decryptMyMessage(s)||t}catch(s){return console.error(s),t||e}}static generatePrivateKey(e,s,n){const l=m.default(e,16).add(m.default(n,16)),i=t.shake256.create(8192);return i.update(l.toString(16)),s&&i.update(s),t.shake256.create(8192).update(i.hex()).hex()}static generatePublicKey(e){const s=g(e,128),n=t.shake256.create(8192);for(const e in s){let l=s[e];for(let e=1;e<=16;e++)l=t.shake256.create(512).update(l).hex();n.update(l)}return t.shake256.create(256).update(n.hex()).hex()}}class B extends TypeError{constructor(e=null,t=null,s=null){if(super(e,t,s),null===e)throw new this("Unknown "+this.constructor.name);this.name="BaseException"}toString(){return`${this.name}: ${this.message}.\nStack:\n${this.stack}`}}class j extends B{constructor(e="There is an atom without an index",t=null,s=null){super(e,t,s),this.name="AtomIndexException"}}class P extends B{constructor(e="The molecule does not contain atoms",t=null,s=null){super(e,t,s),this.name="AtomsMissingException"}}class Q extends B{constructor(e="The molecular hash does not match",t=null,s=null){super(e,t,s),this.name="MolecularHashMismatchException"}}class N extends B{constructor(e="The molecular hash is missing",t=null,s=null){super(e,t,s),this.name="MolecularHashMissingException"}}class V extends B{constructor(e="OTS malformed",t=null,s=null){super(e,t,s),this.name="SignatureMalformedException"}}class F extends B{constructor(e="One-time signature (OTS) does not match!",t=null,s=null){super(e,t,s),this.name="SignatureMismatchException"}}class z extends B{constructor(e="Insufficient balance to make transfer",t=null,s=null){super(e,t,s),this.name="TransferBalanceException"}}class J extends B{constructor(e="Token transfer atoms are malformed",t=null,s=null){super(e,t,s),this.name="TransferMalformedException"}}class D extends B{constructor(e="Token slugs for wallets in transfer do not match!",t=null,s=null){super(e,t,s),this.name="TransferMismatchedException"}}class L extends B{constructor(e="Invalid remainder provided",t=null,s=null){super(e,t,s),this.name="TransferRemainderException"}}class G extends B{constructor(e="Sender and recipient(s) cannot be the same",t=null,s=null){super(e,t,s),this.name="TransferToSelfException"}}class X extends B{constructor(e="Token transfer atoms are unbalanced",t=null,s=null){super(e,t,s),this.name="TransferUnbalancedException"}}class Y extends B{constructor(e="Empty meta data.",t=null,s=null){super(e,t,s),this.name="MetaMissingException"}}class Z extends B{constructor(e="Wrong type of token for this isotope",t=null,s=null){super(e,t,s),this.name="WrongTokenTypeException"}}class ee{static continuId(e){ee.missing(e);if("USER"===e.atoms[0].token&&ee.isotopeFilter("I",e.atoms).length<1)throw new P("Missing atom ContinuID");return!0}static isotopeI(e){ee.missing(e);for(let t of ee.isotopeFilter("I",e.atoms)){if("USER"!==t.token)throw new Z(`Invalid token name for "${t.isotope}" isotope`);if(0===t.index)throw new j(`Invalid isotope "${t.isotope}" index`)}return!0}static isotopeU(e){ee.missing(e);for(let t of ee.isotopeFilter("U",e.atoms)){if("AUTH"!==t.token)throw new Z(`Invalid token name for "${t.isotope}" isotope`);if(0!==t.index)throw new j(`Invalid isotope "${t.isotope}" index`)}return!0}static isotopeM(e){ee.missing(e);for(let t of ee.isotopeFilter("M",e.atoms)){if(t.meta.length<1)throw new Y;if("USER"!==t.token)throw new Z(`Invalid token name for "${t.isotope}" isotope`)}return!0}static isotopeC(e){ee.missing(e);for(let t of ee.isotopeFilter("C",e.atoms)){if("USER"!==t.token)throw new Z(`Invalid token name for "${t.isotope}" isotope`);if(0!==t.index)throw new j(`Invalid isotope "${t.isotope}" index`)}return!0}static isotopeT(e){ee.missing(e);for(let t of ee.isotopeFilter("T",e.atoms)){const e=x.aggregateMeta(x.normalizeMeta(t.meta));if("wallet"===String(t.metaType).toLowerCase())for(let t of["position","bundle"])if(!e.hasOwnProperty(t)||!Boolean(e[t]))throw new Y(`No or not defined "${t}" in meta`);for(let t of["token"])if(!e.hasOwnProperty(t)||!Boolean(e[t]))throw new Y(`No or not defined "${t}" in meta`);if("USER"!==t.token)throw new Z(`Invalid token name for "${t.isotope}" isotope`);if(0!==t.index)throw new j(`Invalid isotope "${t.isotope}" index`)}return!0}static isotopeV(e,t=null){ee.missing(e);const s=ee.isotopeFilter("V",e.atoms);if(0===s.length)return!0;const n=e.atoms[0];if("V"===n.isotope&&2===s.length){const e=s[s.length-1];if(n.token!==e.token)throw new D;if(e.value<0)throw new J;return!0}let l=0,i=0;for(let t in e.atoms)if(e.atoms.hasOwnProperty(t)){const s=e.atoms[t];if("V"!==s.isotope)continue;if(i=1*s.value,Number.isNaN(i))throw new TypeError('Invalid isotope "V" values');if(s.token!==n.token)throw new D;if(t>0){if(i<0)throw new J;if(s.walletAddress===n.walletAddress)throw new G}l+=i}if(l!==i)throw new X;if(t){if(i=1*n.value,Number.isNaN(i))throw new TypeError('Invalid isotope "V" values');const e=1*t.balance+1*i;if(e<0)throw new z;if(e!==l)throw new L}else if(0!==i)throw new L;return!0}static molecularHash(e){if(ee.missing(e),e.molecularHash!==S.hashAtoms(e.atoms))throw new Q;return!0}static ots(e){ee.missing(e);const s=e.atoms[0].walletAddress,n=ee.normalizedHash(e.molecularHash);let l=e.atoms.map((e=>e.otsFragment)).reduce(((e,t)=>e+t));if(2048!==l.length&&(l=b(l),2048!==l.length))throw new V;const i=g(l,128);let a="";for(const e in i){let s=i[e];for(let l=0,i=8+n[e];l<i;l++)s=t.shake256.create(512).update(s).hex();a+=s}const r=t.shake256.create(8192).update(a).hex();if(t.shake256.create(256).update(r).hex()!==s)throw new F;return!0}static index(e){ee.missing(e);for(let t of e.atoms)if(null===t.index)throw new j;return!0}static isotopeFilter(e,t){return(t=t||[]).filter((t=>e===t.isotope))}static normalizedHash(e){return ee.normalize(ee.enumerate(e))}static enumerate(e){const t={0:-8,1:-7,2:-6,3:-5,4:-4,5:-3,6:-2,7:-1,8:0,9:1,a:2,b:3,c:4,d:5,e:6,f:7,g:8},s=[],n=e.toLowerCase().split("");for(let e=0,l=n.length;e<l;++e){const l=n[e];void 0!==t[l]&&(s[e]=t[l])}return s}static normalize(e){let t=e.reduce(((e,t)=>e+t));const s=t<0;for(;t<0||t>0;)for(const n of Object.keys(e)){if((s?e[n]<8:e[n]>-8)&&(s?(++e[n],++t):(--e[n],--t),0===t))break}return e}static missing(e){if(null===e.molecularHash)throw new N;if(1>e.atoms.length)throw new P}}class te extends B{constructor(e="Insufficient balance for requested transfer",t=null,s=null){super(e,t,s),this.name="BalanceInsufficientException"}}class se extends B{constructor(e="Amount cannot be negative!",t=null,s=null){super(e,t,s),this.name="NegativeAmountException"}}const ne=require("lodash.clonedeep"),le=require("lodash.merge");class ie{constructor(e=null){this.cellSlugOrigin=this.cellSlug=e}get cellSlugDelimiter(){return"."}cellSlugBase(){return(this.cellSlug||"").split(this.cellSlugDelimiter)[0]}toJSON(){let e=ne(this);for(let t of["remainderWallet","secret","sourceWallet","cellSlugOrigin"])e.hasOwnProperty(t)&&delete e[t];return e}check(e=null){return ie.verify(this,e)}static verify(e,t=null){return ee.molecularHash(e)&&ee.ots(e)&&ee.index(e)&&ee.continuId(e)&&ee.isotopeM(e)&&ee.isotopeT(e)&&ee.isotopeC(e)&&ee.isotopeU(e)&&ee.isotopeI(e)&&ee.isotopeV(e,t)}static jsonToObject(e){const t=le(new this,JSON.parse(e)),s=Object.keys(new this);if(!Array.isArray(t.atoms))throw new P;for(const e in Object.keys(t.atoms)){t.atoms[e]=S.jsonToObject(JSON.stringify(t.atoms[e]));for(const s of["position","walletAddress","isotope"])if(void 0===t.atoms[e][s]||null===t.atoms[e][s])throw new P("The required properties of the atom are not filled.")}for(const e in t)t.hasOwnProperty(e)&&!s.includes(e)&&delete t[e];return t.atoms=S.sortAtoms(t.atoms),t}}class ae extends ie{constructor(e,t=null,s=null,n=null){super(n),this.secret=e,this.sourceWallet=t,this.atoms=[],(s||t)&&(this.remainderWallet=s||E.create(e,t.batchId,t.characters)),this.clear()}static verify(e,t=null){return ee.molecularHash(e)&&ee.ots(e)&&ee.index(e)&&ee.continuId(e)&&ee.isotopeM(e)&&ee.isotopeT(e)&&ee.isotopeC(e)&&ee.isotopeU(e)&&ee.isotopeI(e)&&ee.isotopeV(e,t)}static generateNextAtomIndex(e){const t=e.length-1;return t>-1?e[t].index+1:0}continuIdMetaType(){return"walletBundle"}fill(e){for(let t in Object.keys(e))this[t]=e[t]}addAtom(e){return this.molecularHash=null,this.atoms.push(e),this.atoms=S.sortAtoms(this.atoms),this}finalMetas(e=null,t=null){return e=e||{},(t=t||this.sourceWallet).hasTokenUnits()&&(e.tokenUnits=t.tokenUnitsJson()),e.pubkey=t.pubkey,e.characters=t.characters,e}contextMetas(e=null,t=null){return e=e||{}}replenishTokens(e,t,s){const n=x.aggregateMeta(x.normalizeMeta(s));n.action="add";for(let e of["address","position","batchId"])if(void 0===n[e])throw new Y(`Missing ${e} in meta`);return this.molecularHash=null,this.atoms.push(new S(this.sourceWallet.position,this.sourceWallet.address,"C",this.sourceWallet.token,e,this.sourceWallet.batchId,"token",t,this.finalMetas(this.contextMetas(n)),null,this.generateIndex())),this.addUserRemainderAtom(this.remainderWallet),this.atoms=S.sortAtoms(this.atoms),this}addUserRemainderAtom(e){return this.molecularHash=null,this.atoms.push(new S(e.position,e.address,"I",e.token,null,null,"walletBundle",e.bundle,this.finalMetas({},e),null,this.generateIndex())),this.atoms=S.sortAtoms(this.atoms),this}burnTokens(e,t=null){if(e<0)throw new se("Amount to burn must be positive!");if(this.sourceWallet.balance-e<0)throw new te;return this.molecularHash=null,this.atoms.push(new S(this.sourceWallet.position,this.sourceWallet.address,"V",this.sourceWallet.token,-e,this.sourceWallet.batchId,null,null,this.finalMetas({}),null,this.generateIndex())),this.atoms.push(new S(this.remainderWallet.position,this.remainderWallet.address,"V",this.sourceWallet.token,this.sourceWallet.balance-e,this.remainderWallet.batchId,t?"walletBundle":null,t,this.finalMetas({},this.remainderWallet),null,this.generateIndex())),this.atoms=S.sortAtoms(this.atoms),this}initValue(e,t){if(this.sourceWallet.balance-t<0)throw new te;return this.molecularHash=null,this.atoms.push(new S(this.sourceWallet.position,this.sourceWallet.address,"V",this.sourceWallet.token,-t,this.sourceWallet.batchId,null,null,this.finalMetas({}),null,this.generateIndex())),this.atoms.push(new S(e.position,e.address,"V",this.sourceWallet.token,t,e.batchId,"walletBundle",e.bundle,this.finalMetas({},e),null,this.generateIndex())),this.atoms.push(new S(this.remainderWallet.position,this.remainderWallet.address,"V",this.sourceWallet.token,this.sourceWallet.balance-t,this.remainderWallet.batchId,"walletBundle",this.sourceWallet.bundle,this.finalMetas({},this.remainderWallet),null,this.generateIndex())),this.atoms=S.sortAtoms(this.atoms),this}initWalletCreation(e){this.molecularHash=null;const t={address:e.address,token:e.token,bundle:e.bundle,position:e.position,amount:0,batch_id:e.batchId,pubkey:e.pubkey,characters:e.characters};return this.atoms.push(new S(this.sourceWallet.position,this.sourceWallet.address,"C",this.sourceWallet.token,null,this.sourceWallet.batchId,"wallet",e.address,this.finalMetas(this.contextMetas(t),e),null,this.generateIndex())),this.addUserRemainderAtom(this.remainderWallet),this.atoms=S.sortAtoms(this.atoms),this}initTokenCreation(e,t,s){this.molecularHash=null;for(const t of["walletAddress","walletPosition","walletPubkey","walletCharacters"])s[t]||(s[t]=e[t.toLowerCase().substr(6)]);return s.pubkey=this.sourceWallet.pubkey,s.characters=this.sourceWallet.characters,this.atoms.push(new S(this.sourceWallet.position,this.sourceWallet.address,"C",this.sourceWallet.token,t,e.batchId,"token",e.token,this.finalMetas(this.contextMetas(s)),null,this.generateIndex())),this.addUserRemainderAtom(this.remainderWallet),this.atoms=S.sortAtoms(this.atoms),this}initShadowWalletClaim(e,t){this.molecularHash=null;let s={tokenSlug:e,walletAddress:t.address,walletPosition:t.position,batchId:t.batchId};return this.atoms.push(new S(this.sourceWallet.position,this.sourceWallet.address,"C",this.sourceWallet.token,null,null,"wallet",t.address,this.finalMetas(this.contextMetas(s)),null,this.generateIndex())),this.addUserRemainderAtom(this.remainderWallet),this.atoms=S.sortAtoms(this.atoms),this}initIdentifierCreation(e,t,s){this.molecularHash=null;let n={code:s,hash:A(t.trim())};return this.atoms.push(new S(this.sourceWallet.position,this.sourceWallet.address,"C",this.sourceWallet.token,null,null,"identifier",e,this.finalMetas(this.contextMetas(n)),null,this.generateIndex())),this.addUserRemainderAtom(this.remainderWallet),this.atoms=S.sortAtoms(this.atoms),this}initMeta(e,t,s){return this.molecularHash=null,this.atoms.push(new S(this.sourceWallet.position,this.sourceWallet.address,"M",this.sourceWallet.token,null,this.sourceWallet.batchId,t,s,this.finalMetas(e),null,this.generateIndex())),this.addUserRemainderAtom(this.remainderWallet),this.atoms=S.sortAtoms(this.atoms),this}initTokenRequest(e,t,s,n,l={}){return this.molecularHash=null,l.token=e,this.atoms.push(new S(this.sourceWallet.position,this.sourceWallet.address,"T",this.sourceWallet.token,t,null,s,n,this.finalMetas(l),null,this.generateIndex())),this.addUserRemainderAtom(this.remainderWallet),this.atoms=S.sortAtoms(this.atoms),this}initAuthorization(){return this.molecularHash=null,this.atoms.push(new S(this.sourceWallet.position,this.sourceWallet.address,"U",this.sourceWallet.token,null,this.sourceWallet.batchId,null,null,this.finalMetas(),null,this.generateIndex())),this.atoms=S.sortAtoms(this.atoms),this}clear(){return this.molecularHash=null,this.bundle=null,this.status=null,this.createdAt=String(+new Date),this.atoms=[],this}sign(e=!1,s=!0){if(0===this.atoms.length||0!==this.atoms.filter((e=>!(e instanceof S))).length)throw new P;e||(this.bundle=A(this.secret)),this.molecularHash=S.hashAtoms(this.atoms);const n=this.atoms[0],l=g(E.generatePrivateKey(this.secret,n.token,n.position),128),i=ee.normalizedHash(this.molecularHash);let a="";for(const e in l){let s=l[e];for(let n=0,l=8-i[e];n<l;n++)s=t.shake256.create(512).update(s).hex();a+=s}s&&(a=k(a));const r=g(a,Math.ceil(a.length/this.atoms.length));let o=null;for(let e=0,t=r.length;e<t;e++)this.atoms[e].otsFragment=r[e],o=this.atoms[e].position;return o}check(e=null){return ae.verify(this,e)}generateIndex(){return ae.generateNextAtomIndex(this.atoms)}}class re{static __init(e,t){this.arr=[],this.key=null,this.arr=String(t).split("."),this.key=this.arr.shift();const s=Number(this.key);Number.isInteger(s)&&(this.key=s),this.__nextKey=this.arr.length,this.__next=this.__tic(e)}static __tic(e){return!!(Array.isArray(e)||e instanceof Object)&&void 0!==e[this.key]}static has(e,t){return this.__init(e,t),!!this.__next&&(0===this.__nextKey||this.has(e[this.key],this.arr.join(".")))}static get(e,t,s=null){return this.__init(e,t),this.__next?0===this.__nextKey?e[this.key]:this.get(e[this.key],this.arr.join("."),s):s}}const oe=require("lodash.merge");class ue{constructor(e,t={}){this.$__headers=new c.Headers(t.headers||{}),this.$__needHeaders={accept:"application/json","content-type":"application/json; charset=UTF-8"},this.$__config=oe(t,{method:"POST",headers:this.$__headers}),this.setUrl(e)}getConfig(){return this.$__config}setUrl(e){this.$__url=e}getUrl(){return this.$__url}setAuthToken(e){this.$__headers.set("X-Auth-Token",e||"")}getAuthToken(){return this.$__headers.get("X-Auth-Token")||""}async send(e,t={}){e.headers.extend(t),this.$__headers.extend(e.headers.asObject());for(let e in this.$__needHeaders)this.$__headers.set(e,this.$__needHeaders[e]);this.setAuthToken(this.getAuthToken());const s=new c.Request(e,this.$__config);return s.headers.delete("content-length"),await h.fetch(s)}}class ce extends B{constructor(e="GraphQL did not provide a valid response.",t=null,s=null){super(e,t,s),this.name="InvalidResponseException"}}class he extends B{constructor(e="Authorization token missing or invalid.",t=null,s=null){super(e,t,s),this.name="UnauthenticatedException"}}class de{constructor(e,t){if(this.dataKey=null,this.errorKey="exception",this.$__payload=null,this.$__query=e,this.$__originResponse=t,this.$__response=t,void 0===this.$__response||null===this.$__response)throw new ce;if(re.has(this.$__response,this.errorKey)){const e=re.get(this.$__response,this.errorKey);if(String(e).includes("Unauthenticated"))throw new he;throw new ce}this.init()}data(){if(!this.dataKey)return this.response();if(!re.has(this.response(),this.dataKey))throw new ce;return re.get(this.response(),this.dataKey)}response(){return this.$__response}payload(){return null}query(){return this.$__query}init(){return null}}class pe{constructor(e){this.client=e,this.$__fields=null,this.$__variables=null,this.$__request=null,this.$__response=null,this.$__query=null}request(){return this.$__request}response(){return this.$__response}createRequest(e=null,t=null){return this.$__variables=this.compiledVariables(e),new c.Request(this.url(),{body:JSON.stringify({query:this.compiledQuery(t),variables:this.variables()})})}compiledVariables(e=null){return e||{}}compiledQuery(e=null){return null!==e&&(this.$__fields=e),this.$__query.replace(new RegExp("@fields","g"),this.compiledFields(this.$__fields))}compiledFields(e){const t=[];for(let s of Object.keys(e))t.push(e[s]?`${s} ${this.compiledFields(e[s])}`:`${s}`);return`{ ${t.join(", ")} }`}async execute(e=null,t=null){this.$__request=this.createRequest(e,t);let s=await this.client.send(this.$__request);return this.$__response=await this.createResponseRaw(s),this.$__response}async createResponseRaw(e){return this.createResponse(JSON.parse(await e.text()))}createResponse(e){return new de(this,e)}url(){return this.client.getUrl()}variables(){return this.$__variables}}class me extends de{constructor(e,t){super(e,t),this.dataKey="data.ContinuId",this.init()}payload(){let e=null;const t=this.data();return t&&(e=new E(null,t.tokenSlug),e.address=t.address,e.position=t.position,e.bundle=t.bundleHash,e.batchId=t.batchId,e.characters=t.characters,e.pubkey=t.pubkey,e.balance=1*t.amount),e}}class fe extends pe{constructor(e){super(e),this.$__query="query ($bundle: String!) { ContinuId(bundle: $bundle) @fields }",this.$__fields={address:null,bundleHash:null,tokenSlug:null,position:null,batchId:null,characters:null,pubkey:null,amount:null,createdAt:null}}createResponse(e){return new me(this,e)}}class ye extends de{constructor(e,t){super(e,t),this.dataKey="data.WalletBundle",this.init()}payload(){const e=this.data();if(!e||0===e.length)return null;const t={};return e.forEach((e=>{e.metas=x.aggregateMeta(e.metas),t[e.bundleHash]=e})),t}}class ge extends pe{constructor(e){super(e),this.$__query="query( $bundleHash: String, $bundleHashes: [ String! ], $key: String, $keys: [ String! ], $value: String, $values: [ String! ], $keys_values: [ MetaInput ], $latest: Boolean, $limit: Int, $skip: Int, $order: String ) { WalletBundle( bundleHash: $bundleHash, bundleHashes: $bundleHashes, key: $key, keys: $keys, value: $value, values: $values, keys_values: $keys_values, latest: $latest, limit: $limit, skip: $skip, order: $order ) @fields }",this.$__fields={bundleHash:null,metas:{molecularHash:null,position:null,key:null,value:null,createdAt:null},createdAt:null}}createResponse(e){return new ye(this,e)}static createVariables(e=null,t=null,s=null,n=!0){const l={latest:n};return e&&(l["string"==typeof e?"bundleHash":"bundleHashes"]=e),t&&(l["string"==typeof t?"key":"keys"]=t),s&&(l["string"==typeof s?"value":"values"]=s),l}}class we extends de{constructor(e,t){super(e,t),this.dataKey="data.Wallet",this.init()}static toClientWallet(e,t=null){let s;return null===e.position||void 0===e.position?s=E.create(e.bundleHash,e.tokenSlug,e.batchId,e.characters):(s=new E(t,e.tokenSlug,e.position,e.batchId,e.characters),s.address=e.address,s.bundle=e.bundleHash),e.token&&(s.tokenName=e.token.name,s.tokenSupply=e.token.amount),s.tokenUnits=e.tokenUnits,s.molecules=e.molecules,s.balance=Number(e.amount),s.pubkey=e.pubkey,s.createdAt=e.createdAt,s}getWallets(e){const t=this.data();if(!t)return null;const s=[];for(let n of t)s.push(we.toClientWallet(n,e));return s}payload(){const e=this.data();if(!e)return null;const t=[];for(let s of e)t.push(we.toClientWallet(s));return t}}class _e extends pe{constructor(e){super(e),this.$__query="query( $address: String, $bundleHash: String, $token: String, $position: String, $unspent: Boolean ) { Wallet( address: $address, bundleHash: $bundleHash, token: $token, position: $position, unspent: $unspent ) @fields }",this.$__fields={address:null,bundleHash:null,token:{name:null,amount:null},molecules:{molecularHash:null,createdAt:null},tokenSlug:null,batchId:null,position:null,amount:null,characters:null,pubkey:null,createdAt:null}}createResponse(e){return new we(this,e)}}class ke extends de{constructor(e,t){super(e,t),this.dataKey="data.Balance",this.init()}payload(){const e=this.data();return e&&e.bundleHash&&e.tokenSlug?we.toClientWallet(e):null}}class be extends pe{constructor(e){super(e),this.$__query="query( $address: String, $bundleHash: String, $token: String, $position: String ) { Balance( address: $address, bundleHash: $bundleHash, token: $token, position: $position ) @fields }",this.$__fields={address:null,bundleHash:null,tokenSlug:null,batchId:null,position:null,amount:null,characters:null,pubkey:null,createdAt:null,tokenUnits:{id:null,name:null,metas:null}}}createResponse(e){return new ke(this,e)}}class $e extends de{constructor(e,t){super(e,t),this.dataKey="data.MetaType",this.init()}payload(){const e=this.data();return e&&0!==e.length?e.pop().instances:null}}class xe extends pe{constructor(e){super(e),this.$__query="query( $metaType: String, $metaTypes: [ String! ], $metaId: String, $metaIds: [ String! ], $key: String, $keys: [ String! ], $value: String, $values: [ String! ], $count: String, $latest: Boolean, $filter: [ MetaFilter! ] ) { MetaType( metaType: $metaType, metaTypes: $metaTypes, metaId: $metaId, metaIds: $metaIds, key: $key, keys: $keys, value: $value, values: $values, count: $count, filter: $filter ) @fields }",this.$__fields={metaType:null,instances:{metaType:null,metaId:null,createdAt:null,"metas(latest:$latest)":{molecularHash:null,position:null,key:null,value:null,createdAt:null}}}}createResponse(e){return new $e(this,e)}static createVariables(e=null,t=null,s=null,n=null,l=null,i=null){const a={};return e&&(a["string"==typeof e?"metaType":"metaTypes"]=e),t&&(a["string"==typeof t?"metaId":"metaIds"]=t),s&&(a["string"==typeof s?"key":"keys"]=s),n&&(a["string"==typeof n?"value":"values"]=n),l&&(a.latest=!!l),i&&(a.filter=i),a}}class Se extends pe{constructor(e){super(e),this.$__query="query( $batchId: String ) { Batch( batchId: $batchId ) @fields }",this.$__fields={batchId:null,type:null,createdAt:null,wallet:{address:null,bundleHash:null,amount:null},metas:{key:null,value:null}}}createResponse(e){let t=new de(this,e);return t.dataKey="data.Batch",t}}class Me extends de{constructor(e,t){super(e,t),this.dataKey="data.ProposeMolecule",this.$__clientMolecule=e.molecule(),this.init()}init(){const e=re.get(this.data(),"payload");try{this.$__payload=JSON.parse(e)}catch(e){this.$__payload=null}}clientMolecule(){return this.$__clientMolecule}molecule(){const e=this.data();if(!e)return null;const t=new ie;return t.molecularHash=re.get(e,"molecularHash"),t.status=re.get(e,"status"),t.status=re.get(e,"createdAt"),t}success(){return"accepted"===this.status()}status(){return re.get(this.data(),"status","rejected")}reason(){return re.get(this.data(),"reason","Invalid response from server")}payload(){return this.$__payload}}class Ie extends pe{}const Te=require("lodash.merge");class We extends Ie{constructor(e,t=null){super(e),this.$__molecule=t,this.$__remainderWallet=null,this.$__query="mutation( $molecule: MoleculeInput! ) { ProposeMolecule( molecule: $molecule ) @fields }",this.$__fields={molecularHash:null,height:null,depth:null,status:null,reason:null,payload:null,createdAt:null,receivedAt:null,processedAt:null,broadcastedAt:null}}compiledVariables(e){const t=super.compiledVariables(e);return Te(t,{molecule:this.molecule()})}createResponse(e){return new Me(this,e)}async execute(e=null,t=null){return await super.execute(Te(e||{},{molecule:this.molecule()}),t)}remainderWallet(){return this.$__remainderWallet}molecule(){return this.$__molecule}}class ve extends Me{payloadKey(e){if(!re.has(this.payload(),e))throw new ce(`ResponseAuthorization: '${e}' key is not found in the payload.`);return re.get(this.payload(),e)}token(){return this.payloadKey("token")}time(){return this.payloadKey("time")}}class Ae extends We{fillMolecule(){this.$__molecule.initAuthorization(),this.$__molecule.sign(),this.$__molecule.check()}createResponse(e){return new ve(this,e)}}class Ce extends Me{}class qe extends We{fillMolecule(e,t,s=null){this.$__molecule.initTokenCreation(e,t,s||{}),this.$__molecule.sign(),this.$__molecule.check()}createResponse(e){return new Ce(this,e)}}class He extends We{fillMolecule(e,t,s,n,l=null){this.$__molecule.initTokenRequest(e,t,s,n,l||{}),this.$__molecule.sign(),this.$__molecule.check()}}class Ue extends Me{payload(){const e={reason:null,status:null},t=this.data();return e.reason=void 0===t.reason?"Invalid response from server":t.reason,e.status=void 0===t.status?"rejected":t.status,e}}class Ke extends We{fillMolecule(e,t){this.$__molecule.initValue(e,t),this.$__molecule.sign(),this.$__molecule.check(this.$__molecule.sourceWallet)}createResponse(e){return new Ue(this,e)}}class Re extends We{fillMolecule(e,t,s){this.$__molecule.initIdentifierCreation(e,t,s),this.$__molecule.sign(),this.$__molecule.check()}}class Oe extends We{fillMolecule(e,t){let s=E.create(this.$__molecule.secret,e,t);this.$__molecule.initShadowWalletClaim(e,s),this.$__molecule.sign(),this.$__molecule.check()}}class Ee extends B{constructor(e="Code exception",t=null,s=null){super(e,t,s),this.name="CodeException"}}class Be extends B{constructor(e="The shadow wallet does not exist",t=null,s=null){super(e,t,s),this.name="WalletShadowException"}}class je extends Me{}class Pe extends We{fillMolecule(e,t,s){this.$__molecule.initMeta(s,e,t),this.$__molecule.sign(),this.$__molecule.check()}createResponse(e){return new je(this,e)}}class Qe extends We{fillMolecule(e){this.$__molecule.initWalletCreation(e),this.$__molecule.sign(),this.$__molecule.check()}}class Ne{static splitTokenUnits(e,t){let s;[t,s]=Ne.splitUnitAmount(t);let n=[],l=[];return e.tokenUnits.forEach((e=>{s.includes(e.id)?n.push(e):l.push(e)})),[t,n,l]}static splitUnitAmount(e){let t=[];return Array.isArray(e)&&(t=e,e=e.length),[e,t]}constructor(e,t=null,s=3){this.initialize(e,t,s)}initialize(e,t=null,s=3){console.info(`KnishIOClient::initialize() - Initializing new Knish.IO client session for SDK version ${s}...`),this.reset(),this.$__client=t||new ue(e),this.$__serverSdkVersion=s}deinitialize(){console.info("KnishIOClient::deinitialize() - Clearing the Knish.IO client session..."),this.reset()}getServerSdkVersion(){return this.$__serverSdkVersion}reset(){this.$__secret="",this.$__bundle="",this.remainderWallet=null}cellSlug(){return this.$__cellSlug||null}setCellSlug(e){this.$__cellSlug=e}url(){return this.client().getUrl()}client(){return this.$__client}hasSecret(){return!!this.$__secret}setSecret(e){this.$__secret=e,this.$__bundle=A(e)}secret(){if(!this.$__secret)throw new he("KnishIOClient::secret() - Unable to find a stored secret!");return this.$__secret}bundle(){if(!this.$__bundle)throw new he("KnishIOClient::bundle() - Unable to find a stored bundle!");return this.$__bundle}async getSourceWallet(){let e=(await this.queryContinuId(this.bundle())).payload();return e||(e=new E(this.secret())),e}getRemainderWallet(){return this.remainderWallet}async createMolecule(e=null,t=null,s=null){console.info("KnishIOClient::createMolecule() - Creating a new molecule...");const n=e||this.secret();let l=t;return!t&&this.lastMoleculeQuery&&"AUTH"!==this.getRemainderWallet().token&&this.lastMoleculeQuery&&this.lastMoleculeQuery.response()&&this.lastMoleculeQuery.response().success()&&(l=this.getRemainderWallet()),null===l&&(l=await this.getSourceWallet()),this.remainderWallet=s||E.create(n,l.token,l.batchId,l.characters),new ae(n,l,this.getRemainderWallet(),this.cellSlug())}createQuery(e){return new e(this.client())}async createMoleculeMutation(e,t=null){console.info(`KnishIOClient::createMoleculeQuery() - Creating a new ${e.name} query...`);let s=t||await this.createMolecule();const n=new e(this.client(),s);if(!(n instanceof We))throw new Ee(`${this.constructor.name}::createMoleculeMutation - required class instance of MutationProposeMolecule.`);return this.lastMoleculeQuery=n,n}async requestAuthToken(e,t=null){if(console.info("KnishIOClient::requestAuthToken() - Requesting authorization token..."),this.setSecret(e),this.$__cellSlug=t||this.cellSlug(),this.$__serverSdkVersion>2){let e=await this.createMolecule(this.secret(),new E(this.secret(),"AUTH"));const t=await this.createMoleculeMutation(Ae,e);t.fillMolecule();const s=await t.execute();if(!s.success())throw console.warn("KnishIOClient::requestAuthToken() - Unable to retrieve auth token..."),new he(s.reason());{const e=s.token();this.client().setAuthToken(e),console.info(`KnishIOClient::requestAuthToken() - Successfully retrieved auth token ${s.token()}...`)}return s}console.warn("KnishIOClient::requestAuthToken() - Server SDK version does not require an auth token...")}async queryBalance(e,t=null){const s=this.createQuery(be);return await s.execute({bundleHash:t||this.bundle(),token:e})}queryMeta(e,t=null,s=null,n=null,l=null,i=null,a=null){console.info(`KnishIOClient::queryMeta() - Querying meta type data for metaType: ${e}, metaId: ${t}, key: ${s}, value: ${n}, latest: ${l}...`);const r=this.createQuery(xe),o=xe.createVariables(e,t,s,n,l,a);return r.execute(o,i).then((e=>e.payload()))}async queryBatch(e){console.info(`KnishIOClient::queryBatch() - Querying cascade meta instance data for batchId: ${e}...`);const t=this.createQuery(Se);return await t.execute({batchId:e})}async createWallet(e){const t=new E(this.secret(),e),s=await this.createMoleculeMutation(Qe);return s.fillMolecule(t),await s.execute()}async createToken(e,t,s=null){const n=new E(this.secret(),e);"stackable"===re.get(s||{},"fungibility")&&(n.batchId=C());const l=await this.createMoleculeMutation(qe);return l.fillMolecule(n,t,s||{}),await l.execute()}async createUnitableToken(e,t,s=null,n=null){return s=s||{},n=n||E.generateBatchId(),s.tokenUnits=JSON.stringify(t),s.fungibility="stackable",s.splittable=1,s.decimals=0,await this.createToken(e,t.length,s,n)}async createMeta(e,t,s=null){const n=await this.createMoleculeMutation(Pe,await this.createMolecule(this.secret(),await this.getSourceWallet()));return n.fillMolecule(e,t,s),await n.execute()}async createIdentifier(e,t,s){const n=await this.createMoleculeMutation(Re);return n.fillMolecule(e,t,s),await n.execute()}queryWallets(e=null,t=!0){console.info(`KnishIOClient::queryWallets() - Querying wallets${e?` for ${e}`:""}...`);return this.createQuery(_e).execute({bundleHash:e||this.bundle(),unspent:t}).then((e=>e.getWallets()))}queryShadowWallets(e="KNISH",t=null){t=t||this.bundle(),console.info(`KnishIOClient::queryShadowWallets() - Querying ${e} shadow wallets for ${t}...`);return this.createQuery(_e).execute({bundleHash:t,token:e}).then((e=>e.payload()))}queryBundle(e=null,t=null,s=null,n=!0,l=null){console.info(`KnishIOClient::queryBundle() - Querying wallet bundle metadata${e?` for ${e}`:""}...`);const i=this.createQuery(ge),a=ge.createVariables(null!==e?e:this.bundle(),t,s,n);return i.execute(a,l).then((e=>e.payload()))}async queryContinuId(e){return await this.createQuery(fe).execute({bundle:e})}async requestTokens(e,t,s,n=null,l=null){let i,a,r;n=n||{},s?("[object String]"===Object.prototype.toString.call(s)&&(E.isBundleHash(s)?(i="walletBundle",a=s):s=E.create(s,e)),s instanceof E&&(i="wallet",n.position=s.position,n.bundle=s.bundle,a=s.address)):(i="walletBundle",a=this.bundle()),[t,r]=Ne.splitUnitAmount(t),r&&(n.tokenUnits=JSON.stringify(r));const o=await this.createMoleculeMutation(He);return o.fillMolecule(e,t,i,a,n),await o.execute()}async claimShadowWallet(e,t,s=null){const n=await this.createMoleculeMutation(Oe,s);return n.fillMolecule(e,t),await n.execute()}async claimShadowWallets(e){const t=await this.queryShadowWallets(e);if(!t||!Array.isArray(t))throw new Be;t.forEach((e=>{if(!e.isShadow())throw new Be}));let s=[];for(const n of t)s.push(await this.claimShadowWallet(e,n.batchId));return s}async transferToken(e,t,s,n=null){const l=(await this.queryBalance(t)).payload();let i,a;if([s,i,a]=Ne.splitTokenUnits(l,s),console.log(l),console.log([s,i,a]),null===l||T.cmp(l.balance,s)<0)throw new z;let r=e instanceof E?e:(await this.queryBalance(t,e)).payload();null===r&&(r=E.create(e,t)),null!==n?r.batchId=n:r.initBatchId(l,s),r.tokenUnits=i,this.remainderWallet=E.create(this.secret(),t,r.batchId,l.characters),this.remainderWallet.tokenUnits=a;const o=await this.createMolecule(null,l,this.remainderWallet),u=await this.createMoleculeMutation(Ke,o);return u.fillMolecule(r,s),await u.execute()}}e.Atom=S,e.KnishIOClient=Ne,e.Meta=x,e.Molecule=ae,e.Test=class{constructor(e){this.secrets=[v(),v()],this.tokenSlugs=["TESTTOKEN","UTENVSTACKABLE","UTSTACKUNIT","UTENVSTACKUNIT"],this.graphqlUrl=e,this.clients={},this.tokenUnits=[["unit_id_1","unit_name_1","unit_meta_1"],["unit_id_2","unit_name_2","unit_meta_2"],["unit_id_3","unit_name_3","unit_meta_3"],["unit_id_4","unit_name_4","unit_meta_4"],["unit_id_5","unit_name_5","unit_meta_5"],["unit_id_6","unit_name_6","unit_meta_6"],["unit_id_7","unit_name_7","unit_meta_7"],["unit_id_8","unit_name_8","unit_meta_8"],["unit_id_9","unit_name_9","unit_meta_9"],["unit_id_10","unit_name_10","unit_meta_10"],["unit_id_11","unit_name_11","unit_meta_11"]]}async testAll(){await this.client(this.secrets[0]),await this.client(this.secrets[1]),await this.testCreateToken(),await this.testCreateWallet(),await this.testCreateMeta(),await this.testCreateIdentifier(),await this.testRequestTokens(),await this.testTransferToken(),await this.testClaimShadowWallet(),await this.testQueryMeta(),await this.testQueryWallets(),await this.testQueryShadowWallets(),await this.testQueryBundle(),await this.testQueryBalance()}async testCreateToken(){let e=await this.client(this.secrets[0]),t=await this.client(process.env.SECRET_TOKEN_KNISH),s={};s[0]=await e.createToken(this.tokenSlugs[0],1e3,{name:this.tokenSlugs[0],fungibility:"stackable",supply:"limited",decimals:0,icon:"icon"}),this.checkResponse(s[0],"testCreateToken.0"),s[1]=await t.createToken(this.tokenSlugs[1],1e3,{name:this.tokenSlugs[1],fungibility:"stackable",supply:"limited",decimals:0,icon:"icon"}),this.checkResponse(s[1],"testCreateToken.1"),s[2]=await e.createUnitableToken(this.tokenSlugs[2],this.tokenUnits,{name:this.tokenSlugs[2],supply:"limited"},"batch_0"),this.checkResponse(s[2],"testCreateToken.2"),s[3]=await t.createUnitableToken(this.tokenSlugs[3],this.tokenUnits,{name:this.tokenSlugs[3],supply:"limited"},"batch_0"),this.checkResponse(s[3],"testCreateToken.3")}async testCreateWallet(){let e=await this.client(this.secrets[0]),t=await e.createWallet(this.tokenSlugs[1]);this.checkResponse(t,"testCreateWallet")}async testCreateMeta(){let e=await this.client(this.secrets[0]),t=await e.createMeta("metaType","metaId",{key1:"value1",key2:"value2"});this.checkResponse(t,"testCreateMeta")}async testCreateIdentifier(){let e=await this.client(this.secrets[0]),t=await e.createIdentifier("email","test@test.com",1234);this.checkResponse(t,"testCreateIdentifier")}async testRequestTokens(){let e=await this.client(this.secrets[0]),t=await e.requestTokens(this.tokenSlugs[1],10,this.secrets[0]);this.checkResponse(t,"testRequestTokens")}async testTransferToken(){let e,t=A(this.secrets[1]),s=await this.client(this.secrets[0]);e=await s.transferToken(t,this.tokenSlugs[0],10,"batch_1"),this.checkResponse(e,"testTransferToken");e=await s.transferToken(t,this.tokenSlugs[2],["unit_id_1","unit_id_2"],"batch_1"),this.checkResponse(e,"testTransferUnitToken")}async testClaimShadowWallet(){let e=await this.client(this.secrets[1]),t=await e.queryBalance(this.tokenSlugs[0]),s=await e.claimShadowWallet(this.tokenSlugs[0],t.payload().batchId);this.checkResponse(s,"testClaimShadowWallet")}async testQueryMeta(){let e=await this.client(this.secrets[0]),t=await e.queryMeta("metaType","metaId");this.checkResponse(t,"testQueryMeta")}async testQueryWallets(){let e=await this.client(this.secrets[0]),t=await e.queryWallets();this.checkResponse(t,"testQueryWallets")}async testQueryShadowWallets(){let e=await this.client(this.secrets[1]),t=await e.queryShadowWallets(this.tokenSlugs[0]);this.checkResponse(t,"testQueryShadowWallets")}async testQueryBundle(){let e=await this.client(this.secrets[0]),t=await e.queryBundle();this.checkResponse(t,"testQueryBundle")}async testQueryContinuId(){let e=A(this.secrets[0]),t=await this.client(this.secrets[0]),s=await t.queryContinuId(e);this.checkResponse(s,"testQueryContinuId")}async testQueryBalance(){let e=await this.client(this.secrets[0]),t=await e.queryBalance(this.tokenSlugs[0]);this.checkResponse(t,"testQueryBalance")}async client(e,t="unit_test"){if(!this.clients[e]){this.clients[e]=new Ne(this.graphqlUrl);let s=await this.clients[e].requestAuthToken(e,t);this.checkResponse(s,"requestAuthToken")}return this.clients[e]}checkResponse(e,t){console.log(" ############### "+t+" ###############"),console.log(e),e instanceof Me?(e.success()||this.debug(e),console.assert("accepted"==e.status(),e)):this.debug(e)}debug(e){e.data&&re.get(e.data()||{},"reason")?console.log(e.data().reason):console.log(e)}},e.Wallet=E,e.base64ToHex=b,e.bufferToHexString=function(e){return y.toHex(e,{})},e.charsetBaseConvert=_,e.chunkSubstr=g,e.decryptMessage=U,e.encryptMessage=H,e.generateBundleHash=A,e.generateEncPrivateKey=K,e.generateEncPublicKey=R,e.generateSecret=v,e.hashShare=O,e.hexStringToBuffer=function(e){return y.toUint8Array(e)},e.hexToBase64=k,e.isHex=$,e.randomString=w,Object.defineProperty(e,"__esModule",{value:!0})}));
