"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("js-sha3"),t=require("big-integer"),s=require("@stablelib/base64"),n=require("big-integer/BigInteger"),l=require("base-x"),r=require("buffer"),i=require("tweetnacl"),a=require("tweetnacl-sealedbox-js"),o=require("@stablelib/utf8"),u=require("servie"),c=require("popsicle");function h(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var d=h(t),p=h(n),m=h(l);class y{static toHex(e,t){const s=(e,t)=>{const s=t?["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F"]:["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"];return s[Math.floor(e/16)]+s[e%16]},n=Object.assign({grouping:0,rowlength:0,uppercase:!1},t||{});let l="",r=0,i=0;for(let t=0;t<e.length&&(l+=s(e[t],n.uppercase),t!==e.length-1);++t)n.grouping>0&&++r===n.grouping&&(r=0,n.rowlength>0&&++i===n.rowlength?(i=0,l+="\n"):l+=" ");return l}static toUint8Array(e){let t=e.toLowerCase().replace(/\s/g,"");t.length%2==1&&(t="0"+t);let s=new Uint8Array(Math.floor(t.length/2)),n=-1;for(let e=0;e<t.length;++e){let l=t[e],r=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"].indexOf(l);if(-1===r)throw Error("unexpected character");-1===n?n=16*r:(s[Math.floor(e/2)]=n+r,n=-1)}return s}}function f(e,t){const s=Math.ceil(e.length/t),n=new Array(s);for(let l=0,r=0;l<s;++l,r+=t)n[l]=e.substr(r,t);return n}function g(e=256,t="abcdef0123456789"){let s=new Uint8Array(e);return(window.crypto||window.msCrypto).getRandomValues(s),s=s.map((e=>t.charCodeAt(e%t.length))),String.fromCharCode.apply(null,s)}function b(e,t,s,n,l){if(n=n||"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz~`!@#$%^&*()-_=+[{]}\\|;:'\",<.>/?¿¡",l=l||n,t>n.length||s>l.length)return console.warn("Can't convert",e,"to base",s,"greater than symbol table length. src-table:",n.length,"dest-table:",l.length),!1;let r=d.default(0);for(let s=0;s<e.length;s++)r=r.multiply(t).add(n.indexOf(e.charAt(s)));if(r.lesser(0))return 0;let i=r.mod(s),a=l.charAt(i),o=r.divide(s);for(;!o.equals(0);)i=o.mod(s),o=o.divide(s),a=l.charAt(i)+a;return a}function w(e){return s.encode(y.toUint8Array(e))}function k(e){return y.toHex(s.decode(e),{})}function _(e){return/^[A-F0-9]+$/i.test(e)}String.prototype.trim||(String.prototype.trim=function(){return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")});class ${constructor(e,t,s,n=null){this.modelType=e,this.modelId=t,this.meta=s,this.snapshotMolecule=n,this.createdAt=+new Date}static normalizeMeta(e){if("[object Object]"===Object.prototype.toString.call(e)){const t=[];for(const s in e)e.hasOwnProperty(s)&&null!==e[s]&&t.push({key:s,value:e[s]});return t}return e}static aggregateMeta(e){const t={};if("[object Array]"===Object.prototype.toString.call(e))for(let s of e)t[s.key]=s.value;return Object.keys(t).length>0?t:e}}class x{constructor(e=null,t=null,s=null,n=null,l=null,r=null,i=null,a=null,o=null,u=null,c=null){this.position=e,this.walletAddress=t,this.isotope=s,this.token=n,this.value=null!==l?String(l):null,this.batchId=r,this.metaType=i,this.metaId=a,this.meta=o?$.normalizeMeta(o):[],this.index=c,this.otsFragment=u,this.createdAt=String(+new Date)}static jsonToObject(e){const t=Object.assign(new x,JSON.parse(e)),s=Object.keys(new x);for(const e in t)t.hasOwnProperty(e)&&!s.includes(e)&&delete t[e];return t}static hashAtoms(t,s="base17"){const n=e.shake256.create(256),l=t.length,r=x.sortAtoms(t);for(const e of r){n.update(String(l));for(const t in e)if(e.hasOwnProperty(t)){if(["batchId","pubkey","characters"].includes(t)&&null===e[t])continue;if(["otsFragment","index"].includes(t))continue;if("meta"===t){e[t]=$.normalizeMeta(e[t]);for(const s of e[t])void 0!==s.value&&null!==s.value&&(n.update(String(s.key)),n.update(String(s.value)));continue}if(["position","walletAddress","isotope"].includes(t)){n.update(null===e[t]?"":String(e[t]));continue}null!==e[t]&&n.update(null===e[t]?"":String(e[t]))}}switch(s){case"hex":return n.hex();case"array":return n.array();default:return b(n.hex(),16,17,"0123456789abcdef","0123456789abcdefg").padStart(64,"0")}}static sortAtoms(e){const t=[...e];return t.sort(((e,t)=>e.index===t.index?0:e.index<t.index?-1:1)),t}}class I{constructor(e={}){this.$options=Object.assign({characters:"GMP"},e),this.$encoder=m.default(this[this.$options.characters]||this.GMP)}encode(e){return this.$encoder.encode(r.Buffer.from(e))}decode(e){return this.$encoder.decode(e)}get GMP(){return"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuv"}get BITCOIN(){return"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}get FLICKR(){return"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}get RIPPLE(){return"rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz"}get IPFS(){return"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}}class S{static val(e){return Math.abs(1e18*e)<1?0:e}static cmp(e,t,s=!1){const n=1e18*S.val(e),l=1e18*S.val(t);return Math.abs(n-l)<1?0:n>l?1:-1}static equal(e,t){return 0===S.cmp(e,t)}}class M{constructor(e=null){this.base=new I(e)}encrypt(e,t){return this.encode(a.seal(o.encode(JSON.stringify(e)),this.decode(t)))}decrypt(e,t,s){try{return JSON.parse(o.decode(a.open(this.decode(e),this.decode(s),this.decode(t))))}catch(e){return null}}generatePrivateKey(t){const s=e.shake256.create(8*i.box.secretKeyLength);return s.update(t),this.base.encode(r.Buffer.from(s.digest()))}generatePublicKey(e){const t=i.box.keyPair.fromSecretKey(this.decode(e));return this.encode(t.publicKey)}shortHash(t){const s=e.shake256.create(64);return s.update(t),this.base.encode(r.Buffer.from(s.digest()))}decode(e){return this.base.decode(e)}encode(e){return this.base.encode(e)}}function W(t){console.info("Crypto::bundle() - Computing wallet bundle from secret...");const s=e.shake256.create(256);return s.update(t),s.hex()}function v(e,t,s=null){return new M(s).encrypt(e,t)}function A(e,t,s,n=null){return new M(n).decrypt(e,t,s)}function T(e,t=null){return new M(t).generatePrivateKey(e)}function H(e,t=null){return new M(t).generatePublicKey(e)}function q(e,t=null){return new M(t).shortHash(e)}class O{constructor(e,t=null,s=null,n=null){this.token=t||"USER",this.balance=0,this.molecules={},this.bundle=e,this.batchId=s,this.characters="undefined"!==(new I)[n]?n:null,this.key=null,this.address=null,this.position=null,this.privkey=null,this.pubkey=null}}class C{constructor(e=null,t="USER",s=null,n=64,l=null){this.position=s||g(n,"abcdef0123456789"),this.token=t,this.balance=0,this.molecules={},this.batchId=null,this.characters="undefined"!==(new I)[l]?l:null,this.key=null,this.address=null,this.bundle=null,this.privkey=null,this.pubkey=null,e&&this.prepareKeys(e)}static create(e,t,s=null,n=null){if(C.isBundleHash(e))return new O(e,t,s,n);const l=new C(e,t);return l.batchId=s,l.characters="undefined"!==(new I)[n]?n:null,l}static isBundleHash(e){return"string"==typeof e&&(64===e.length&&_(e))}prepareKeys(e){null===this.key&&null===this.address&&null===this.bundle&&(this.key=C.generatePrivateKey(e,this.token,this.position),this.address=C.generatePublicKey(this.key),this.bundle=W(e),this.getMyEncPrivateKey(),this.getMyEncPublicKey())}static generateBatchId(){return g(64)}initBatchId(e,t){e.batchId&&(this.batchId=!this.batchId&&S.cmp(e.balance,t)>0?C.generateBatchId():e.batchId)}getMyEncPrivateKey(){return null===this.privkey&&null!==this.key&&(this.privkey=T(this.key,this.characters)),this.privkey}getMyEncPublicKey(){const e=this.getMyEncPrivateKey();return!this.pubkey&&e&&(this.pubkey=H(e,this.characters)),this.pubkey}encryptMyMessage(e){const t={};for(let s=1,n=arguments.length;s<n;s++)t[q(arguments[s],this.characters)]=v(e,arguments[s],this.characters);return t}decryptMyMessage(e){const t=this.getMyEncPublicKey();let s=e;return null!==e&&"object"==typeof e&&"[object Object]"===Object.prototype.toString.call(e)&&(s=e[q(t,this.characters)]||""),A(s,this.getMyEncPrivateKey(),t,this.characters)}encryptString(e,t){if(e){const s=this.getMyEncPublicKey();"string"==typeof t&&(t=new Array(t));const n=this.encryptMyMessage(e,s,...t);return btoa(JSON.stringify(n))}}decryptString(e,t=null){if(e)try{const s=JSON.parse(atob(e));return this.decryptMyMessage(s)||t}catch(s){return console.error(s),t||e}}static generatePrivateKey(t,s,n){const l=p.default(t,16).add(p.default(n,16)),r=e.shake256.create(8192);return r.update(l.toString(16)),s&&r.update(s),e.shake256.create(8192).update(r.hex()).hex()}static generatePublicKey(t){const s=f(t,128),n=e.shake256.create(8192);for(const t in s){let l=s[t];for(let t=1;t<=16;t++)l=e.shake256.create(512).update(l).hex();n.update(l)}return e.shake256.create(256).update(n.hex()).hex()}}class K extends TypeError{constructor(e=null,t=null,s=null){if(super(e,t,s),null===e)throw new this("Unknown "+this.constructor.name);this.name="BaseException"}toString(){return`${this.name}: ${this.message}.\nStack:\n${this.stack}`}}class R extends K{constructor(e="There is an atom without an index",t=null,s=null){super(e,t,s),this.name="AtomIndexException"}}class E extends K{constructor(e="The molecule does not contain atoms",t=null,s=null){super(e,t,s),this.name="AtomsMissingException"}}class B extends K{constructor(e="The molecular hash does not match",t=null,s=null){super(e,t,s),this.name="MolecularHashMismatchException"}}class U extends K{constructor(e="The molecular hash is missing",t=null,s=null){super(e,t,s),this.name="MolecularHashMissingException"}}class P extends K{constructor(e="OTS malformed",t=null,s=null){super(e,t,s),this.name="SignatureMalformedException"}}class j extends K{constructor(e="One-time signature (OTS) does not match!",t=null,s=null){super(e,t,s),this.name="SignatureMismatchException"}}class V extends K{constructor(e="Insufficient balance to make transfer",t=null,s=null){super(e,t,s),this.name="TransferBalanceException"}}class N extends K{constructor(e="Token transfer atoms are malformed",t=null,s=null){super(e,t,s),this.name="TransferMalformedException"}}class F extends K{constructor(e="Token slugs for wallets in transfer do not match!",t=null,s=null){super(e,t,s),this.name="TransferMismatchedException"}}class z extends K{constructor(e="Invalid remainder provided",t=null,s=null){super(e,t,s),this.name="TransferRemainderException"}}class Q extends K{constructor(e="Sender and recipient(s) cannot be the same",t=null,s=null){super(e,t,s),this.name="TransferToSelfException"}}class D extends K{constructor(e="Token transfer atoms are unbalanced",t=null,s=null){super(e,t,s),this.name="TransferUnbalancedException"}}class J extends K{constructor(e="Empty meta data.",t=null,s=null){super(e,t,s),this.name="MetaMissingException"}}class L extends K{constructor(e="Wrong type of token for this isotope",t=null,s=null){super(e,t,s),this.name="WrongTokenTypeException"}}class G{static continuId(e){G.missing(e);if("USER"===e.atoms[0].token&&G.isotopeFilter("I",e.atoms).length<1)throw new E("Missing atom ContinuID");return!0}static isotopeI(e){G.missing(e);for(let t of G.isotopeFilter("I",e.atoms)){if("USER"!==t.token)throw new L(`Invalid token name for "${t.isotope}" isotope`);if(0===t.index)throw new R(`Invalid isotope "${t.isotope}" index`)}return!0}static isotopeU(e){G.missing(e);for(let t of G.isotopeFilter("U",e.atoms)){if("AUTH"!==t.token)throw new L(`Invalid token name for "${t.isotope}" isotope`);if(0!==t.index)throw new R(`Invalid isotope "${t.isotope}" index`)}return!0}static isotopeM(e){G.missing(e);for(let t of G.isotopeFilter("M",e.atoms)){if(t.meta.length<1)throw new J;if("USER"!==t.token)throw new L(`Invalid token name for "${t.isotope}" isotope`)}return!0}static isotopeC(e){G.missing(e);for(let t of G.isotopeFilter("C",e.atoms)){if("USER"!==t.token)throw new L(`Invalid token name for "${t.isotope}" isotope`);if(0!==t.index)throw new R(`Invalid isotope "${t.isotope}" index`)}return!0}static isotopeT(e){G.missing(e);for(let t of G.isotopeFilter("T",e.atoms)){const e=$.aggregateMeta($.normalizeMeta(t.meta));if("wallet"===String(t.metaType).toLowerCase())for(let t of["position","bundle"])if(!e.hasOwnProperty(t)||!Boolean(e[t]))throw new J(`No or not defined "${t}" in meta`);for(let t of["token"])if(!e.hasOwnProperty(t)||!Boolean(e[t]))throw new J(`No or not defined "${t}" in meta`);if("USER"!==t.token)throw new L(`Invalid token name for "${t.isotope}" isotope`);if(0!==t.index)throw new R(`Invalid isotope "${t.isotope}" index`)}return!0}static isotopeV(e,t=null){G.missing(e);const s=G.isotopeFilter("V",e.atoms);if(0===s.length)return!0;const n=e.atoms[0];if("V"===n.isotope&&2===s.length){const e=s[s.length-1];if(n.token!==e.token)throw new F;if(e.value<0)throw new N;return!0}let l=0,r=0;for(let t in e.atoms)if(e.atoms.hasOwnProperty(t)){const s=e.atoms[t];if("V"!==s.isotope)continue;if(r=1*s.value,Number.isNaN(r))throw new TypeError('Invalid isotope "V" values');if(s.token!==n.token)throw new F;if(t>0){if(r<0)throw new N;if(s.walletAddress===n.walletAddress)throw new Q}l+=r}if(l!==r)throw new D;if(t){if(r=1*n.value,Number.isNaN(r))throw new TypeError('Invalid isotope "V" values');const e=1*t.balance+1*r;if(e<0)throw new V;if(e!==l)throw new z}else if(0!==r)throw new z;return!0}static molecularHash(e){if(G.missing(e),e.molecularHash!==x.hashAtoms(e.atoms))throw new B;return!0}static ots(t){G.missing(t);const s=t.atoms[0].walletAddress,n=G.normalizedHash(t.molecularHash);let l=t.atoms.map((e=>e.otsFragment)).reduce(((e,t)=>e+t));if(2048!==l.length&&(l=k(l),2048!==l.length))throw new P;const r=f(l,128);let i="";for(const t in r){let s=r[t];for(let l=0,r=8+n[t];l<r;l++)s=e.shake256.create(512).update(s).hex();i+=s}const a=e.shake256.create(8192).update(i).hex();if(e.shake256.create(256).update(a).hex()!==s)throw new j;return!0}static index(e){G.missing(e);for(let t of e.atoms)if(null===t.index)throw new R;return!0}static isotopeFilter(e,t){return(t=t||[]).filter((t=>e===t.isotope))}static normalizedHash(e){return G.normalize(G.enumerate(e))}static enumerate(e){const t={0:-8,1:-7,2:-6,3:-5,4:-4,5:-3,6:-2,7:-1,8:0,9:1,a:2,b:3,c:4,d:5,e:6,f:7,g:8},s=[],n=e.toLowerCase().split("");for(let e=0,l=n.length;e<l;++e){const l=n[e];void 0!==t[l]&&(s[e]=t[l])}return s}static normalize(e){let t=e.reduce(((e,t)=>e+t));const s=t<0;for(;t<0||t>0;)for(const n of Object.keys(e)){if(s?e[n]<8:e[n]>-8){s?(++e[n],++t):(--e[n],--t);if(0===t)break}}return e}static missing(e){if(null===e.molecularHash)throw new U;if(1>e.atoms.length)throw new E}}class X extends K{constructor(e="Insufficient balance for requested transfer",t=null,s=null){super(e,t,s),this.name="BalanceInsufficientException"}}class Y extends K{constructor(e="Amount cannot be negative!",t=null,s=null){super(e,t,s),this.name="NegativeAmountException"}}const Z=require("lodash.clonedeep"),ee=require("lodash.merge");class te{constructor(e=null){this.cellSlugOrigin=this.cellSlug=e}get cellSlugDelimiter(){return"."}cellSlugBase(){return(this.cellSlug||"").split(this.cellSlugDelimiter)[0]}toJSON(){let e=Z(this);for(let t of["remainderWallet","secret","sourceWallet","cellSlugOrigin"])e.hasOwnProperty(t)&&delete e[t];return e}check(e=null){return te.verify(this,e)}static verify(e,t=null){return G.molecularHash(e)&&G.ots(e)&&G.index(e)&&G.continuId(e)&&G.isotopeM(e)&&G.isotopeT(e)&&G.isotopeC(e)&&G.isotopeU(e)&&G.isotopeI(e)&&G.isotopeV(e,t)}static jsonToObject(e){const t=ee(new this,JSON.parse(e)),s=Object.keys(new this);if(!Array.isArray(t.atoms))throw new E;for(const e in Object.keys(t.atoms)){t.atoms[e]=x.jsonToObject(JSON.stringify(t.atoms[e]));for(const s of["position","walletAddress","isotope"])if(void 0===t.atoms[e][s]||null===t.atoms[e][s])throw new E("The required properties of the atom are not filled.")}for(const e in t)t.hasOwnProperty(e)&&!s.includes(e)&&delete t[e];return t.atoms=x.sortAtoms(t.atoms),t}}const se=require("lodash.merge");class ne extends te{constructor(e,t=null,s=null,n=null){super(n),this.secret=e,this.sourceWallet=t,this.atoms=[],(s||t)&&(this.remainderWallet=s||C.create(e,t.batchId,t.characters)),this.clear()}static mergeMetas(e,t={}){return se(e||{},t)}static verify(e,t=null){return G.molecularHash(e)&&G.ots(e)&&G.index(e)&&G.continuId(e)&&G.isotopeM(e)&&G.isotopeT(e)&&G.isotopeC(e)&&G.isotopeU(e)&&G.isotopeI(e)&&G.isotopeV(e,t)}static generateNextAtomIndex(e){const t=e.length-1;return t>-1?e[t].index+1:0}continuIdMetaType(){return"walletBundle"}fill(e){for(let t in Object.keys(e))this[t]=e[t]}addAtom(e){return this.molecularHash=null,this.atoms.push(e),this.atoms=x.sortAtoms(this.atoms),this}replenishTokens(e,t,s){const n=$.aggregateMeta($.normalizeMeta(s));n.action="add";for(let e of["address","position","batchId"])if(void 0===n[e])throw new J(`Missing ${e} in meta`);return this.molecularHash=null,this.atoms.push(new x(this.sourceWallet.position,this.sourceWallet.address,"C",this.sourceWallet.token,e,this.sourceWallet.batchId,"token",t,ne.mergeMetas({pubkey:this.sourceWallet.pubkey,characters:this.sourceWallet.characters},n),null,this.generateIndex())),this.addUserRemainderAtom(this.remainderWallet),this.atoms=x.sortAtoms(this.atoms),this}addUserRemainderAtom(e){return this.molecularHash=null,this.atoms.push(new x(e.position,e.address,"I",e.token,null,null,"walletBundle",e.bundle,{pubkey:e.pubkey,characters:e.characters},null,this.generateIndex())),this.atoms=x.sortAtoms(this.atoms),this}burnTokens(e,t=null){if(e<0)throw new Y("Amount to burn must be positive!");if(this.sourceWallet.balance-e<0)throw new X;return this.molecularHash=null,this.atoms.push(new x(this.sourceWallet.position,this.sourceWallet.address,"V",this.sourceWallet.token,-e,this.sourceWallet.batchId,null,null,{pubkey:this.sourceWallet.pubkey,characters:this.sourceWallet.characters},null,this.generateIndex())),this.atoms.push(new x(this.remainderWallet.position,this.remainderWallet.address,"V",this.sourceWallet.token,this.sourceWallet.balance-e,this.remainderWallet.batchId,t?"walletBundle":null,t,{pubkey:this.remainderWallet.pubkey,characters:this.remainderWallet.characters},null,this.generateIndex())),this.atoms=x.sortAtoms(this.atoms),this}initValue(e,t){if(this.sourceWallet.balance-t<0)throw new X;return this.molecularHash=null,this.atoms.push(new x(this.sourceWallet.position,this.sourceWallet.address,"V",this.sourceWallet.token,-t,this.sourceWallet.batchId,null,null,{pubkey:this.sourceWallet.pubkey,characters:this.sourceWallet.characters},null,this.generateIndex())),this.atoms.push(new x(e.position,e.address,"V",this.sourceWallet.token,t,e.batchId,"walletBundle",e.bundle,{pubkey:e.pubkey,characters:e.characters},null,this.generateIndex())),this.atoms.push(new x(this.remainderWallet.position,this.remainderWallet.address,"V",this.sourceWallet.token,this.sourceWallet.balance-t,this.remainderWallet.batchId,"walletBundle",this.sourceWallet.bundle,{pubkey:this.remainderWallet.pubkey,characters:this.remainderWallet.characters},null,this.generateIndex())),this.atoms=x.sortAtoms(this.atoms),this}initWalletCreation(e){this.molecularHash=null;const t={address:e.address,token:e.token,bundle:e.bundle,position:e.position,amount:0,batch_id:e.batchId,pubkey:e.pubkey,characters:e.characters};return this.atoms.push(new x(this.sourceWallet.position,this.sourceWallet.address,"C",this.sourceWallet.token,null,this.sourceWallet.batchId,"wallet",e.address,t,null,this.generateIndex())),this.addUserRemainderAtom(this.remainderWallet),this.atoms=x.sortAtoms(this.atoms),this}initIdentifierCreation(e,t,s){return this.molecularHash=null,this.atoms.push(new x(this.sourceWallet.position,this.sourceWallet.address,"C",this.sourceWallet.token,null,null,"identifier",e,{pubkey:this.sourceWallet.pubkey,characters:this.sourceWallet.characters,code:s,hash:W(source.trim())},null,this.generateIndex())),this.addUserRemainderAtom(this.remainderWallet),this.atoms=x.sortAtoms(this.atoms),this}initTokenCreation(e,t,s){this.molecularHash=null;for(const t of["walletAddress","walletPosition","walletPubkey","walletCharacters"])s[t]||(s[t]=e[t.toLowerCase().substr(6)]);return s.pubkey=this.sourceWallet.pubkey,s.characters=this.sourceWallet.characters,this.atoms.push(new x(this.sourceWallet.position,this.sourceWallet.address,"C",this.sourceWallet.token,t,e.batchId,"token",e.token,s,null,this.generateIndex())),this.addUserRemainderAtom(this.remainderWallet),this.atoms=x.sortAtoms(this.atoms),this}initShadowWalletClaim(e,t={}){return this.molecularHash=null,this.atoms.push(new x(this.sourceWallet.position,this.sourceWallet.address,"C",this.sourceWallet.token,null,e.batchId,"shadowWallet",e.token,ne.mergeMetas({pubkey:this.sourceWallet.pubkey,characters:this.sourceWallet.characters},t),null,this.generateIndex())),this.addUserRemainderAtom(this.remainderWallet),this.atoms=x.sortAtoms(this.atoms),this}initMeta(e,t,s){this.molecularHash=null;const n={};return this.sourceWallet.pubkey&&(n.pubkey=this.sourceWallet.pubkey),this.sourceWallet.characters&&(n.characters=this.sourceWallet.characters),this.atoms.push(new x(this.sourceWallet.position,this.sourceWallet.address,"M",this.sourceWallet.token,null,this.sourceWallet.batchId,t,s,ne.mergeMetas(n,e),null,this.generateIndex())),this.addUserRemainderAtom(this.remainderWallet),this.atoms=x.sortAtoms(this.atoms),this}initTokenRequest(e,t,s,n,l={}){return this.molecularHash=null,this.atoms.push(new x(this.sourceWallet.position,this.sourceWallet.address,"T",this.sourceWallet.token,t,null,s,n,ne.mergeMetas({pubkey:this.sourceWallet.pubkey,characters:this.sourceWallet.characters,token:e},l),null,this.generateIndex())),this.addUserRemainderAtom(this.remainderWallet),this.atoms=x.sortAtoms(this.atoms),this}initAuthorization(){return this.molecularHash=null,this.atoms.push(new x(this.sourceWallet.position,this.sourceWallet.address,"U",this.sourceWallet.token,null,this.sourceWallet.batchId,null,null,{pubkey:this.sourceWallet.pubkey,characters:this.sourceWallet.characters},null,this.generateIndex())),this.atoms=x.sortAtoms(this.atoms),this}clear(){return this.molecularHash=null,this.bundle=null,this.status=null,this.createdAt=String(+new Date),this.atoms=[],this}sign(t=!1,s=!0){if(0===this.atoms.length||0!==this.atoms.filter((e=>!(e instanceof x))).length)throw new E;t||(this.bundle=W(this.secret)),this.molecularHash=x.hashAtoms(this.atoms);const n=this.atoms[0],l=f(C.generatePrivateKey(this.secret,n.token,n.position),128),r=G.normalizedHash(this.molecularHash);let i="";for(const t in l){let s=l[t];for(let n=0,l=8-r[t];n<l;n++)s=e.shake256.create(512).update(s).hex();i+=s}s&&(i=w(i));const a=f(i,Math.ceil(i.length/this.atoms.length));let o=null;for(let e=0,t=a.length;e<t;e++)this.atoms[e].otsFragment=a[e],o=this.atoms[e].position;return o}check(e=null){return ne.verify(this,e)}generateIndex(){return ne.generateNextAtomIndex(this.atoms)}}class le{static __init(e,t){this.arr=[],this.key=null,this.arr=String(t).split("."),this.key=this.arr.shift();const s=Number(this.key);Number.isInteger(s)&&(this.key=s),this.__nextKey=this.arr.length,this.__next=this.__tic(e)}static __tic(e){return!!(Array.isArray(e)||e instanceof Object)&&void 0!==e[this.key]}static has(e,t){return this.__init(e,t),!!this.__next&&(0===this.__nextKey||this.has(e[this.key],this.arr.join(".")))}static get(e,t,s=null){return this.__init(e,t),this.__next?0===this.__nextKey?e[this.key]:this.get(e[this.key],this.arr.join("."),s):s}}const re=require("lodash.merge");class ie{constructor(e,t={}){this.$__headers=new u.Headers(t.headers||{}),this.$__needHeaders={accept:"application/json","content-type":"application/json; charset=UTF-8"},this.$__config=re(t,{method:"POST",headers:this.$__headers}),this.setUrl(e)}getConfig(){return this.$__config}setUrl(e){this.$__url=e}getUrl(){return this.$__url}setAuthToken(e){this.$__headers.set("X-Auth-Token",e||"")}getAuthToken(){return this.$__headers.get("X-Auth-Token")||""}async send(e,t={}){e.headers.extend(t),this.$__headers.extend(e.headers.asObject());for(let e in this.$__needHeaders)this.$__headers.set(e,this.$__needHeaders[e]);this.setAuthToken(this.getAuthToken());const s=new u.Request(e,this.$__config);return s.headers.delete("content-length"),await c.fetch(s)}}class ae extends K{constructor(e="GraphQL did not provide a valid response.",t=null,s=null){super(e,t,s),this.name="InvalidResponseException"}}class oe extends K{constructor(e="Authorization token missing or invalid.",t=null,s=null){super(e,t,s),this.name="UnauthenticatedException"}}class ue{constructor(e,t){if(this.dataKey=null,this.errorKey="exception",this.$__payload=null,this.$__query=e,this.$__originResponse=t,this.$__response=t,void 0===this.$__response||null===this.$__response)throw new ae;if(le.has(this.$__response,this.errorKey)){const e=le.get(this.$__response,this.errorKey);if(String(e).includes("Unauthenticated"))throw new oe;throw new ae}this.init()}data(){if(!this.dataKey)return this.response();if(!le.has(this.response(),this.dataKey))throw new ae;return le.get(this.response(),this.dataKey)}response(){return this.$__response}payload(){return null}query(){return this.$__query}init(){return null}}class ce{constructor(e){this.knishIO=e,this.$__fields=null,this.$__variables=null,this.$__request=null,this.$__response=null,this.$__query=null}request(){return this.$__request}response(){return this.$__response}client(){return this.knishIO.client()}createRequest(e=null,t=null){return this.$__variables=this.compiledVariables(e),new u.Request(this.url(),{body:JSON.stringify({query:this.compiledQuery(t),variables:this.variables()})})}compiledVariables(e=null){return e||{}}compiledQuery(e=null){return null!==e&&(this.$__fields=e),this.$__query.replace(new RegExp("@fields","g"),this.compiledFields(this.$__fields))}compiledFields(e){const t=[];for(let s of Object.keys(e))t.push(e[s]?`${s} ${this.compiledFields(e[s])}`:`${s}`);return`{ ${t.join(", ")} }`}async execute(e=null,t=null){this.$__request=this.createRequest(e,t);let s=await this.client().send(this.$__request);return this.knishIO.$__serverSdkVersion>2&&"MutationRequestAuthorization"!==this.constructor.name&&401===s.status&&(await this.knishIO.requestAuthToken(),s=await this.client().send(this.$__request)),this.$__response=await this.createResponseRaw(s),this.$__response}async createResponseRaw(e){return this.createResponse(JSON.parse(await e.text()))}createResponse(e){return new ue(this,e)}url(){return this.knishIO.client().getUrl()}variables(){return this.$__variables}}class he extends ue{constructor(e,t){super(e,t),this.dataKey="data.ContinuId",this.init()}payload(){let e=null;const t=this.data();return t&&(e=new C(null,t.tokenSlug),e.address=t.address,e.position=t.position,e.bundle=t.bundleHash,e.batchId=t.batchId,e.characters=t.characters,e.pubkey=t.pubkey,e.balance=1*t.amount),e}}class de extends ce{constructor(e){super(e),this.$__query="query ($bundle: String!) { ContinuId(bundle: $bundle) @fields }",this.$__fields={address:null,bundleHash:null,tokenSlug:null,position:null,batchId:null,characters:null,pubkey:null,amount:null,createdAt:null}}createResponse(e){return new he(this,e)}}class pe extends ue{constructor(e,t){super(e,t),this.dataKey="data.WalletBundle",this.init()}payload(){const e=this.data();if(!e||0===e.length)return null;const t={};return e.forEach((e=>{e.metas=$.aggregateMeta(e.metas),t[e.bundleHash]=e})),t}}class me extends ce{constructor(e){super(e),this.$__query="query( $bundleHash: String, $bundleHashes: [ String! ], $key: String, $keys: [ String! ], $value: String, $values: [ String! ], $keys_values: [ MetaInput ], $latest: Boolean, $limit: Int, $skip: Int, $order: String ) { WalletBundle( bundleHash: $bundleHash, bundleHashes: $bundleHashes, key: $key, keys: $keys, value: $value, values: $values, keys_values: $keys_values, latest: $latest, limit: $limit, skip: $skip, order: $order ) @fields }",this.$__fields={bundleHash:null,metas:{molecularHash:null,position:null,key:null,value:null,createdAt:null},createdAt:null}}createResponse(e){return new pe(this,e)}static createVariables(e=null,t=null,s=null,n=!0){const l={latest:n};return e&&(l["string"==typeof e?"bundleHash":"bundleHashes"]=e),t&&(l["string"==typeof t?"key":"keys"]=t),s&&(l["string"==typeof s?"value":"values"]=s),l}}class ye extends ue{constructor(e,t){super(e,t),this.dataKey="data.Wallet",this.init()}toClientWallet(e){let t;return null===e.position||void 0===e.position?t=new O(e.bundleHash,e.tokenSlug,e.batchId):(t=new C(null,e.tokenSlug),t.address=e.address,t.position=e.position,t.bundle=e.bundleHash,t.batchId=e.batchId,t.characters=e.characters,t.pubkey=e.pubkey),t.createdAt=e.createdAt,t.balance=e.amount,t.tokenData=e.token,t}payload(){const e=this.data();if(!e)return null;const t=[];for(let s of e)t.push(this.toClientWallet(s));return t}}class fe extends ce{constructor(e){super(e),this.$__query="query( $address: String, $bundleHash: String, $token: String, $position: String, $unspent: Boolean ) { Wallet( address: $address, bundleHash: $bundleHash, token: $token, position: $position, unspent: $unspent ) @fields }",this.$__fields={address:null,bundleHash:null,token:{name:null,amount:null},tokenSlug:null,batchId:null,position:null,amount:null,characters:null,pubkey:null,createdAt:null}}createResponse(e){return new ye(this,e)}}class ge extends ue{constructor(e,t){super(e,t),this.dataKey="data.Balance",this.init()}payload(){const e=this.data();if(!e||!e.bundleHash||!e.tokenSlug)return null;let t;return null===e.position?t=new O(e.bundleHash,e.tokenSlug,e.batchId):(t=new C(null,e.tokenSlug),t.address=e.address,t.position=e.position,t.bundle=e.bundleHash,t.batchId=e.batchId,t.characters=e.characters,t.pubkey=e.pubkey),t.balance=e.amount,t}}class be extends ce{constructor(e){super(e),this.$__query="query( $address: String, $bundleHash: String, $token: String, $position: String ) { Balance( address: $address, bundleHash: $bundleHash, token: $token, position: $position ) @fields }",this.$__fields={address:null,bundleHash:null,tokenSlug:null,batchId:null,position:null,amount:null,characters:null,pubkey:null,createdAt:null}}createResponse(e){return new ge(this,e)}}class we extends ue{constructor(e,t){super(e,t),this.dataKey="data.MetaType",this.init()}payload(){const e=this.data();return e&&0!==e.length?e.pop().instances:null}}class ke extends ce{constructor(e){super(e),this.$__query="query( $metaType: String, $metaTypes: [ String! ], $metaId: String, $metaIds: [ String! ], $key: String, $keys: [ String! ], $value: String, $values: [ String! ], $count: String, $latest: Boolean, $filter: [ MetaFilter! ] ) { MetaType( metaType: $metaType, metaTypes: $metaTypes, metaId: $metaId, metaIds: $metaIds, key: $key, keys: $keys, value: $value, values: $values, count: $count, filter: $filter ) @fields }",this.$__fields={metaType:null,instances:{metaType:null,metaId:null,createdAt:null,"metas(latest:$latest)":{molecularHash:null,position:null,key:null,value:null,createdAt:null}}}}createResponse(e){return new we(this,e)}static createVariables(e=null,t=null,s=null,n=null,l=null,r=null){const i={};return e&&(i["string"==typeof e?"metaType":"metaTypes"]=e),t&&(i["string"==typeof t?"metaId":"metaIds"]=t),s&&(i["string"==typeof s?"key":"keys"]=s),n&&(i["string"==typeof n?"value":"values"]=n),l&&(i.latest=!!l),r&&(i.filter=r),i}}class _e extends ue{constructor(e,t){super(e,t),this.dataKey="data.ProposeMolecule",this.init()}init(){const e=le.get(this.data(),"payload");try{this.$__payload=JSON.parse(e)}catch(e){this.$__payload=null}}molecule(){const e=this.data();if(!e)return null;const t=new te;return t.molecularHash=le.get(e,"molecularHash"),t.status=le.get(e,"status"),t.status=le.get(e,"createdAt"),t}success(){return"accepted"===this.status()}status(){return le.get(this.data(),"status","rejected")}reason(){return le.get(this.data(),"reason","Invalid response from server")}payload(){return this.$__payload}}class $e extends ce{}const xe=require("lodash.merge");class Ie extends $e{constructor(e,t=null){super(e),this.$__molecule=t,this.$__remainderWallet=null,this.$__query="mutation( $molecule: MoleculeInput! ) { ProposeMolecule( molecule: $molecule ) @fields }",this.$__fields={molecularHash:null,height:null,depth:null,status:null,reason:null,payload:null,createdAt:null,receivedAt:null,processedAt:null,broadcastedAt:null}}compiledVariables(e){const t=super.compiledVariables(e);return xe(t,{molecule:this.molecule()})}createResponse(e){return new _e(this,e)}async execute(e=null,t=null){return await super.execute(xe(e||{},{molecule:this.molecule()}),t)}remainderWallet(){return this.$__remainderWallet}molecule(){return this.$__molecule}}class Se extends _e{payloadKey(e){if(!le.has(this.payload(),e))throw new ae(`ResponseAuthorization: '${e}' key is not found in the payload.`);return le.get(this.payload(),e)}token(){return this.payloadKey("token")}time(){return this.payloadKey("time")}}class Me extends Ie{fillMolecule(){this.$__molecule.initAuthorization(),this.$__molecule.sign(),this.$__molecule.check()}createResponse(e){return new Se(this,e)}}class We extends _e{}class ve extends Ie{fillMolecule(e,t,s=null){this.$__molecule.initTokenCreation(e,t,s||{}),this.$__molecule.sign(),this.$__molecule.check()}createResponse(e){return new We(this,e)}}class Ae extends Ie{fillMolecule(e,t,s,n,l=null){this.$__molecule.initTokenRequest(e,t,s,n,l||{}),this.$__molecule.sign(),this.$__molecule.check()}}class Te extends _e{payload(){const e={reason:null,status:null},t=this.data();return e.reason=void 0===t.reason?"Invalid response from server":t.reason,e.status=void 0===t.status?"rejected":t.status,e}}class He extends Ie{fillMolecule(e,t){this.$__molecule.initValue(e,t),this.$__molecule.sign(),this.$__molecule.check(this.$__molecule.sourceWallet)}createResponse(e){return new Te(this,e)}}class qe extends Ie{fillMolecule(e,t,s){this.$__molecule.initIdentifierCreation(e,t,s),this.$__molecule.sign(),this.$__molecule.check()}}class Oe extends Ie{fillMolecule(e,t={}){this.$__molecule.initShadowWalletClaim(e,t),this.$__molecule.sign(),this.$__molecule.check()}}class Ce extends K{constructor(e="Code exception",t=null,s=null){super(e,t,s),this.name="CodeException"}}class Ke extends _e{}class Re extends Ie{fillMolecule(e,t,s){this.$__molecule.initMeta(s,e,t),this.$__molecule.sign(),this.$__molecule.check()}createResponse(e){return new Ke(this,e)}}class Ee extends Ie{fillMolecule(e){this.$__molecule.initWalletCreation(e),this.$__molecule.sign(),this.$__molecule.check()}createResponse(e){return new We(this,e)}}exports.Atom=x,exports.KnishIOClient=class{constructor(e,t=null,s=3){this.initialize(e,t,s)}initialize(e,t=null,s=3){console.info(`KnishIOClient::initialize() - Initializing new Knish.IO client session for SDK version ${s}...`),this.$__url=e,this.$__secret="",this.$__bundle="",this.$__client=t||new ie(this.$__url),this.$__serverSdkVersion=s,this.remainderWallet=null}deinitialize(){console.info("KnishIOClient::deinitialize() - Clearing the Knish.IO client session..."),this.$__secret="",this.$__bundle="",this.remainderWallet=null}getServerSdkVersion(){return this.$__serverSdkVersion}cellSlug(){return this.$__cellSlug||null}setCellSlug(e){this.$__cellSlug=e}setAuthToken(e){this.client().setAuthToken(e)}getAuthToken(){return this.client().getAuthToken()}getUrl(){return this.client().getUrl()}client(){return this.$__client}async createMolecule(e=null,t=null,s=null){console.info("KnishIOClient::createMolecule() - Creating a new molecule...");const n=e||this.secret();let l=t;return!t&&this.lastMoleculeQuery&&"AUTH"!==this.getRemainderWallet().token&&this.lastMoleculeQuery.response()&&this.lastMoleculeQuery.response().success()&&(l=this.getRemainderWallet()),null===l&&(l=await this.getSourceWallet()),this.remainderWallet=s||C.create(n,l.token,l.batchId,l.characters),new ne(n,l,this.getRemainderWallet(),this.cellSlug())}createQuery(e){return new e(this)}async createMoleculeMutation(e,t=null){console.info(`KnishIOClient::createMoleculeQuery() - Creating a new ${e.name} query...`);let s=t;null===s&&(s=e.name===Me.name?await this.createMolecule(this.secret(),new C(this.secret(),"AUTH")):await this.createMolecule());const n=new e(this,s);if(!(n instanceof Ie))throw new Ce(`${this.constructor.name}::createMoleculeMutation - required class instance of MutationProposeMolecule.`);return this.lastMoleculeQuery=n,n}async requestAuthToken(e=null,t=null){if(console.info("KnishIOClient::requestAuthToken() - Requesting authorization token..."),this.$__secret=e||this.secret(),this.$__bundle=W(this.$__secret),this.$__cellSlug=t||this.cellSlug(),this.$__serverSdkVersion>2){const e=await this.createMoleculeMutation(Me);e.fillMolecule();const t=await e.execute();if(!t.success())throw console.warn("KnishIOClient::requestAuthToken() - Unable to retrieve auth token..."),new oe(t.reason());{const e=t.token();this.client().setAuthToken(e),console.info(`KnishIOClient::requestAuthToken() - Successfully retrieved auth token ${t.token()}...`)}return t}console.warn("KnishIOClient::requestAuthToken() - Server SDK version does not require an auth token...")}async queryBalance(e,t=null){const s=this.createQuery(be);return await s.execute({bundleHash:t||this.bundle(),token:e})}queryMeta(e,t=null,s=null,n=null,l=null,r=null,i=null){console.info(`KnishIOClient::queryMeta() - Querying meta type data for metaType: ${e}, metaId: ${t}, key: ${s}, value: ${n}, latest: ${l}, filter: ${i}...`);const a=this.createQuery(ke),o=ke.createVariables(e,t,s,n,l,i);return a.execute(o,r).then((e=>e.payload()))}hasSecret(){return!!this.$__secret}secret(){if(!this.$__secret)throw new oe("KnishIOClient::secret() - Unable to find a stored secret!");return this.$__secret}bundle(){if(!this.$__bundle)throw new oe("KnishIOClient::bundle() - Unable to find a stored bundle!");return this.$__bundle}async createWallet(e){const t=new C(this.secret(),e),s=await this.createMoleculeMutation(Ee);return s.fillMolecule(t),await s.execute()}async createToken(e,t,s=null){const n=new C(this.secret(),e);"stackable"===le.get(s||{},"fungibility")&&(n.batchId=C.generateBatchId());const l=await this.createMoleculeMutation(ve);return l.fillMolecule(n,t,s||{}),await l.execute()}async createMeta(e,t,s=null){const n=await this.createMoleculeMutation(Re,await this.createMolecule(this.secret(),await this.getSourceWallet()));return n.fillMolecule(e,t,s),await n.execute()}async createIdentifier(e,t,s){const n=await this.createMoleculeMutation(qe);return n.fillMolecule(e,t,s),await n.execute()}queryWallets(e=null,t=!0){console.info(`KnishIOClient::queryWallets() - Querying wallets${e?` for ${e}`:""}...`);return this.createQuery(fe).execute({bundleHash:e||this.bundle(),unspent:t}).then((e=>{const t=e.payload(),s=[];return console.info(`KnishIOClient::getWallets() - Discovered ${t.length} remote wallets...`),t.forEach((e=>{const t=e.tokenSlug;let n;e.address?(console.info(`KnishIOClient::getWallets() - Restoring ${e.token} wallet with balance of ${e.balance}...`),n=new C(this.$__secret,e.token,e.position),n.balance=Number(e.balance),n.molecules=e.molecules,n.createdAt=e.createdAt,n.tokenName=e.tokenData.name,n.tokenSupply=e.tokenData.amount,n.tokenIcon=e.tokenIcon):(console.info(`Wallet::import() - Restoring ${t} shadow wallet...`),n=e),e.remote=!0,s.push(n)})),s}))}queryShadowWallets(e="KNISH",t=null){console.info(`KnishIOClient::queryShadowWallets() - Querying shadow wallets${t?` for ${t}`:""}...`);return this.createQuery(fe).execute({bundleHash:t||this.bundle(),token:e}).then((e=>e.payload()))}queryBundle(e=null,t=null,s=null,n=!0,l=null){console.info(`KnishIOClient::queryBundle() - Querying wallet bundle metadata${e?` for ${e}`:""}...`);const r=this.createQuery(me),i=me.createVariables(null!==e?e:this.bundle(),t,s,n);return r.execute(i,l).then((e=>e.payload()))}async requestTokens(e,t,s=null,n=null){let l,r;s?("[object String]"===Object.prototype.toString.call(s)&&(C.isBundleHash(s)?(l="walletBundle",r=s):s=C.create(s,e)),s instanceof C&&(l="wallet",n=ne.mergeMetas(n||{},{position:s.position,bundle:s.bundle}),r=s.address)):(l="walletBundle",r=this.bundle());const i=await this.createMoleculeMutation(Ae);return i.fillMolecule(e,t,l,r,n),await i.execute()}async claimShadowWallet(e,t=null){const s=this.queryShadowWallets(e),n=await this.createMoleculeMutation(Oe,t);return n.fillMolecule(e,s),await n.execute()}async transferToken(e,t,s){const n=(await this.queryBalance(t)).payload();if(null===n||S.cmp(n.balance,s)<0)throw new V;let l=e instanceof C?e:(await this.queryBalance(t,e)).payload();null===l&&(l=C.create(e,t)),"function"==typeof l.initBatchId&&l.initBatchId(n,s);const r=await this.createMolecule(null,n,C.create(this.secret(),t,l.batchId,n.characters)),i=await this.createMoleculeMutation(He,r);return i.fillMolecule(l,s),await i.execute()}async getSourceWallet(){let e=(await this.queryContinuId(this.bundle())).payload();return e||(e=new C(this.secret())),e}async queryContinuId(e){return await this.createQuery(de).execute({bundle:e})}getRemainderWallet(){return this.remainderWallet}},exports.Meta=$,exports.Molecule=ne,exports.Wallet=C,exports.WalletShadow=O,exports.base64ToHex=k,exports.bufferToHexString=function(e){return y.toHex(e,{})},exports.charsetBaseConvert=b,exports.chunkSubstr=f,exports.decryptMessage=A,exports.encryptMessage=v,exports.generateBundleHash=W,exports.generateEncPrivateKey=T,exports.generateEncPublicKey=H,exports.generateSecret=function(t=null,s=2048){if(console.info(`Crypto::generateSecret() - Computing new secret${t?" from existing seed":""}...`),t){const n=e.shake256.create(2*s);return n.update(t),n.hex()}return g(s)},exports.hashShare=q,exports.hexStringToBuffer=function(e){return y.toUint8Array(e)},exports.hexToBase64=w,exports.isHex=_,exports.randomString=g;
