import{shake256 as e}from"js-sha3";import t from"big-integer";import{decode as s,encode as n}from"@stablelib/base64";import i from"big-integer/BigInteger";import a from"base-x";import{Buffer as l}from"buffer";import{box as r}from"tweetnacl";import{seal as o,open as u}from"tweetnacl-sealedbox-js";import{encode as c,decode as h}from"@stablelib/utf8";import{generateBatchId as d}from"@wishknish/knishio-client-js/src/libraries/crypto";import{Headers as m,Request as p}from"servie";import{fetch as y}from"popsicle";class g{static toHex(e,t){const s=(e,t)=>{const s=t?["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F"]:["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"];return s[Math.floor(e/16)]+s[e%16]},n=Object.assign({grouping:0,rowlength:0,uppercase:!1},t||{});let i="",a=0,l=0;for(let t=0;t<e.length&&(i+=s(e[t],n.uppercase),t!==e.length-1);++t)n.grouping>0&&++a===n.grouping&&(a=0,n.rowlength>0&&++l===n.rowlength?(l=0,i+="\n"):i+=" ");return i}static toUint8Array(e){let t=e.toLowerCase().replace(/\s/g,"");t.length%2==1&&(t=`0${t}`);let s=new Uint8Array(Math.floor(t.length/2)),n=-1;for(let e=0;e<t.length;++e){let i=t[e],a=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"].indexOf(i);if(-1===a)throw Error("unexpected character");-1===n?n=16*a:(s[Math.floor(e/2)]=n+a,n=-1)}return s}}function f(e,t){const s=Math.ceil(e.length/t),n=[];for(let i=0,a=0;i<s;++i,a+=t)n[i]=e.substr(a,t);return n}function k(e=256,t="abcdef0123456789"){let s=new Uint8Array(e);return(window.crypto||window.msCrypto).getRandomValues(s),s=s.map((e=>t.charCodeAt(e%t.length))),String.fromCharCode.apply(null,s)}function _(e,s,n,i,a){if(i=i||"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz~`!@#$%^&*()-_=+[{]}\\|;:'\",<.>/?¿¡",a=a||i,s>i.length||n>a.length)return console.warn("Can't convert",e,"to base",n,"greater than symbol table length. src-table:",i.length,"dest-table:",a.length),!1;let l=t(0);for(let t=0;t<e.length;t++)l=l.multiply(s).add(i.indexOf(e.charAt(t)));if(l.lesser(0))return 0;let r=l.mod(n),o=a.charAt(r),u=l.divide(n);for(;!u.equals(0);)r=u.mod(n),u=u.divide(n),o=a.charAt(r)+o;return o}function w(e){return g.toHex(e,{})}function b(e){return g.toUint8Array(e)}function $(e){return n(g.toUint8Array(e))}function I(e){return g.toHex(s(e),{})}function x(e){return/^[A-F0-9]+$/i.test(e)}String.prototype.trim||(String.prototype.trim=function(){return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")});class S{constructor({modelType:e,modelId:t,meta:s,snapshotMolecule:n=null}){this.modelType=e,this.modelId=t,this.meta=s,this.snapshotMolecule=n,this.createdAt=+new Date}static normalizeMeta(e){if("[object Object]"===Object.prototype.toString.call(e)){const t=[];for(const s in e)e.hasOwnProperty(s)&&null!==e[s]&&t.push({key:s,value:e[s]});return t}return e}static aggregateMeta(e){const t={};if("[object Array]"===Object.prototype.toString.call(e))for(let s of e)t[s.key]=s.value;return Object.keys(t).length>0?t:e}}class T{constructor({position:e=null,walletAddress:t=null,isotope:s=null,token:n=null,value:i=null,batchId:a=null,metaType:l=null,metaId:r=null,meta:o=null,otsFragment:u=null,index:c=null}){this.position=e,this.walletAddress=t,this.isotope=s,this.token=n,this.value=null!==i?String(i):null,this.batchId=a,this.metaType=l,this.metaId=r,this.meta=o?S.normalizeMeta(o):[],this.index=c,this.otsFragment=u,this.createdAt=String(+new Date)}static jsonToObject(e){const t=Object.assign(new T({}),JSON.parse(e)),s=Object.keys(new T({}));for(const e in t)t.hasOwnProperty(e)&&!s.includes(e)&&delete t[e];return t}static hashAtoms({atoms:t,output:s="base17",excludeFields:n=[]}){const i=e.create(256),a=t.length,l=T.sortAtoms(t);for(const e of l){i.update(String(a));for(const t in e)if(e.hasOwnProperty(t)){if(["pubkey","characters"].includes(t)&&null===e[t])continue;if(n.push("otsFragment"),n.push("index"),n.includes(t))continue;if("meta"===t){e[t]=S.normalizeMeta(e[t]);for(const s of e[t])void 0!==s.value&&null!==s.value&&(i.update(String(s.key)),i.update(String(s.value)));continue}if(["position","walletAddress","isotope"].includes(t)){i.update(null===e[t]?"":String(e[t]));continue}null!==e[t]&&i.update(null===e[t]?"":String(e[t]))}}switch(s){case"hex":return i.hex();case"array":return i.array();default:return _(i.hex(),16,17,"0123456789abcdef","0123456789abcdefg").padStart(64,"0")}}static sortAtoms(e){const t=[...e];return t.sort(((e,t)=>e.index===t.index?0:e.index<t.index?-1:1)),t}}class M{constructor(e={}){this.$options=Object.assign({characters:"GMP"},e),this.$encoder=a(this[this.$options.characters]||this.GMP)}encode(e){return this.$encoder.encode(l.from(e))}decode(e){return this.$encoder.decode(e)}get GMP(){return"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuv"}get BITCOIN(){return"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}get FLICKR(){return"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}get RIPPLE(){return"rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz"}get IPFS(){return"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}}class W{constructor(e=null){this.base=new M(e)}encrypt(e,t){return this.encode(o(c(JSON.stringify(e)),this.decode(t)))}decrypt(e,t,s){try{return JSON.parse(h(u(this.decode(e),this.decode(s),this.decode(t))))}catch(e){return null}}generatePrivateKey(t){const s=e.create(8*r.secretKeyLength);return s.update(t),this.base.encode(l.from(s.digest()))}generatePublicKey(e){const t=r.keyPair.fromSecretKey(this.decode(e));return this.encode(t.publicKey)}shortHash(t){const s=e.create(64);return s.update(t),this.base.encode(l.from(s.digest()))}decode(e){return this.base.decode(e)}encode(e){return this.base.encode(e)}}function v(t=null,s=2048){if(console.info(`Crypto::generateSecret() - Computing new secret${t?" from existing seed":""}...`),t){const n=e.create(2*s);return n.update(t),n.hex()}return k(s)}function A(t){console.info("Crypto::generateBundleHash() - Computing wallet bundle from secret...");const s=e.create(256);return s.update(t),s.hex()}function q(e=64){return k(e,"abcdef0123456789")}function C(e,t,s=null){return new W(s).encrypt(e,t)}function R(e,t,s,n=null){return new W(n).decrypt(e,t,s)}function B(e,t=null){return new W(t).generatePrivateKey(e)}function O(e,t=null){return new W(t).generatePublicKey(e)}function H(e,t=null){return new W(t).shortHash(e)}class U{constructor({secret:e=null,token:t="USER",position:s=null,batchId:n=null,characters:i=null}){this.token=t,this.balance=0,this.molecules={},this.key=null,this.address=null,this.privkey=null,this.pubkey=null,this.tokenUnits=[],this.bundle=e?A(e):null,this.batchId=n,this.position=s,this.characters="undefined"!==(new M)[i]?i:null,e&&(this.position=this.position||q(),this.prepareKeys(e))}static create({secretOrBundle:e,token:t,batchId:s=null,characters:n=null}){let i=U.isBundleHash(e)?null:e,a=i?A(i):e,l=i?q():null,r=new U({secret:i,token:t,position:l,batchId:s,characters:n});return r.bundle=a,r}static isBundleHash(e){return"string"==typeof e&&(64===e.length&&x(e))}static getTokenUnits(e){let t=[];return e.forEach((e=>{t.push({id:e.shift(),name:e.shift(),metas:e})})),t}hasTokenUnits(){return!!this.tokenUnits&&this.tokenUnits.length>0}tokenUnitsJson(){if(this.hasTokenUnits()){const e=[];return this.tokenUnits.forEach((t=>{e.push([t.id,t.name].concat(t.metas))})),JSON.stringify(e)}return null}splitUnits(e,t,s=null){if(0===e.length)return;let n=[],i=[];this.tokenUnits.forEach((t=>{e.includes(t.id)?n.push(t):i.push(t)})),this.tokenUnits=n,null!==s&&(s.tokenUnits=n),t.tokenUnits=i}isShadow(){return!(void 0!==this.position&&null!==this.position||void 0!==this.address&&null!==this.address)}initBatchId({sourceWallet:e}){e.batchId&&(this.batchId=function({molecularHash:e=null,index:t=null}){return null!==e&&null!==t?A(String(e)+String(t)):k(64)}({}))}prepareKeys(e){null===this.key&&null===this.address&&(this.key=U.generatePrivateKey({secret:e,token:this.token,position:this.position}),this.address=U.generatePublicKey(this.key),this.getMyEncPrivateKey(),this.getMyEncPublicKey())}getMyEncPrivateKey(){return null===this.privkey&&null!==this.key&&(this.privkey=B(this.key,this.characters)),this.privkey}getMyEncPublicKey(){const e=this.getMyEncPrivateKey();return!this.pubkey&&e&&(this.pubkey=O(e,this.characters)),this.pubkey}encryptMyMessage(e){const t={};for(let s=1,n=arguments.length;s<n;s++)t[H(arguments[s],this.characters)]=C(e,arguments[s],this.characters);return t}decryptMyMessage(e){const t=this.getMyEncPublicKey();let s=e;return null!==e&&"object"==typeof e&&"[object Object]"===Object.prototype.toString.call(e)&&(s=e[H(t,this.characters)]||""),R(s,this.getMyEncPrivateKey(),t,this.characters)}encryptString({data:e,publicKeys:t}){if(e){const s=this.getMyEncPublicKey();"string"==typeof t&&(t=[t]);const n=this.encryptMyMessage(e,s,...t);return btoa(JSON.stringify(n))}}decryptString({data:e,fallbackValue:t=null}){if(e)try{const s=JSON.parse(atob(e));return this.decryptMyMessage(s)||t}catch(s){return console.error(s),t||e}}static generatePrivateKey({secret:t,token:s,position:n}){const a=i(t,16).add(i(n,16)),l=e.create(8192);return l.update(a.toString(16)),s&&l.update(s),e.create(8192).update(l.hex()).hex()}static generatePublicKey(t){const s=f(t,128),n=e.create(8192);for(const t in s){let i=s[t];for(let t=1;t<=16;t++)i=e.create(512).update(i).hex();n.update(i)}return e.create(256).update(n.hex()).hex()}}class K extends TypeError{constructor(e=null,t=null,s=null){if(super(e,t,s),null===e)throw new this(`Unknown ${this.constructor.name}`);this.name="BaseException"}toString(){return`${this.name}: ${this.message}.\nStack:\n${this.stack}`}}class j extends K{constructor(e="There is an atom without an index",t=null,s=null){super(e,t,s),this.name="AtomIndexException"}}class E extends K{constructor(e="The molecule does not contain atoms",t=null,s=null){super(e,t,s),this.name="AtomsMissingException"}}class Q extends K{constructor(e="The molecular hash does not match",t=null,s=null){super(e,t,s),this.name="MolecularHashMismatchException"}}class N extends K{constructor(e="The molecular hash is missing",t=null,s=null){super(e,t,s),this.name="MolecularHashMissingException"}}class P extends K{constructor(e="OTS malformed",t=null,s=null){super(e,t,s),this.name="SignatureMalformedException"}}class F extends K{constructor(e="One-time signature (OTS) does not match!",t=null,s=null){super(e,t,s),this.name="SignatureMismatchException"}}class V extends K{constructor(e="Insufficient balance to make transfer",t=null,s=null){super(e,t,s),this.name="TransferBalanceException"}}class z extends K{constructor(e="Token transfer atoms are malformed",t=null,s=null){super(e,t,s),this.name="TransferMalformedException"}}class J extends K{constructor(e="Token slugs for wallets in transfer do not match!",t=null,s=null){super(e,t,s),this.name="TransferMismatchedException"}}class D extends K{constructor(e="Invalid remainder provided",t=null,s=null){super(e,t,s),this.name="TransferRemainderException"}}class L extends K{constructor(e="Sender and recipient(s) cannot be the same",t=null,s=null){super(e,t,s),this.name="TransferToSelfException"}}class G extends K{constructor(e="Token transfer atoms are unbalanced",t=null,s=null){super(e,t,s),this.name="TransferUnbalancedException"}}class X extends K{constructor(e="Empty meta data.",t=null,s=null){super(e,t,s),this.name="MetaMissingException"}}class Y extends K{constructor(e="Wrong type of token for this isotope",t=null,s=null){super(e,t,s),this.name="WrongTokenTypeException"}}class Z{static continuId(e){Z.missing(e);if("USER"===e.atoms[0].token&&Z.isotopeFilter("I",e.atoms).length<1)throw new E("Missing atom ContinuID");return!0}static batchId(e){for(const t of e.atoms)t.batchId;return!0}static isotopeI(e){Z.missing(e);for(let t of Z.isotopeFilter("I",e.atoms)){if("USER"!==t.token)throw new Y(`Invalid token name for "${t.isotope}" isotope`);if(0===t.index)throw new j(`Invalid isotope "${t.isotope}" index`)}return!0}static isotopeU(e){Z.missing(e);for(let t of Z.isotopeFilter("U",e.atoms)){if("AUTH"!==t.token)throw new Y(`Invalid token name for "${t.isotope}" isotope`);if(0!==t.index)throw new j(`Invalid isotope "${t.isotope}" index`)}return!0}static isotopeM(e){Z.missing(e);for(let t of Z.isotopeFilter("M",e.atoms)){if(t.meta.length<1)throw new X;if("USER"!==t.token)throw new Y(`Invalid token name for "${t.isotope}" isotope`)}return!0}static isotopeC(e){Z.missing(e);for(let t of Z.isotopeFilter("C",e.atoms)){if("USER"!==t.token)throw new Y(`Invalid token name for "${t.isotope}" isotope`);if(0!==t.index)throw new j(`Invalid isotope "${t.isotope}" index`)}return!0}static isotopeT(e){Z.missing(e);for(let t of Z.isotopeFilter("T",e.atoms)){const e=S.aggregateMeta(S.normalizeMeta(t.meta));if("wallet"===String(t.metaType).toLowerCase())for(let t of["position","bundle"])if(!e.hasOwnProperty(t)||!Boolean(e[t]))throw new X(`No or not defined "${t}" in meta`);for(let t of["token"])if(!e.hasOwnProperty(t)||!Boolean(e[t]))throw new X(`No or not defined "${t}" in meta`);if("USER"!==t.token)throw new Y(`Invalid token name for "${t.isotope}" isotope`);if(0!==t.index)throw new j(`Invalid isotope "${t.isotope}" index`)}return!0}static isotopeR(e){Z.missing(e);for(let t of Z.isotopeFilter("R",e.atoms)){const e=S.aggregateMeta(S.normalizeMeta(t.meta));for(let t of["callback","conditions","rule"])if(!e.hasOwnProperty(t))throw new X(`Missing "${t}" field in meta.`);try{const t=JSON.parse(e.conditions);for(let e of t){const t=Object.keys(e),s=t.filter((function(e){return-1!==["key","value","comparison"].indexOf(e)})),n=t.filter((function(e){return-1!==["managedBy"].indexOf(e)}));if(s.length<3&&n.length<1)throw new X("Missing field in conditions.")}}catch(e){throw new X("Invalid format for conditions.")}}}static isotopeV(e,t=null){Z.missing(e);const s=Z.isotopeFilter("V",e.atoms);if(0===s.length)return!0;const n=e.atoms[0];if("V"===n.isotope&&2===s.length){const e=s[s.length-1];if(n.token!==e.token)throw new J;if(e.value<0)throw new z;return!0}let i=0,a=0;for(let t in e.atoms)if(e.atoms.hasOwnProperty(t)){const s=e.atoms[t];if("V"!==s.isotope)continue;if(a=1*s.value,Number.isNaN(a))throw new TypeError('Invalid isotope "V" values');if(s.token!==n.token)throw new J;if(t>0){if(a<0)throw new z;if(s.walletAddress===n.walletAddress)throw new L}i+=a}if(i!==a)throw new G;if(t){if(a=1*n.value,Number.isNaN(a))throw new TypeError('Invalid isotope "V" values');const e=1*t.balance+1*a;if(e<0)throw new V;if(e!==i)throw new D}else if(0!==a)throw new D;return!0}static molecularHash(e){if(Z.missing(e),e.molecularHash!==T.hashAtoms({atoms:e.atoms}))throw new Q;return!0}static ots(t){Z.missing(t);const s=t.atoms[0].walletAddress,n=Z.normalizedHash(t.molecularHash);let i=t.atoms.map((e=>e.otsFragment)).reduce(((e,t)=>e+t));if(2048!==i.length&&(i=I(i),2048!==i.length))throw new P;const a=f(i,128);let l="";for(const t in a){let s=a[t];for(let i=0,a=8+n[t];i<a;i++)s=e.create(512).update(s).hex();l+=s}const r=e.create(8192).update(l).hex();if(e.create(256).update(r).hex()!==s)throw new F;return!0}static index(e){Z.missing(e);for(let t of e.atoms)if(null===t.index)throw new j;return!0}static isotopeFilter(e,t){return(t=t||[]).filter((t=>e===t.isotope))}static normalizedHash(e){return Z.normalize(Z.enumerate(e))}static enumerate(e){const t={0:-8,1:-7,2:-6,3:-5,4:-4,5:-3,6:-2,7:-1,8:0,9:1,a:2,b:3,c:4,d:5,e:6,f:7,g:8},s=[],n=e.toLowerCase().split("");for(let e=0,i=n.length;e<i;++e){const i=n[e];void 0!==t[i]&&(s[e]=t[i])}return s}static normalize(e){let t=e.reduce(((e,t)=>e+t));const s=t<0;for(;t<0||t>0;)for(const n of Object.keys(e)){if((s?e[n]<8:e[n]>-8)&&(s?(++e[n],++t):(--e[n],--t),0===t))break}return e}static missing(e){if(null===e.molecularHash)throw new N;if(1>e.atoms.length)throw new E}}class ee extends K{constructor(e="Insufficient balance for requested transfer",t=null,s=null){super(e,t,s),this.name="BalanceInsufficientException"}}class te extends K{constructor(e="Amount cannot be negative!",t=null,s=null){super(e,t,s),this.name="NegativeAmountException"}}const se=require("lodash.clonedeep"),ne=require("lodash.merge");class ie{constructor(e=null){this.cellSlugOrigin=this.cellSlug=e}getBatchId(e){let t=T.hashAtoms({atoms:this.atoms,excludeFields:["batchId"]});return d({molecularHash:t,index:e})}get cellSlugDelimiter(){return"."}cellSlugBase(){return(this.cellSlug||"").split(this.cellSlugDelimiter)[0]}toJSON(){let e=se(this);for(let t of["remainderWallet","secret","sourceWallet","cellSlugOrigin"])e.hasOwnProperty(t)&&delete e[t];return e}check(e=null){return ie.verify({molecule:this,sourceWallet:e})}static verify({molecule:e,sourceWallet:t=null}){return Z.molecularHash(e)&&Z.ots(e)&&Z.index(e)&&Z.batchId(e)&&Z.continuId(e)&&Z.isotopeM(e)&&Z.isotopeT(e)&&Z.isotopeC(e)&&Z.isotopeU(e)&&Z.isotopeI(e)&&Z.isotopeR(e)&&Z.isotopeV(e,t)}static jsonToObject(e){const t=ne(new this,JSON.parse(e)),s=Object.keys(new this);if(!Array.isArray(t.atoms))throw new E;for(const e in Object.keys(t.atoms)){t.atoms[e]=T.jsonToObject(JSON.stringify(t.atoms[e]));for(const s of["position","walletAddress","isotope"])if(void 0===t.atoms[e][s]||null===t.atoms[e][s])throw new E("The required properties of the atom are not filled.")}for(const e in t)t.hasOwnProperty(e)&&!s.includes(e)&&delete t[e];return t.atoms=T.sortAtoms(t.atoms),t}}class ae extends ie{constructor({secret:e,sourceWallet:t=null,remainderWallet:s=null,cellSlug:n=null}){super(n),this.secret=e,this.sourceWallet=t,this.atoms=[],(s||t)&&(this.remainderWallet=s||U.create({secretOrBundle:e,token:t.token,characters:t.characters})),this.clear()}static generateNextAtomIndex(e){const t=e.length-1;return t>-1?e[t].index+1:0}continuIdMetaType(){return"walletBundle"}fill(e){for(let t in Object.keys(e))this[t]=e[t]}addAtom(e){return this.molecularHash=null,this.atoms.push(e),this.atoms=T.sortAtoms(this.atoms),this}finalMetas(e=null,t=null){return e=e||{},(t=t||this.sourceWallet).hasTokenUnits()&&(e.tokenUnits=t.tokenUnitsJson()),e.pubkey=t.pubkey,e.characters=t.characters,e}contextMetas(e=null,t=null){return e=e||{}}replenishTokens({amount:e,token:t,metas:s}){const n=S.aggregateMeta(S.normalizeMeta(s));n.action="add";for(let e of["address","position"])if(void 0===n[e])throw new X(`Missing ${e} in meta`);return this.molecularHash=null,this.atoms.push(new T({position:this.sourceWallet.position,walletAddress:this.sourceWallet.address,isotope:"C",token:this.sourceWallet.token,amount:e,metaType:"token",metaId:t,meta:this.finalMetas(n),index:this.generateIndex()})),this.addUserRemainderAtom(this.remainderWallet),this.atoms=T.sortAtoms(this.atoms),this}addUserRemainderAtom(e){return this.molecularHash=null,this.atoms.push(new T({position:e.position,walletAddress:e.address,isotope:"I",token:e.token,metaType:"walletBundle",metaId:e.bundle,meta:this.finalMetas({},e),index:this.generateIndex()})),this.atoms=T.sortAtoms(this.atoms),this}burnToken({amount:e,walletBundle:t=null}){if(e<0)throw new te("Amount to burn must be positive!");if(this.sourceWallet.balance-e<0)throw new ee;return this.molecularHash=null,this.atoms.push(new T({position:this.sourceWallet.position,walletAddress:this.sourceWallet.address,isotope:"V",token:this.sourceWallet.token,value:-e,batchId:this.sourceWallet.batchId,meta:this.finalMetas({}),index:this.generateIndex()})),this.atoms.push(new T({position:this.remainderWallet.position,walletAddress:this.remainderWallet.address,isotope:"V",token:this.sourceWallet.token,value:this.sourceWallet.balance-e,batchId:this.sourceWallet.batchId,metaType:t?"walletBundle":null,metaId:t,meta:this.finalMetas({},this.remainderWallet),index:this.generateIndex()})),this.atoms=T.sortAtoms(this.atoms),this}initValue({recipientWallet:e,amount:t}){if(this.sourceWallet.balance-t<0)throw new ee;return this.molecularHash=null,this.atoms.push(new T({position:this.sourceWallet.position,walletAddress:this.sourceWallet.address,isotope:"V",token:this.sourceWallet.token,value:-t,batchId:this.sourceWallet.batchId,meta:this.finalMetas({}),index:this.generateIndex()})),this.atoms.push(new T({position:e.position,walletAddress:e.address,isotope:"V",token:this.sourceWallet.token,value:t,metaType:"walletBundle",metaId:e.bundle,meta:this.finalMetas({},e),index:this.generateIndex()})),this.atoms.push(new T({position:this.remainderWallet.position,walletAddress:this.remainderWallet.address,isotope:"V",token:this.sourceWallet.token,value:this.sourceWallet.balance-t,batchId:this.sourceWallet.batchId,metaType:"walletBundle",metaId:this.sourceWallet.bundle,meta:this.finalMetas({},this.remainderWallet),index:this.generateIndex()})),this.atoms=T.sortAtoms(this.atoms),this.atoms[1].batchId=this.getBatchId(1),this}initWalletCreation(e){this.molecularHash=null;const t={address:e.address,token:e.token,bundle:e.bundle,position:e.position,amount:0,pubkey:e.pubkey,characters:e.characters};return this.atoms.push(new T({position:this.sourceWallet.position,walletAddress:this.sourceWallet.address,isotope:"C",token:this.sourceWallet.token,metaType:"wallet",metaId:e.address,meta:this.finalMetas(this.contextMetas(t),e),index:this.generateIndex()})),this.addUserRemainderAtom(this.remainderWallet),this.atoms=T.sortAtoms(this.atoms),this}initTokenCreation({recipientWallet:e,amount:t,meta:s}){this.molecularHash=null;for(const t of["walletAddress","walletPosition","walletPubkey","walletCharacters"])s[t]||(s[t]=e[t.toLowerCase().substr(6)]);return this.atoms.push(new T({position:this.sourceWallet.position,walletAddress:this.sourceWallet.address,isotope:"C",token:this.sourceWallet.token,value:t,metaType:"token",metaId:e.token,meta:this.finalMetas(this.contextMetas(s),this.sourceWallet),index:this.generateIndex()})),this.addUserRemainderAtom(this.remainderWallet),this.atoms=T.sortAtoms(this.atoms),this.atoms[0].batchId=this.getBatchId(0),this}createRule({metaType:e,metaId:t,meta:s}){const n=S.aggregateMeta(S.normalizeMeta(s));for(let e of["conditions","callback","rule"]){if(void 0===n[e])throw new X(`No or not defined ${e} in meta`);for(let t of["[object Object]","[object Array]"])Object.prototype.toString.call(n[e])===t&&(n[e]=JSON.stringify(n[e]))}return this.addAtom(new T({position:this.sourceWallet.position,walletAddress:this.sourceWallet.address,isotope:"R",token:this.sourceWallet.token,metaType:e,metaId:t,meta:this.finalMetas(n,this.sourceWallet),index:this.generateIndex()})),this.addUserRemainderAtom(this.remainderWallet),this.atoms=T.sortAtoms(this.atoms),this}initShadowWalletClaim({token:e,wallet:t}){this.molecularHash=null;let s={tokenSlug:e,walletAddress:t.address,walletPosition:t.position,batchId:t.batchId};return this.atoms.push(new T({position:this.sourceWallet.position,walletAddress:this.sourceWallet.address,isotope:"C",token:this.sourceWallet.token,metaType:"wallet",metaId:t.address,meta:this.finalMetas(this.contextMetas(s)),index:this.generateIndex()})),this.addUserRemainderAtom(this.remainderWallet),this.atoms=T.sortAtoms(this.atoms),this}initIdentifierCreation({type:e,contact:t,code:s}){this.molecularHash=null;const n={code:s,hash:A(t.trim())};return this.atoms.push(new T({position:this.sourceWallet.position,walletAddress:this.sourceWallet.address,isotope:"C",token:this.sourceWallet.token,metaType:"identifier",metaId:e,meta:this.finalMetas(n,this.sourceWallet),index:this.generateIndex()})),this.addUserRemainderAtom(this.remainderWallet),this.atoms=T.sortAtoms(this.atoms),this}initMeta({meta:e,metaType:t,metaId:s}){return this.molecularHash=null,this.atoms.push(new T({position:this.sourceWallet.position,walletAddress:this.sourceWallet.address,isotope:"M",token:this.sourceWallet.token,metaType:t,metaId:s,meta:this.finalMetas(e,this.sourceWallet),index:this.generateIndex()})),this.addUserRemainderAtom(this.remainderWallet),this.atoms=T.sortAtoms(this.atoms),this}initTokenRequest({token:e,amount:t,metaType:s,metaId:n,meta:i={}}){return this.molecularHash=null,i.token=e,this.atoms.push(new T({position:this.sourceWallet.position,walletAddress:this.sourceWallet.address,isotope:"T",token:this.sourceWallet.token,value:t,metaType:s,metaId:n,meta:this.finalMetas(i),index:this.generateIndex()})),this.addUserRemainderAtom(this.remainderWallet),this.atoms=T.sortAtoms(this.atoms),this}initAuthorization(){return this.molecularHash=null,this.atoms.push(new T({position:this.sourceWallet.position,walletAddress:this.sourceWallet.address,isotope:"U",token:this.sourceWallet.token,meta:this.finalMetas(),index:this.generateIndex()})),this.atoms=T.sortAtoms(this.atoms),this}clear(){return this.molecularHash=null,this.bundle=null,this.status=null,this.createdAt=String(+new Date),this.atoms=[],this}sign({anonymous:t=!1,compressed:s=!0}){if(0===this.atoms.length||0!==this.atoms.filter((e=>!(e instanceof T))).length)throw new E;t||(this.bundle=A(this.secret)),this.molecularHash=T.hashAtoms({atoms:this.atoms});const n=this.atoms[0],i=f(U.generatePrivateKey({secret:this.secret,token:n.token,position:n.position}),128),a=Z.normalizedHash(this.molecularHash);let l="";for(const t in i){let s=i[t];for(let n=0,i=8-a[t];n<i;n++)s=e.create(512).update(s).hex();l+=s}s&&(l=$(l));const r=f(l,Math.ceil(l.length/this.atoms.length));let o=null;for(let e=0,t=r.length;e<t;e++)this.atoms[e].otsFragment=r[e],o=this.atoms[e].position;return o}generateIndex(){return ae.generateNextAtomIndex(this.atoms)}}class le{static __init(e,t){this.arr=[],this.key=null,this.arr=String(t).split("."),this.key=this.arr.shift();const s=Number(this.key);Number.isInteger(s)&&(this.key=s),this.__nextKey=this.arr.length,this.__next=this.__tic(e)}static __tic(e){return!!(Array.isArray(e)||e instanceof Object)&&void 0!==e[this.key]}static has(e,t){return this.__init(e,t),!!this.__next&&(0===this.__nextKey||this.has(e[this.key],this.arr.join(".")))}static get(e,t,s=null){return this.__init(e,t),this.__next?0===this.__nextKey?e[this.key]:this.get(e[this.key],this.arr.join("."),s):s}}class re{static val(e){return Math.abs(1e18*e)<1?0:e}static cmp(e,t,s=!1){const n=1e18*re.val(e),i=1e18*re.val(t);return Math.abs(n-i)<1?0:n>i?1:-1}static equal(e,t){return 0===re.cmp(e,t)}}const oe=require("lodash.merge");class ue{constructor(e,t={}){this.$__headers=new m(t.headers||{}),this.$__needHeaders={accept:"application/json","content-type":"application/json; charset=UTF-8"},this.$__config=oe(t,{method:"POST",headers:this.$__headers}),this.setUri(e)}getConfig(){return this.$__config}setUri(e){this.$__uri=e}getUri(){return this.$__uri}setAuthToken(e){this.$__headers.set("X-Auth-Token",e||"")}getAuthToken(){return this.$__headers.get("X-Auth-Token")||""}async send(e,t={}){e.headers.extend(t),this.$__headers.extend(e.headers.asObject());for(let e in this.$__needHeaders)this.$__headers.set(e,this.$__needHeaders[e]);this.setAuthToken(this.getAuthToken());const s=new p(e,this.$__config);return s.headers.delete("content-length"),await y(s)}}class ce extends K{constructor(e="GraphQL did not provide a valid response.",t=null,s=null){super(e,t,s),this.name="InvalidResponseException"}}class he extends K{constructor(e="Authorization token missing or invalid.",t=null,s=null){super(e,t,s),this.name="UnauthenticatedException"}}class de{constructor({query:e,json:t,dataKey:s=null}){if(this.dataKey=s,this.errorKey="exception",this.$__payload=null,this.$__query=e,this.$__originResponse=t,this.$__response=t,void 0===this.$__response||null===this.$__response)throw new ce;if(le.has(this.$__response,this.errorKey)){const e=le.get(this.$__response,this.errorKey);if(String(e).includes("Unauthenticated"))throw new he;throw new ce}this.init()}data(){if(!this.dataKey)return this.response();if(!le.has(this.response(),this.dataKey))throw new ce;return le.get(this.response(),this.dataKey)}response(){return this.$__response}payload(){return null}query(){return this.$__query}init(){return null}}class me extends K{constructor(e="Code exception",t=null,s=null){super(e,t,s),this.name="CodeException"}}class pe{constructor(e){this.client=e,this.$__fields=null,this.$__variables=null,this.$__request=null,this.$__response=null,this.$__query=null}request(){return this.$__request}response(){return this.$__response}createRequest({variables:e=null,fields:t=null}){this.$__variables=this.compiledVariables(e);let s=this.uri();if(!s)throw new me("Query::createRequest => Uri does not initialized.");return new p(s,{body:JSON.stringify({query:this.compiledQuery(t),variables:this.$__variables})})}compiledVariables(e=null){return e||{}}compiledQuery(e=null){return null!==e&&(this.$__fields=e),this.$__query.replace(new RegExp("@fields","g"),this.compiledFields(this.$__fields))}compiledFields(e){if("string"==typeof e)return e;const t=[];for(let s of Object.keys(e))t.push(e[s]?`${s} ${this.compiledFields(e[s])}`:`${s}`);return`{ ${t.join(", ")} }`}async execute({variables:e=null,fields:t=null}){this.$__request=this.createRequest({variables:e,fields:t});let s=await this.client.send(this.$__request);return this.$__response=await this.createResponseRaw(s),this.$__response}async createResponseRaw(e){return this.createResponse(JSON.parse(await e.text()))}createResponse(e){return new de({query:this,json:e})}uri(){return this.client.getUri()}variables(){return this.$__variables}}class ye extends de{constructor({query:e,json:t}){super({query:e,json:t}),this.dataKey="data.ContinuId",this.init()}payload(){let e=null;const t=this.data();return t&&(e=new U({secret:null,token:t.tokenSlug}),e.address=t.address,e.position=t.position,e.bundle=t.bundleHash,e.batchId=t.batchId,e.characters=t.characters,e.pubkey=t.pubkey,e.balance=1*t.amount),e}}class ge extends pe{constructor(e){super(e),this.$__query="query ($bundle: String!) { ContinuId(bundle: $bundle) @fields }",this.$__fields={address:null,bundleHash:null,tokenSlug:null,position:null,batchId:null,characters:null,pubkey:null,amount:null,createdAt:null}}createResponse(e){return new ye({query:this,json:e})}}class fe extends de{constructor({query:e,json:t}){super({query:e,json:t}),this.dataKey="data.WalletBundle",this.init()}payload(){const e=this.data();if(!e||0===e.length)return null;const t={};return e.forEach((e=>{e.metas=S.aggregateMeta(e.metas),t[e.bundleHash]=e})),t}}class ke extends pe{constructor(e){super(e),this.$__query="query( $bundleHash: String, $bundleHashes: [ String! ], $key: String, $keys: [ String! ], $value: String, $values: [ String! ], $keys_values: [ MetaInput ], $latest: Boolean, $limit: Int, $order: String ) { WalletBundle( bundleHash: $bundleHash, bundleHashes: $bundleHashes, key: $key, keys: $keys, value: $value, values: $values, keys_values: $keys_values, latest: $latest, limit: $limit, order: $order ) @fields }",this.$__fields={bundleHash:null,metas:{molecularHash:null,position:null,key:null,value:null,createdAt:null},createdAt:null}}createResponse(e){return new fe({query:this,json:e})}static createVariables({bundleHash:e=null,key:t=null,value:s=null,latest:n=!0}){const i={latest:n};return e&&(i["string"==typeof e?"bundleHash":"bundleHashes"]=e),t&&(i["string"==typeof t?"key":"keys"]=t),s&&(i["string"==typeof s?"value":"values"]=s),i}}class _e extends de{constructor({query:e,json:t}){super({query:e,json:t}),this.dataKey="data.Wallet",this.init()}static toClientWallet({data:e,secret:t=null}){let s;return null===e.position||void 0===e.position?s=U.create({secretOrBundle:e.bundleHash,token:e.tokenSlug,batchId:e.batchId,characters:e.characters}):(s=new U({secret:t,token:e.tokenSlug,position:e.position,batchId:e.batchId,characters:e.characters}),s.address=e.address,s.bundle=e.bundleHash),e.token&&(s.tokenName=e.token.name,s.tokenAmount=e.token.amount,s.tokenSupply=e.token.supply,s.tokenFungibility=e.token.fungibility),s.tokenUnits=e.tokenUnits,s.molecules=e.molecules,s.balance=Number(e.amount),s.pubkey=e.pubkey,s.createdAt=e.createdAt,s}getWallets(e=null){const t=this.data();if(!t)return null;const s=[];for(let n of t)s.push(_e.toClientWallet({data:n,secret:e}));return s}payload(){const e=this.data();if(!e)return null;const t=[];for(let s of e)t.push(_e.toClientWallet({data:s}));return t}}class we extends pe{constructor(e){super(e),this.$__query="query( $address: String, $bundleHash: String, $token: String, $position: String, $unspent: Boolean ) { Wallet( address: $address, bundleHash: $bundleHash, token: $token, position: $position, unspent: $unspent ) @fields }",this.$__fields={address:null,bundleHash:null,token:{name:null,amount:null,fungibility:null,supply:null},molecules:{molecularHash:null,createdAt:null},tokenSlug:null,batchId:null,position:null,amount:null,characters:null,pubkey:null,createdAt:null,tokenUnits:{id:null,name:null,metas:null}}}createResponse(e){return new _e({query:this,json:e})}}class be extends de{constructor({query:e,json:t}){super({query:e,json:t}),this.dataKey="data.Balance",this.init()}payload(){const e=this.data();return e&&e.bundleHash&&e.tokenSlug?_e.toClientWallet({data:e}):null}}class $e extends pe{constructor(e){super(e),this.$__query="query( $address: String, $bundleHash: String, $token: String, $position: String ) { Balance( address: $address, bundleHash: $bundleHash, token: $token, position: $position ) @fields }",this.$__fields={address:null,bundleHash:null,tokenSlug:null,batchId:null,position:null,amount:null,characters:null,pubkey:null,createdAt:null,tokenUnits:{id:null,name:null,metas:null}}}createResponse(e){return new be({query:this,json:e})}}class Ie extends de{constructor({query:e,json:t}){super({query:e,json:t}),this.dataKey="data.MetaType",this.init()}payload(){const e=this.data();if(!e||0===e.length)return null;let t={instances:{},instanceCount:{},paginatorInfo:{}},s=e.pop();return s.instances&&(t.instances=s.instances),s.instanceCount&&(t.instanceCount=s.instanceCount),s.paginatorInfo&&(t.paginatorInfo=s.paginatorInfo),t}}class xe extends pe{constructor(e){super(e),this.$__query="query( $metaType: String, $metaTypes: [ String! ], $metaId: String, $metaIds: [ String! ], $key: String, $keys: [ String! ], $value: String, $values: [ String! ], $count: String, $latest: Boolean, $filter: [ MetaFilter! ], $latestMetas: Boolean, $queryArgs: QueryArgs, $countBy: String ) { MetaType( metaType: $metaType, metaTypes: $metaTypes, metaId: $metaId, metaIds: $metaIds, key: $key, keys: $keys, value: $value, values: $values, count: $count, filter: $filter, latestMetas: $latestMetas, queryArgs: $queryArgs, countBy: $countBy ) @fields }",this.$__fields={metaType:null,instanceCount:{key:null,value:null},instances:{metaType:null,metaId:null,createdAt:null,"metas(latest:$latest)":{molecularHash:null,position:null,key:null,value:null,createdAt:null}},paginatorInfo:{currentPage:null,total:null}}}createResponse(e){return new Ie({query:this,json:e})}static createVariables({metaType:e=null,metaId:t=null,key:s=null,value:n=null,latest:i=null,latestMetas:a=!0,filter:l=null,queryArgs:r=null,count:o=null,countBy:u=null}){const c={};return e&&(c["string"==typeof e?"metaType":"metaTypes"]=e),t&&(c["string"==typeof t?"metaId":"metaIds"]=t),s&&(c["string"==typeof s?"key":"keys"]=s),n&&(c["string"==typeof n?"value":"values"]=n),i&&(c.latest=!!i),a&&(c.latestMetas=!!a),l&&(c.filter=l),r&&(c.queryArgs=r),o&&(c.count=o),u&&(c.countBy=u),c}}class Se extends pe{static getFields(){return{batchId:null,type:null,status:null,createdAt:null,wallet:{address:null,bundleHash:null,amount:null,tokenSlug:null,token:{name:null,amount:null},tokenUnits:{id:null,name:null,metas:null}},fromWallet:{address:null,bundleHash:null,amount:null},toWallet:{address:null,bundleHash:null,amount:null},sourceTokenUnits:{id:null,name:null,metas:null},transferTokenUnits:{id:null,name:null,metas:null},metas:{key:null,value:null}}}constructor(e){super(e),this.$__query="query( $batchId: String ) { Batch( batchId: $batchId ) @fields }",this.$__fields=Se.getFields(),this.$__fields.children=Se.getFields()}createResponse(e){let t=new de({query:this,json:e});return t.dataKey="data.Batch",t}}class Te extends pe{constructor(e){super(e),this.$__query="query( $batchId: String ) { BatchHistory( batchId: $batchId ) @fields }",this.$__fields=Se.getFields()}createResponse(e){let t=new de({query:this,json:e});return t.dataKey="data.BatchHistory",t}}class Me extends de{constructor({query:e,json:t}){super({query:e,json:t}),this.dataKey="data.ProposeMolecule",this.$__clientMolecule=e.molecule(),this.init()}init(){const e=le.get(this.data(),"payload");try{this.$__payload=JSON.parse(e)}catch(e){this.$__payload=null}}clientMolecule(){return this.$__clientMolecule}molecule(){const e=this.data();if(!e)return null;const t=new ie;return t.molecularHash=le.get(e,"molecularHash"),t.status=le.get(e,"status"),t.status=le.get(e,"createdAt"),t}success(){return"accepted"===this.status()}status(){return le.get(this.data(),"status","rejected")}reason(){return le.get(this.data(),"reason","Invalid response from server")}payload(){return this.$__payload}}class We extends pe{}const ve=require("lodash.merge");class Ae extends We{constructor(e,t=null){super(e),this.$__molecule=t,this.$__remainderWallet=null,this.$__query="mutation( $molecule: MoleculeInput! ) { ProposeMolecule( molecule: $molecule ) @fields }",this.$__fields={molecularHash:null,height:null,depth:null,status:null,reason:null,payload:null,createdAt:null,receivedAt:null,processedAt:null,broadcastedAt:null}}compiledVariables(e){const t=super.compiledVariables(e);return ve(t,{molecule:this.molecule()})}createResponse(e){return new Me({query:this,json:e})}async execute({variables:e=null,fields:t=null}){return(e=e||{}).molecule=this.molecule(),await super.execute({variables:e,fields:t})}remainderWallet(){return this.$__remainderWallet}molecule(){return this.$__molecule}}class qe extends Me{payloadKey(e){if(!le.has(this.payload(),e))throw new ce(`ResponseAuthorization: '${e}' key is not found in the payload.`);return le.get(this.payload(),e)}token(){return this.payloadKey("token")}time(){return this.payloadKey("time")}}class Ce extends Ae{fillMolecule(){this.$__molecule.initAuthorization(),this.$__molecule.sign({}),this.$__molecule.check()}createResponse(e){return new qe({query:this,json:e})}}class Re extends Me{}class Be extends Ae{fillMolecule({recipientWallet:e,amount:t,meta:s=null}){this.$__molecule.initTokenCreation({recipientWallet:e,amount:t,meta:s||{}}),this.$__molecule.sign({}),this.$__molecule.check()}createResponse(e){return new Re({query:this,json:e})}}class Oe extends Me{}class He extends Ae{fillMolecule({token:e,amount:t,metaType:s,metaId:n,meta:i=null}){this.$__molecule.initTokenRequest({token:e,amount:t,metaType:s,metaId:n,meta:i||{}}),this.$__molecule.sign({}),this.$__molecule.check()}createResponse(e){return new Oe({query:this,json:e})}}class Ue extends Me{payload(){const e={reason:null,status:null},t=this.data();return e.reason=void 0===t.reason?"Invalid response from server":t.reason,e.status=void 0===t.status?"rejected":t.status,e}}class Ke extends Ae{fillMolecule({recipientWallet:e,amount:t}){this.$__molecule.initValue({recipientWallet:e,amount:t}),this.$__molecule.sign({}),this.$__molecule.check(this.$__molecule.sourceWallet)}createResponse(e){return new Ue({query:this,json:e})}}class je extends Me{}class Ee extends Ae{fillMolecule({type:e,contact:t,code:s}){this.$__molecule.initIdentifierCreation({type:e,contact:t,code:s}),this.$__molecule.sign({}),this.$__molecule.check()}createResponse(e){return new je({query:this,json:e})}}class Qe extends Me{}class Ne extends Ae{fillMolecule({token:e,batchId:t}){let s=U.create({secretOrBundle:this.$__molecule.secret,token:e,batchId:t});this.$__molecule.initShadowWalletClaim({token:e,wallet:s}),this.$__molecule.sign({}),this.$__molecule.check()}createResponse(e){return new Qe({query:this,json:e})}}class Pe extends Me{}class Fe extends Ae{fillMolecule({metaType:e,metaId:t,meta:s}){this.$__molecule.initMeta({meta:s,metaType:e,metaId:t}),this.$__molecule.sign({}),this.$__molecule.check()}createResponse(e){return new Pe({query:this,json:e})}}class Ve extends Me{}class ze extends Ae{fillMolecule(e){this.$__molecule.initWalletCreation(e),this.$__molecule.sign({}),this.$__molecule.check()}createResponse(e){return new Ve({query:this,json:e})}}class Je extends de{constructor({query:e,json:t}){super({query:e,json:t}),this.dataKey="data.AccessToken",this.init()}reason(){return"Invalid response from server"}success(){return null!==this.payload()}payload(){return this.data()}payloadKey(e){if(!le.has(this.payload(),e))throw new ce(`ResponseAuthorizationGuest: '${e}' key is not found in the payload.`);return le.get(this.payload(),e)}token(){return this.payloadKey("token")}time(){return this.payloadKey("time")}}class De extends pe{constructor(e){super(e),this.$__query="mutation( $cellSlug: String ) { AccessToken( cellSlug: $cellSlug ) @fields }",this.$__fields={token:null,time:null}}createResponse(e){return new Je({query:this,json:e})}}class Le extends K{constructor(e="The shadow wallet does not exist",t=null,s=null){super(e,t,s),this.name="WalletShadowException"}}class Ge extends K{constructor(e="Stackable tokens with unit IDs cannot have decimal places!",t=null,s=null){super(e,t,s),this.name="StackableUnitDecimalsException"}}class Xe extends K{constructor(e="Stackable tokens with unit IDs cannot have decimal places!",t=null,s=null){super(e,t,s),this.name="StackableUnitAmountException"}}class Ye{constructor({uri:e,client:t=null,serverSdkVersion:s=3,logging:n=!1}){this.initialize({uri:e,client:t,serverSdkVersion:s,logging:n})}initialize({uri:e,client:t=null,serverSdkVersion:s=3,logging:n=!1}){this.$__logging=n,this.$__logging&&console.info(`KnishIOClient::initialize() - Initializing new Knish.IO client session for SDK version ${s}...`),this.reset(),this.$__client=t||new ue(e),this.$__serverSdkVersion=s}deinitialize(){this.$__logging&&console.info("KnishIOClient::deinitialize() - Clearing the Knish.IO client session..."),this.reset()}getServerSdkVersion(){return this.$__serverSdkVersion}reset(){this.$__secret="",this.$__bundle="",this.remainderWallet=null}cellSlug(){return this.$__cellSlug||null}setCellSlug(e){this.$__cellSlug=e}uri(){return this.client().getUri()}client(){return this.$__client}hasSecret(){return!!this.$__secret}setSecret(e){this.$__secret=e,this.$__bundle=A(e)}getSecret(){if(!this.$__secret)throw new he("KnishIOClient::getSecret() - Unable to find a stored getSecret!");return this.$__secret}getBundle(){if(!this.$__bundle)throw new he("KnishIOClient::getBundle() - Unable to find a stored getBundle!");return this.$__bundle}async getSourceWallet(){let e=(await this.queryContinuId({bundle:this.getBundle()})).payload();return e||(e=new U({secret:this.getSecret()})),e}getRemainderWallet(){return this.remainderWallet}async createMolecule({secret:e=null,sourceWallet:t=null,remainderWallet:s=null}){this.$__logging&&console.info("KnishIOClient::createMolecule() - Creating a new molecule...");const n=e||this.getSecret();let i=t;return!t&&this.lastMoleculeQuery&&"AUTH"!==this.getRemainderWallet().token&&this.lastMoleculeQuery&&this.lastMoleculeQuery.response()&&this.lastMoleculeQuery.response().success()&&(i=this.getRemainderWallet()),null===i&&(i=await this.getSourceWallet()),this.remainderWallet=s||U.create({secretOrBundle:n,token:i.token,batchId:i.batchId,characters:i.characters}),new ae({secret:n,sourceWallet:i,remainderWallet:this.getRemainderWallet(),cellSlug:this.cellSlug()})}createQuery(e){return new e(this.client())}async createMoleculeMutation({mutationClass:e,molecule:t=null}){this.$__logging&&console.info(`KnishIOClient::createMoleculeQuery() - Creating a new ${e.name} query...`);let s=t||await this.createMolecule({});const n=new e(this.client(),s);if(!(n instanceof Ae))throw new me(`${this.constructor.name}::createMoleculeMutation - required class instance of MutationProposeMolecule.`);return this.lastMoleculeQuery=n,n}async requestAuthToken({secret:e=null,seed:t=null,cellSlug:s=null}){this.$__logging&&console.info("KnishIOClient::requestAuthToken() - Requesting authorization token...");let n=!1;if(t?this.setSecret(v(t)):e?this.setSecret(e):(this.$__logging&&console.info("KnishIOClient::requestAuthToken() - Guest mode enabled..."),n=!0),this.$__cellSlug=s||this.cellSlug(),this.$__serverSdkVersion>=3){let e,t;if(n)e=await this.createQuery(De),t=await e.execute({variables:{cellSlug:this.$__cellSlug}});else{const s=await this.createMolecule({secret:this.getSecret(),sourceWallet:new U({secret:this.getSecret(),token:"AUTH"})});e=await this.createMoleculeMutation({mutationClass:Ce,molecule:s}),e.fillMolecule(),t=await e.execute({})}if(!t.success())throw this.$__logging&&console.warn("KnishIOClient::requestAuthToken() - Unable to retrieve auth token..."),new he(t.reason());{const e=t.token();this.client().setAuthToken(e),this.$__logging&&console.info(`KnishIOClient::requestAuthToken() - Successfully retrieved auth token ${t.token()}...`)}return t}this.$__logging&&console.warn("KnishIOClient::requestAuthToken() - Server SDK version does not require an auth token...")}getAuthToken(){return this.client().getAuthToken()}async queryBalance({token:e,bundle:t=null}){const s=this.createQuery($e);return await s.execute({variables:{bundleHash:t||this.getBundle(),token:e}})}queryMeta({metaType:e,metaId:t=null,key:s=null,value:n=null,latest:i=null,latestMetas:a=null,fields:l=null,filter:r=null,queryArgs:o=null,count:u=null,countBy:c=null}){this.$__logging&&console.info(`KnishIOClient::queryMeta() - Querying metaType: ${e}, metaId: ${t}...`);const h=this.createQuery(xe),d=xe.createVariables({metaType:e,metaId:t,key:s,value:n,latest:i,latestMetas:a,filter:r,queryArgs:o,count:u,countBy:c});return h.execute({variables:d,fields:l}).then((e=>e.payload()))}queryMetaInstance({metaType:e,metaId:t=null,key:s=null,value:n=null,latest:i=null,filter:a=null,fields:l=null}){this.$__logging&&console.info(`KnishIOClient::queryMetaInstance() - Querying metaType: ${e}, metaId: ${t}...`);const r={metaType:e,metaIds:[t],keys:[s],values:[n],latest:i,filter:a};return this.createQuery(xe).execute({variables:r,fields:l}).then((e=>e.data()))}async queryBatch({batchId:e}){this.$__logging&&console.info(`KnishIOClient::queryBatch() - Querying cascade meta instance data for batchId: ${e}...`);const t=this.createQuery(Se);return await t.execute({variables:{batchId:e}})}async queryBatchHistory({batchId:e}){this.$__logging&&console.info(`KnishIOClient::queryBatchHistory() - Querying cascade meta instance data for batchId: ${e}...`);const t=this.createQuery(Te);return await t.execute({variables:{batchId:e}})}async createWallet({token:e}){const t=new U({secret:this.getSecret(),token:e}),s=await this.createMoleculeMutation({mutationClass:ze});return s.fillMolecule(t),await s.execute({})}async createToken({token:e,amount:t=null,meta:s=null,units:n=[]}){if(s=S.aggregateMeta(s),"stackable"===le.get(s||{},"fungibility")&&n.length>0){if(s.decimals&&s.decimals>0)throw new Ge;if(t>0)throw new Xe;t=n.length,s.splittable=1,s.tokenUnits=JSON.stringify(n)}const i=new U({secret:this.getSecret(),token:e}),a=await this.createMoleculeMutation({mutationClass:Be});return a.fillMolecule({recipientWallet:i,amount:t,meta:s||{}}),await a.execute({})}async createMeta({metaType:e,metaId:t,meta:s=null}){const n=await this.createMoleculeMutation({mutationClass:Fe,molecule:await this.createMolecule({secret:this.getSecret(),sourceWallet:await this.getSourceWallet()})});return n.fillMolecule({metaType:e,metaId:t,meta:s}),await n.execute({})}async createIdentifier({type:e,contact:t,code:s}){const n=await this.createMoleculeMutation({mutationClass:Ee});return n.fillMolecule({type:e,contact:t,code:s}),await n.execute({})}queryWallets({bundle:e=null,token:t=null,unspent:s=!0}){this.$__logging&&console.info(`KnishIOClient::queryWallets() - Querying wallets${e?` for ${e}`:""}...`);return this.createQuery(we).execute({variables:{bundleHash:e||this.getBundle(),token:t,unspent:s}}).then((e=>e.getWallets()))}queryShadowWallets({token:e="KNISH",bundle:t=null}){console.log("queryShadowWallets",e);const s=t||this.getBundle();this.$__logging&&console.info(`KnishIOClient::queryShadowWallets() - Querying ${e} shadow wallets for ${t}...`);return this.createQuery(we).execute({variables:{bundleHash:s,token:e}}).then((e=>(console.log(e),e.payload())))}queryBundle({bundle:e=null,key:t=null,value:s=null,latest:n=!0,fields:i=null,raw:a=!1}){this.$__logging&&console.info(`KnishIOClient::queryBundle() - Querying wallet bundle metadata${e?` for ${e}`:""}...`);const l=e||this.getBundle(),r=this.createQuery(ke),o=ke.createVariables({bundleHash:l,key:t,value:s,latest:n});return r.execute({variables:o,fields:i}).then((e=>a?e:e.payload()))}async queryContinuId({bundle:e}){const t=this.createQuery(ge);return await t.execute({variables:{bundle:e}})}async requestTokens({token:e,to:t,amount:s=null,units:n=[],meta:i=null}){let a,l;if(i=i||{},n.length>0){if(s>0)throw new Xe;s=n.length,(i=S.aggregateMeta(i)).tokenUnits=JSON.stringify(n)}t?("[object String]"===Object.prototype.toString.call(t)&&(U.isBundleHash(t)?(a="walletBundle",l=t):t=U.create({secretOrBundle:t,token:e})),t instanceof U&&(a="wallet",i.position=t.position,i.bundle=t.bundle,l=t.address)):(a="walletBundle",l=this.getBundle());const r=await this.createMoleculeMutation({mutationClass:He});return r.fillMolecule({token:e,amount:s,metaType:a,metaId:l,meta:i}),await r.execute({})}async claimShadowWallet({token:e,batchId:t=null,molecule:s=null}){const n=await this.createMoleculeMutation({mutationClass:Ne,molecule:s});return n.fillMolecule({token:e,batchId:t}),await n.execute({})}async claimShadowWallets({token:e}){const t=await this.queryShadowWallets({token:e});if(!t||!Array.isArray(t))throw new Le;t.forEach((e=>{if(!e.isShadow())throw new Le}));let s=[];for(const n of t)s.push(await this.claimShadowWallet({token:e,batchId:n.batchId}));return s}async transferToken({recipient:e,token:t,amount:s=null,units:n=[],sourceWallet:i=null}){if(null===i&&(i=(await this.queryBalance({token:t})).payload()),n.length>0){if(s>0)throw new Xe;s=n.length}if(null===i||re.cmp(i.balance,s)<0)throw new V;let a=e instanceof U?e:(await this.queryBalance({token:t,bundle:e})).payload();null===a&&(a=U.create({secretOrBundle:e,token:t})),this.remainderWallet=U.create({secretOrBundle:this.getSecret(),token:t,characters:i.characters}),i.splitUnits(n,this.remainderWallet,a);const l=await this.createMolecule({sourceWallet:i,remainderWallet:this.remainderWallet}),r=await this.createMoleculeMutation({mutationClass:Ke,molecule:l});return r.fillMolecule({recipientWallet:a,amount:s}),await r.execute({})}async burnTokens({token:e,amount:t=null,units:s=[],sourceWallet:n=null}){null===n&&(n=(await this.queryBalance({token:e})).payload());let i=U.create({secretOrBundle:this.getSecret(),token:e,characters:n.characters});if(s.length>0){if(t>0)throw new Xe;t=s.length,n.splitUnits(s,i)}let a=await this.createMolecule({secret:null,sourceWallet:n,remainderWallet:i});return a.burnToken({amount:t}),a.sign({}),a.check(),new Ae(this.client(),a).execute({})}}class Ze{constructor(e){this.secrets=[v(),v()],this.tokenSlugs=["TESTTOKEN","UTENVSTACKABLE","UTSTACKUNIT","UTENVSTACKUNIT"],this.graphqlUrl=e,console.log(`---------- GraphQL URI: ${this.graphqlUrl}`),this.clients={},this.tokenUnits=[["unit_id_1","unit_name_1","unit_meta_1"],["unit_id_2","unit_name_2","unit_meta_2"],["unit_id_3","unit_name_3","unit_meta_3"],["unit_id_4","unit_name_4","unit_meta_4"],["unit_id_5","unit_name_5","unit_meta_5"],["unit_id_6","unit_name_6","unit_meta_6"],["unit_id_7","unit_name_7","unit_meta_7"],["unit_id_8","unit_name_8","unit_meta_8"],["unit_id_9","unit_name_9","unit_meta_9"],["unit_id_10","unit_name_10","unit_meta_10"],["unit_id_11","unit_name_11","unit_meta_11"]],this.tokenUnits=[["unit_id_1"],["unit_id_2"],["unit_id_3"],["unit_id_4"],["unit_id_5"],["unit_id_6"],["unit_id_7"],["unit_id_8"],["unit_id_9"],["unit_id_10"],["unit_id_11"]]}async testAll(){await this.client(this.secrets[0]),await this.client(this.secrets[1]),await this.testCreateToken(),await this.testCreateWallet(),await this.testCreateMeta(),await this.testCreateIdentifier(),await this.testRequestTokens(),await this.testTransferToken(),await this.testBurnToken(),await this.testClaimShadowWallet(),await this.testQueryMeta(),await this.testQueryWallets(),await this.testQueryShadowWallets(),await this.testQueryBundle(),await this.testQueryBalance()}async testCreateToken(){let e=await this.client(this.secrets[0]),t=await this.client(process.env.SECRET_TOKEN_KNISH),s={};s[0]=await e.createToken({token:this.tokenSlugs[0],amount:1e3,meta:{name:this.tokenSlugs[0],fungibility:"stackable",supply:"limited",decimals:0,icon:"icon"}}),this.checkResponse(s[0],"testCreateToken.0"),s[1]=await t.createToken({token:this.tokenSlugs[1],amount:1e3,meta:{name:this.tokenSlugs[1],fungibility:"stackable",supply:"limited",decimals:0,icon:"icon"}}),this.checkResponse(s[1],"testCreateToken.1"),s[2]=await e.createToken({token:this.tokenSlugs[2],units:this.tokenUnits,meta:{name:this.tokenSlugs[2],supply:"limited",fungibility:"stackable"},batchId:"batch_0"}),this.checkResponse(s[2],"testCreateToken.2"),s[3]=await t.createToken({token:this.tokenSlugs[3],units:this.tokenUnits,meta:{name:this.tokenSlugs[3],supply:"limited",fungibility:"stackable"},batchId:"batch_0"}),this.checkResponse(s[3],"testCreateToken.3")}async testCreateWallet(){let e=await this.client(this.secrets[0]),t=await e.createWallet({token:this.tokenSlugs[1]});this.checkResponse(t,"testCreateWallet")}async testCreateMeta(){let e=await this.client(this.secrets[0]),t=await e.createMeta({metaType:"metaType",metaId:"metaId",meta:{key1:"value1",key2:"value2"}});this.checkResponse(t,"testCreateMeta")}async testCreateIdentifier(){let e=await this.client(this.secrets[0]),t=await e.createIdentifier({type:"email",contact:"test@test.com",code:"1234"});this.checkResponse(t,"testCreateIdentifier")}async testRequestTokens(){let e=await this.client(this.secrets[0]),t=await e.requestTokens({token:this.tokenSlugs[1],amount:10,to:this.secrets[0],batchId:"batch_5"});this.checkResponse(t,"testRequestTokens.1"),t=await e.requestTokens({token:this.tokenSlugs[3],units:["unit_id_10","unit_id_11"],to:this.secrets[0],batchId:"batch_6"}),this.checkResponse(t,"testRequestTokens.2")}async testTransferToken(){let e,t=A(this.secrets[1]),s=await this.client(this.secrets[0]);e=await s.transferToken({recipient:t,token:this.tokenSlugs[0],amount:10,batchId:"batch_1"}),this.checkResponse(e,"testTransferToken"),e=await s.transferToken({recipient:t,token:this.tokenSlugs[2],units:["unit_id_1","unit_id_2"],batchId:"batch_2"}),this.checkResponse(e,"testTransferUnitToken")}async testBurnToken(){let e;A(this.secrets[1]);let t=await this.client(this.secrets[0]);e=await t.burnTokens({token:this.tokenSlugs[0],amount:10,batchId:"batch_3"}),this.checkResponse(e,"testBurnToken"),e=await t.burnTokens({token:this.tokenSlugs[2],units:["unit_id_3","unit_id_4"],batchId:"batch_4"}),this.checkResponse(e,"testBurnUnitToken")}async testClaimShadowWallet(){let e=await this.client(this.secrets[1]),t=await e.queryBalance({token:this.tokenSlugs[0]}),s=await e.claimShadowWallet({token:this.tokenSlugs[0],batchId:t.payload().batchId});this.checkResponse(s,"testClaimShadowWallet")}async testQueryMeta(){let e=await this.client(this.secrets[0]),t=await e.queryMeta({metaType:"metaType",metaId:"metaId"});this.checkResponse(t,"testQueryMeta")}async testQueryWallets(){let e=await this.client(this.secrets[0]),t=await e.queryWallets({});this.checkResponse(t,"testQueryWallets")}async testQueryShadowWallets(){let e=await this.client(this.secrets[1]),t=await e.queryShadowWallets({token:this.tokenSlugs[0]});this.checkResponse(t,"testQueryShadowWallets")}async testQueryBundle(){let e=await this.client(this.secrets[0]),t=await e.queryBundle({});this.checkResponse(t,"testQueryBundle")}async testQueryContinuId(){let e=A(this.secrets[0]),t=await this.client(this.secrets[0]),s=await t.queryContinuId({bundle:e});this.checkResponse(s,"testQueryContinuId")}async testQueryBalance(){let e=await this.client(this.secrets[0]),t=await e.queryBalance({token:this.tokenSlugs[0]});this.checkResponse(t,"testQueryBalance")}async client(e,t="unit_test"){if(!this.clients[e]){this.clients[e]=new Ye({uri:this.graphqlUrl,logging:!0});let s=await this.clients[e].requestAuthToken({secret:e,cellSlug:t});this.checkResponse(s,"requestAuthToken")}return this.clients[e]}checkResponse(e,t){console.log(` ############### ${t} ###############`),console.log(e),e instanceof Me?(e.success()||this.debug(e),console.assert("accepted"===e.status(),e)):this.debug(e)}debug(e){e.data&&le.get(e.data()||{},"reason")?console.log(e.data().reason):console.log(e)}}export{T as Atom,Ye as KnishIOClient,S as Meta,ae as Molecule,Ze as Test,U as Wallet,I as base64ToHex,w as bufferToHexString,_ as charsetBaseConvert,f as chunkSubstr,R as decryptMessage,C as encryptMessage,A as generateBundleHash,B as generateEncPrivateKey,O as generateEncPublicKey,v as generateSecret,H as hashShare,b as hexStringToBuffer,$ as hexToBase64,x as isHex,k as randomString};
