import{shake256 as e}from"js-sha3";import t from"big-integer";import{decode as s,encode as n}from"@stablelib/base64";import l from"big-integer/BigInteger";import a from"base-x";import{Buffer as r}from"buffer";import{box as i}from"tweetnacl";import{seal as o,open as u}from"tweetnacl-sealedbox-js";import{encode as c,decode as h}from"@stablelib/utf8";import{Headers as d,Request as m}from"servie";import{fetch as p}from"popsicle";class y{static toHex(e,t){const s=(e,t)=>{const s=t?["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F"]:["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"];return s[Math.floor(e/16)]+s[e%16]},n=Object.assign({grouping:0,rowlength:0,uppercase:!1},t||{});let l="",a=0,r=0;for(let t=0;t<e.length&&(l+=s(e[t],n.uppercase),t!==e.length-1);++t)n.grouping>0&&++a===n.grouping&&(a=0,n.rowlength>0&&++r===n.rowlength?(r=0,l+="\n"):l+=" ");return l}static toUint8Array(e){let t=e.toLowerCase().replace(/\s/g,"");t.length%2==1&&(t="0"+t);let s=new Uint8Array(Math.floor(t.length/2)),n=-1;for(let e=0;e<t.length;++e){let l=t[e],a=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"].indexOf(l);if(-1===a)throw Error("unexpected character");-1===n?n=16*a:(s[Math.floor(e/2)]=n+a,n=-1)}return s}}function g(e,t){const s=Math.ceil(e.length/t),n=new Array(s);for(let l=0,a=0;l<s;++l,a+=t)n[l]=e.substr(a,t);return n}function f(e=256,t="abcdef0123456789"){let s=new Uint8Array(e);return(window.crypto||window.msCrypto).getRandomValues(s),s=s.map((e=>t.charCodeAt(e%t.length))),String.fromCharCode.apply(null,s)}function k(e,s,n,l,a){if(l=l||"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz~`!@#$%^&*()-_=+[{]}\\|;:'\",<.>/?¿¡",a=a||l,s>l.length||n>a.length)return console.warn("Can't convert",e,"to base",n,"greater than symbol table length. src-table:",l.length,"dest-table:",a.length),!1;let r=t(0);for(let t=0;t<e.length;t++)r=r.multiply(s).add(l.indexOf(e.charAt(t)));if(r.lesser(0))return 0;let i=r.mod(n),o=a.charAt(i),u=r.divide(n);for(;!u.equals(0);)i=u.mod(n),u=u.divide(n),o=a.charAt(i)+o;return o}function w(e){return y.toHex(e,{})}function b(e){return y.toUint8Array(e)}function _(e){return n(y.toUint8Array(e))}function $(e){return y.toHex(s(e),{})}function I(e){return/^[A-F0-9]+$/i.test(e)}String.prototype.trim||(String.prototype.trim=function(){return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")});class x{constructor({modelType:e,modelId:t,meta:s,snapshotMolecule:n=null}){this.modelType=e,this.modelId=t,this.meta=s,this.snapshotMolecule=n,this.createdAt=+new Date}static normalizeMeta(e){if("[object Object]"===Object.prototype.toString.call(e)){const t=[];for(const s in e)e.hasOwnProperty(s)&&null!==e[s]&&t.push({key:s,value:e[s]});return t}return e}static aggregateMeta(e){const t={};if("[object Array]"===Object.prototype.toString.call(e))for(let s of e)t[s.key]=s.value;return Object.keys(t).length>0?t:e}}class W{constructor({position:e=null,walletAddress:t=null,isotope:s=null,token:n=null,value:l=null,batchId:a=null,metaType:r=null,metaId:i=null,meta:o=null,otsFragment:u=null,index:c=null}){this.position=e,this.walletAddress=t,this.isotope=s,this.token=n,this.value=null!==l?String(l):null,this.batchId=a,this.metaType=r,this.metaId=i,this.meta=o?x.normalizeMeta(o):[],this.index=c,this.otsFragment=u,this.createdAt=String(+new Date)}static jsonToObject(e){const t=Object.assign(new W({}),JSON.parse(e)),s=Object.keys(new W({}));for(const e in t)t.hasOwnProperty(e)&&!s.includes(e)&&delete t[e];return t}static hashAtoms({atoms:t,output:s="base17"}){const n=e.create(256),l=t.length,a=W.sortAtoms(t);for(const e of a){n.update(String(l));for(const t in e)if(e.hasOwnProperty(t)){if(["batchId","pubkey","characters"].includes(t)&&null===e[t])continue;if(["otsFragment","index"].includes(t))continue;if("meta"===t){e[t]=x.normalizeMeta(e[t]);for(const s of e[t])void 0!==s.value&&null!==s.value&&(n.update(String(s.key)),n.update(String(s.value)));continue}if(["position","walletAddress","isotope"].includes(t)){n.update(null===e[t]?"":String(e[t]));continue}null!==e[t]&&n.update(null===e[t]?"":String(e[t]))}}switch(s){case"hex":return n.hex();case"array":return n.array();default:return k(n.hex(),16,17,"0123456789abcdef","0123456789abcdefg").padStart(64,"0")}}static sortAtoms(e){const t=[...e];return t.sort(((e,t)=>e.index===t.index?0:e.index<t.index?-1:1)),t}}class S{constructor(e={}){this.$options=Object.assign({characters:"GMP"},e),this.$encoder=a(this[this.$options.characters]||this.GMP)}encode(e){return this.$encoder.encode(r.from(e))}decode(e){return this.$encoder.decode(e)}get GMP(){return"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuv"}get BITCOIN(){return"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}get FLICKR(){return"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}get RIPPLE(){return"rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz"}get IPFS(){return"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}}class M{constructor(e=null){this.base=new S(e)}encrypt(e,t){return this.encode(o(c(JSON.stringify(e)),this.decode(t)))}decrypt(e,t,s){try{return JSON.parse(h(u(this.decode(e),this.decode(s),this.decode(t))))}catch(e){return null}}generatePrivateKey(t){const s=e.create(8*i.secretKeyLength);return s.update(t),this.base.encode(r.from(s.digest()))}generatePublicKey(e){const t=i.keyPair.fromSecretKey(this.decode(e));return this.encode(t.publicKey)}shortHash(t){const s=e.create(64);return s.update(t),this.base.encode(r.from(s.digest()))}decode(e){return this.base.decode(e)}encode(e){return this.base.encode(e)}}function v(t=null,s=2048){if(console.info(`Crypto::generateSecret() - Computing new secret${t?" from existing seed":""}...`),t){const n=e.create(2*s);return n.update(t),n.hex()}return f(s)}function A(t){console.info("Crypto::bundle() - Computing wallet bundle from secret...");const s=e.create(256);return s.update(t),s.hex()}function T(){return f(64)}function q(e=64){return f(e,"abcdef0123456789")}function C(e,t,s=null){return new M(s).encrypt(e,t)}function O(e,t,s,n=null){return new M(n).decrypt(e,t,s)}function H(e,t=null){return new M(t).generatePrivateKey(e)}function R(e,t=null){return new M(t).generatePublicKey(e)}function K(e,t=null){return new M(t).shortHash(e)}class j{constructor({secret:e=null,token:t="USER",position:s=null,batchId:n=null,characters:l=null}){this.token=t,this.balance=0,this.molecules={},this.key=null,this.address=null,this.privkey=null,this.pubkey=null,this.bundle=e?A(e):null,this.batchId=n,this.position=s,this.characters="undefined"!==(new S)[l]?l:null,e&&(this.position=this.position||q(),this.prepareKeys(e))}static create({secretOrBundle:e,token:t,batchId:s=null,characters:n=null}){let l=j.isBundleHash(e)?null:e,a=l?A(l):e,r=l?q():null,i=new j({secret:l,token:t,position:r,batchId:s,characters:n});return i.bundle=a,i}static isBundleHash(e){return"string"==typeof e&&(64===e.length&&I(e))}isShadow(){return!(void 0!==this.position&&null!==this.position||void 0!==this.address&&null!==this.address)}initBatchId({senderWallet:e,amount:t}){e.batchId&&(this.batchId=T())}prepareKeys(e){null===this.key&&null===this.address&&(this.key=j.generatePrivateKey({secret:e,token:this.token,position:this.position}),this.address=j.generatePublicKey(this.key),this.getMyEncPrivateKey(),this.getMyEncPublicKey())}getMyEncPrivateKey(){return null===this.privkey&&null!==this.key&&(this.privkey=H(this.key,this.characters)),this.privkey}getMyEncPublicKey(){const e=this.getMyEncPrivateKey();return!this.pubkey&&e&&(this.pubkey=R(e,this.characters)),this.pubkey}encryptMyMessage(e){const t={};for(let s=1,n=arguments.length;s<n;s++)t[K(arguments[s],this.characters)]=C(e,arguments[s],this.characters);return t}decryptMyMessage(e){const t=this.getMyEncPublicKey();let s=e;return null!==e&&"object"==typeof e&&"[object Object]"===Object.prototype.toString.call(e)&&(s=e[K(t,this.characters)]||""),O(s,this.getMyEncPrivateKey(),t,this.characters)}encryptString({data:e,publicKeys:t}){if(e){const s=this.getMyEncPublicKey();"string"==typeof t&&(t=new Array(t));const n=this.encryptMyMessage(e,s,...t);return btoa(JSON.stringify(n))}}decryptString({data:e,fallbackValue:t=null}){if(e)try{const s=JSON.parse(atob(e));return this.decryptMyMessage(s)||t}catch(s){return console.error(s),t||e}}static generatePrivateKey({secret:t,token:s,position:n}){const a=l(t,16).add(l(n,16)),r=e.create(8192);return r.update(a.toString(16)),s&&r.update(s),e.create(8192).update(r.hex()).hex()}static generatePublicKey(t){const s=g(t,128),n=e.create(8192);for(const t in s){let l=s[t];for(let t=1;t<=16;t++)l=e.create(512).update(l).hex();n.update(l)}return e.create(256).update(n.hex()).hex()}}class B extends TypeError{constructor(e=null,t=null,s=null){if(super(e,t,s),null===e)throw new this("Unknown "+this.constructor.name);this.name="BaseException"}toString(){return`${this.name}: ${this.message}.\nStack:\n${this.stack}`}}class E extends B{constructor(e="There is an atom without an index",t=null,s=null){super(e,t,s),this.name="AtomIndexException"}}class U extends B{constructor(e="The molecule does not contain atoms",t=null,s=null){super(e,t,s),this.name="AtomsMissingException"}}class P extends B{constructor(e="The molecular hash does not match",t=null,s=null){super(e,t,s),this.name="MolecularHashMismatchException"}}class Q extends B{constructor(e="The molecular hash is missing",t=null,s=null){super(e,t,s),this.name="MolecularHashMissingException"}}class N extends B{constructor(e="OTS malformed",t=null,s=null){super(e,t,s),this.name="SignatureMalformedException"}}class V extends B{constructor(e="One-time signature (OTS) does not match!",t=null,s=null){super(e,t,s),this.name="SignatureMismatchException"}}class F extends B{constructor(e="Insufficient balance to make transfer",t=null,s=null){super(e,t,s),this.name="TransferBalanceException"}}class z extends B{constructor(e="Token transfer atoms are malformed",t=null,s=null){super(e,t,s),this.name="TransferMalformedException"}}class J extends B{constructor(e="Token slugs for wallets in transfer do not match!",t=null,s=null){super(e,t,s),this.name="TransferMismatchedException"}}class D extends B{constructor(e="Invalid remainder provided",t=null,s=null){super(e,t,s),this.name="TransferRemainderException"}}class L extends B{constructor(e="Sender and recipient(s) cannot be the same",t=null,s=null){super(e,t,s),this.name="TransferToSelfException"}}class G extends B{constructor(e="Token transfer atoms are unbalanced",t=null,s=null){super(e,t,s),this.name="TransferUnbalancedException"}}class X extends B{constructor(e="Empty meta data.",t=null,s=null){super(e,t,s),this.name="MetaMissingException"}}class Y extends B{constructor(e="Wrong type of token for this isotope",t=null,s=null){super(e,t,s),this.name="WrongTokenTypeException"}}class Z{static continuId(e){Z.missing(e);if("USER"===e.atoms[0].token&&Z.isotopeFilter("I",e.atoms).length<1)throw new U("Missing atom ContinuID");return!0}static isotopeI(e){Z.missing(e);for(let t of Z.isotopeFilter("I",e.atoms)){if("USER"!==t.token)throw new Y(`Invalid token name for "${t.isotope}" isotope`);if(0===t.index)throw new E(`Invalid isotope "${t.isotope}" index`)}return!0}static isotopeU(e){Z.missing(e);for(let t of Z.isotopeFilter("U",e.atoms)){if("AUTH"!==t.token)throw new Y(`Invalid token name for "${t.isotope}" isotope`);if(0!==t.index)throw new E(`Invalid isotope "${t.isotope}" index`)}return!0}static isotopeM(e){Z.missing(e);for(let t of Z.isotopeFilter("M",e.atoms)){if(t.meta.length<1)throw new X;if("USER"!==t.token)throw new Y(`Invalid token name for "${t.isotope}" isotope`)}return!0}static isotopeC(e){Z.missing(e);for(let t of Z.isotopeFilter("C",e.atoms)){if("USER"!==t.token)throw new Y(`Invalid token name for "${t.isotope}" isotope`);if(0!==t.index)throw new E(`Invalid isotope "${t.isotope}" index`)}return!0}static isotopeT(e){Z.missing(e);for(let t of Z.isotopeFilter("T",e.atoms)){const e=x.aggregateMeta(x.normalizeMeta(t.meta));if("wallet"===String(t.metaType).toLowerCase())for(let t of["position","bundle"])if(!e.hasOwnProperty(t)||!Boolean(e[t]))throw new X(`No or not defined "${t}" in meta`);for(let t of["token"])if(!e.hasOwnProperty(t)||!Boolean(e[t]))throw new X(`No or not defined "${t}" in meta`);if("USER"!==t.token)throw new Y(`Invalid token name for "${t.isotope}" isotope`);if(0!==t.index)throw new E(`Invalid isotope "${t.isotope}" index`)}return!0}static isotopeR(e){Z.missing(e);for(let t of Z.isotopeFilter("R",e.atoms)){const e=x.aggregateMeta(x.normalizeMeta(t.meta));for(let t of["callback","conditions","rule"])if(!e.hasOwnProperty(t))throw new X(`Missing "${t}" field in meta.`);try{const t=JSON.parse(e.conditions);for(let e of t){const t=Object.keys(e),s=t.filter((function(e){return-1!==["key","value","comparison"].indexOf(e)})),n=t.filter((function(e){return-1!==["managedBy"].indexOf(e)}));if(s.length<3&&n.length<1)throw new X("Missing field in conditions.")}}catch(e){throw new X("Invalid format for conditions.")}}}static isotopeV(e,t=null){Z.missing(e);const s=Z.isotopeFilter("V",e.atoms);if(0===s.length)return!0;const n=e.atoms[0];if("V"===n.isotope&&2===s.length){const e=s[s.length-1];if(n.token!==e.token)throw new J;if(e.value<0)throw new z;return!0}let l=0,a=0;for(let t in e.atoms)if(e.atoms.hasOwnProperty(t)){const s=e.atoms[t];if("V"!==s.isotope)continue;if(a=1*s.value,Number.isNaN(a))throw new TypeError('Invalid isotope "V" values');if(s.token!==n.token)throw new J;if(t>0){if(a<0)throw new z;if(s.walletAddress===n.walletAddress)throw new L}l+=a}if(l!==a)throw new G;if(t){if(a=1*n.value,Number.isNaN(a))throw new TypeError('Invalid isotope "V" values');const e=1*t.balance+1*a;if(e<0)throw new F;if(e!==l)throw new D}else if(0!==a)throw new D;return!0}static molecularHash(e){if(Z.missing(e),e.molecularHash!==W.hashAtoms(e.atoms))throw new P;return!0}static ots(t){Z.missing(t);const s=t.atoms[0].walletAddress,n=Z.normalizedHash(t.molecularHash);let l=t.atoms.map((e=>e.otsFragment)).reduce(((e,t)=>e+t));if(2048!==l.length&&(l=$(l),2048!==l.length))throw new N;const a=g(l,128);let r="";for(const t in a){let s=a[t];for(let l=0,a=8+n[t];l<a;l++)s=e.create(512).update(s).hex();r+=s}const i=e.create(8192).update(r).hex();if(e.create(256).update(i).hex()!==s)throw new V;return!0}static index(e){Z.missing(e);for(let t of e.atoms)if(null===t.index)throw new E;return!0}static isotopeFilter(e,t){return(t=t||[]).filter((t=>e===t.isotope))}static normalizedHash(e){return Z.normalize(Z.enumerate(e))}static enumerate(e){const t={0:-8,1:-7,2:-6,3:-5,4:-4,5:-3,6:-2,7:-1,8:0,9:1,a:2,b:3,c:4,d:5,e:6,f:7,g:8},s=[],n=e.toLowerCase().split("");for(let e=0,l=n.length;e<l;++e){const l=n[e];void 0!==t[l]&&(s[e]=t[l])}return s}static normalize(e){let t=e.reduce(((e,t)=>e+t));const s=t<0;for(;t<0||t>0;)for(const n of Object.keys(e)){if((s?e[n]<8:e[n]>-8)&&(s?(++e[n],++t):(--e[n],--t),0===t))break}return e}static missing(e){if(null===e.molecularHash)throw new Q;if(1>e.atoms.length)throw new U}}class ee extends B{constructor(e="Insufficient balance for requested transfer",t=null,s=null){super(e,t,s),this.name="BalanceInsufficientException"}}class te extends B{constructor(e="Amount cannot be negative!",t=null,s=null){super(e,t,s),this.name="NegativeAmountException"}}const se=require("lodash.clonedeep"),ne=require("lodash.merge");class le{constructor(e=null){this.cellSlugOrigin=this.cellSlug=e}get cellSlugDelimiter(){return"."}cellSlugBase(){return(this.cellSlug||"").split(this.cellSlugDelimiter)[0]}toJSON(){let e=se(this);for(let t of["remainderWallet","secret","sourceWallet","cellSlugOrigin"])e.hasOwnProperty(t)&&delete e[t];return e}check(e=null){return le.verify({molecule:this,senderWallet:e})}static verify({molecule:e,senderWallet:t=null}){return Z.molecularHash(e)&&Z.ots(e)&&Z.index(e)&&Z.continuId(e)&&Z.isotopeM(e)&&Z.isotopeT(e)&&Z.isotopeC(e)&&Z.isotopeU(e)&&Z.isotopeI(e)&&Z.isotopeV(e,t)}static jsonToObject(e){const t=ne(new this,JSON.parse(e)),s=Object.keys(new this);if(!Array.isArray(t.atoms))throw new U;for(const e in Object.keys(t.atoms)){t.atoms[e]=W.jsonToObject(JSON.stringify(t.atoms[e]));for(const s of["position","walletAddress","isotope"])if(void 0===t.atoms[e][s]||null===t.atoms[e][s])throw new U("The required properties of the atom are not filled.")}for(const e in t)t.hasOwnProperty(e)&&!s.includes(e)&&delete t[e];return t.atoms=W.sortAtoms(t.atoms),t}}const ae=require("lodash.merge");class re extends le{constructor({secret:e,sourceWallet:t=null,remainderWallet:s=null,cellSlug:n=null}){super(n),this.secret=e,this.sourceWallet=t,this.atoms=[],(s||t)&&(this.remainderWallet=s||j.create({secretOrBundle:e,token:t.token,batchId:t.batchId,characters:t.characters})),this.clear()}static mergeMetas(e,t={}){return ae(e||{},t)}static verify({molecule:e,senderWallet:t=null}){return Z.molecularHash(e)&&Z.ots(e)&&Z.index(e)&&Z.continuId(e)&&Z.isotopeM(e)&&Z.isotopeT(e)&&Z.isotopeC(e)&&Z.isotopeU(e)&&Z.isotopeI(e)&&Z.isotopeR(e)&&Z.isotopeV(e,t)}static generateNextAtomIndex(e){const t=e.length-1;return t>-1?e[t].index+1:0}continuIdMetaType(){return"walletBundle"}fill(e){for(let t in Object.keys(e))this[t]=e[t]}addAtom(e){return this.molecularHash=null,this.atoms.push(e),this.atoms=W.sortAtoms(this.atoms),this}replenishTokens({value:e,token:t,metas:s}){const n=x.aggregateMeta(x.normalizeMeta(s));n.action="add";for(let e of["address","position","batchId"])if(void 0===n[e])throw new X(`Missing ${e} in meta`);return this.molecularHash=null,this.atoms.push(new W({position:this.sourceWallet.position,walletAddress:this.sourceWallet.address,isotope:"C",token:this.sourceWallet.token,value:e,batchId:this.sourceWallet.batchId,metaType:"token",metaId:t,meta:re.mergeMetas({pubkey:this.sourceWallet.pubkey,characters:this.sourceWallet.characters},n),index:this.generateIndex()})),this.addUserRemainderAtom(this.remainderWallet),this.atoms=W.sortAtoms(this.atoms),this}addUserRemainderAtom(e){return this.molecularHash=null,this.atoms.push(new W({position:e.position,walletAddress:e.address,isotope:"I",token:e.token,metaType:"walletBundle",metaId:e.bundle,meta:{pubkey:e.pubkey,characters:e.characters},index:this.generateIndex()})),this.atoms=W.sortAtoms(this.atoms),this}burnTokens({value:e,walletBundle:t=null}){if(e<0)throw new te("Amount to burn must be positive!");if(this.sourceWallet.balance-e<0)throw new ee;return this.molecularHash=null,this.atoms.push(new W({position:this.sourceWallet.position,walletAddress:this.sourceWallet.address,isotope:"V",token:this.sourceWallet.token,value:-e,batchId:this.sourceWallet.batchId,meta:{pubkey:this.sourceWallet.pubkey,characters:this.sourceWallet.characters},index:this.generateIndex()})),this.atoms.push(new W({position:this.remainderWallet.position,walletAddress:this.remainderWallet.address,isotope:"V",token:this.sourceWallet.token,value:this.sourceWallet.balance-e,batchId:this.remainderWallet.batchId,metaType:t?"walletBundle":null,metaId:t,meta:{pubkey:this.remainderWallet.pubkey,characters:this.remainderWallet.characters},index:this.generateIndex()})),this.atoms=W.sortAtoms(this.atoms),this}initValue({recipientWallet:e,value:t}){if(this.sourceWallet.balance-t<0)throw new ee;return this.molecularHash=null,this.atoms.push(new W({position:this.sourceWallet.position,walletAddress:this.sourceWallet.address,isotope:"V",token:this.sourceWallet.token,value:-t,batchId:this.sourceWallet.batchId,meta:{pubkey:this.sourceWallet.pubkey,characters:this.sourceWallet.characters},index:this.generateIndex()})),this.atoms.push(new W({position:e.position,walletAddress:e.address,isotope:"V",token:this.sourceWallet.token,value:t,batchId:e.batchId,metaType:"walletBundle",metaId:e.bundle,meta:{pubkey:e.pubkey,characters:e.characters},index:this.generateIndex()})),this.atoms.push(new W({position:this.remainderWallet.position,walletAddress:this.remainderWallet.address,isotope:"V",token:this.sourceWallet.token,value:this.sourceWallet.balance-t,batchId:this.remainderWallet.batchId,metaType:"walletBundle",metaId:this.sourceWallet.bundle,meta:{pubkey:this.remainderWallet.pubkey,characters:this.remainderWallet.characters},index:this.generateIndex()})),this.atoms=W.sortAtoms(this.atoms),this}initWalletCreation(e){this.molecularHash=null;const t={address:e.address,token:e.token,bundle:e.bundle,position:e.position,amount:0,batch_id:e.batchId,pubkey:e.pubkey,characters:e.characters};return this.atoms.push(new W({position:this.sourceWallet.position,walletAddress:this.sourceWallet.address,isotope:"C",token:this.sourceWallet.token,batchId:this.sourceWallet.batchId,metaType:"wallet",metaId:e.address,metas:t,index:this.generateIndex()})),this.addUserRemainderAtom(this.remainderWallet),this.atoms=W.sortAtoms(this.atoms),this}initIdentifierCreation({type:e,contact:t,code:s}){return this.molecularHash=null,this.atoms.push(new W({position:this.sourceWallet.position,walletAddress:this.sourceWallet.address,isotope:"C",token:this.sourceWallet.token,metaType:"identifier",metaId:e,meta:{pubkey:this.sourceWallet.pubkey,characters:this.sourceWallet.characters,code:s,hash:A(t.trim())},index:this.generateIndex()})),this.addUserRemainderAtom(this.remainderWallet),this.atoms=W.sortAtoms(this.atoms),this}initTokenCreation({recipientWallet:e,amount:t,meta:s}){this.molecularHash=null;for(const t of["walletAddress","walletPosition","walletPubkey","walletCharacters"])s[t]||(s[t]=e[t.toLowerCase().substr(6)]);return s.pubkey=this.sourceWallet.pubkey,s.characters=this.sourceWallet.characters,this.atoms.push(new W({position:this.sourceWallet.position,walletAddress:this.sourceWallet.address,isotope:"C",token:this.sourceWallet.token,value:t,batchId:e.batchId,metaType:"token",metaId:e.token,meta:s,index:this.generateIndex()})),this.addUserRemainderAtom(this.remainderWallet),this.atoms=W.sortAtoms(this.atoms),this}createRule({metaType:e,metaId:t,meta:s}){const n=x.aggregateMeta(x.normalizeMeta(s));for(let e of["conditions","callback","rule"]){if(void 0===n[e])throw new X(`No or not defined ${e} in meta`);for(let t of["[object Object]","[object Array]"])Object.prototype.toString.call(n[e])===t&&(n[e]=JSON.stringify(n[e]))}return n.pubkey=this.sourceWallet.pubkey,n.characters=this.sourceWallet.characters,this.addAtom(new W({position:this.sourceWallet.position,walletAddress:this.sourceWallet.address,isotope:"R",token:this.sourceWallet.token,metaType:e,metaId:t,meta:n,index:this.generateIndex()})),this.addUserRemainderAtom(this.remainderWallet),this.atoms=W.sortAtoms(this.atoms),this}initShadowWalletClaim({token:e,wallet:t}){this.molecularHash=null;let s={tokenSlug:e,walletAddress:t.address,walletPosition:t.position,batchId:t.batchId};return this.atoms.push(new W({position:this.sourceWallet.position,walletAddress:this.sourceWallet.address,isotope:"C",token:this.sourceWallet.token,metaType:"wallet",metaId:t.address,meta:re.mergeMetas({pubkey:this.sourceWallet.pubkey,characters:this.sourceWallet.characters},s),index:this.generateIndex()})),this.addUserRemainderAtom(this.remainderWallet),this.atoms=W.sortAtoms(this.atoms),this}initMeta({meta:e,metaType:t,metaId:s}){this.molecularHash=null;const n={};return this.sourceWallet.pubkey&&(n.pubkey=this.sourceWallet.pubkey),this.sourceWallet.characters&&(n.characters=this.sourceWallet.characters),this.atoms.push(new W({position:this.sourceWallet.position,walletAddress:this.sourceWallet.address,isotope:"M",token:this.sourceWallet.token,batchId:this.sourceWallet.batchId,metaType:t,metaId:s,meta:re.mergeMetas(n,e),index:this.generateIndex()})),this.addUserRemainderAtom(this.remainderWallet),this.atoms=W.sortAtoms(this.atoms),this}initTokenRequest({token:e,requestedAmount:t,metaType:s,metaId:n,meta:l={}}){return this.molecularHash=null,this.atoms.push(new W({position:this.sourceWallet.position,walletAddress:this.sourceWallet.address,isotope:"T",token:this.sourceWallet.token,value:t,metaType:s,metaId:n,meta:re.mergeMetas({pubkey:this.sourceWallet.pubkey,characters:this.sourceWallet.characters,token:e},l),index:this.generateIndex()})),this.addUserRemainderAtom(this.remainderWallet),this.atoms=W.sortAtoms(this.atoms),this}initAuthorization(){return this.molecularHash=null,this.atoms.push(new W({position:this.sourceWallet.position,walletAddress:this.sourceWallet.address,isotope:"U",token:this.sourceWallet.token,batchId:this.sourceWallet.batchId,meta:{pubkey:this.sourceWallet.pubkey,characters:this.sourceWallet.characters},index:this.generateIndex()})),this.atoms=W.sortAtoms(this.atoms),this}clear(){return this.molecularHash=null,this.bundle=null,this.status=null,this.createdAt=String(+new Date),this.atoms=[],this}sign({anonymous:t=!1,compressed:s=!0}){if(0===this.atoms.length||0!==this.atoms.filter((e=>!(e instanceof W))).length)throw new U;t||(this.bundle=A(this.secret)),this.molecularHash=W.hashAtoms(this.atoms);const n=this.atoms[0],l=g(j.generatePrivateKey({secret:this.secret,token:n.token,position:n.position}),128),a=Z.normalizedHash(this.molecularHash);let r="";for(const t in l){let s=l[t];for(let n=0,l=8-a[t];n<l;n++)s=e.create(512).update(s).hex();r+=s}s&&(r=_(r));const i=g(r,Math.ceil(r.length/this.atoms.length));let o=null;for(let e=0,t=i.length;e<t;e++)this.atoms[e].otsFragment=i[e],o=this.atoms[e].position;return o}check(e=null){return re.verify({molecule:this,senderWallet:e})}generateIndex(){return re.generateNextAtomIndex(this.atoms)}}class ie{static __init(e,t){this.arr=[],this.key=null,this.arr=String(t).split("."),this.key=this.arr.shift();const s=Number(this.key);Number.isInteger(s)&&(this.key=s),this.__nextKey=this.arr.length,this.__next=this.__tic(e)}static __tic(e){return!!(Array.isArray(e)||e instanceof Object)&&void 0!==e[this.key]}static has(e,t){return this.__init(e,t),!!this.__next&&(0===this.__nextKey||this.has(e[this.key],this.arr.join(".")))}static get(e,t,s=null){return this.__init(e,t),this.__next?0===this.__nextKey?e[this.key]:this.get(e[this.key],this.arr.join("."),s):s}}class oe{static val(e){return Math.abs(1e18*e)<1?0:e}static cmp(e,t,s=!1){const n=1e18*oe.val(e),l=1e18*oe.val(t);return Math.abs(n-l)<1?0:n>l?1:-1}static equal(e,t){return 0===oe.cmp(e,t)}}const ue=require("lodash.merge");class ce{constructor(e,t={}){this.$__headers=new d(t.headers||{}),this.$__needHeaders={accept:"application/json","content-type":"application/json; charset=UTF-8"},this.$__config=ue(t,{method:"POST",headers:this.$__headers}),this.setUrl(e)}getConfig(){return this.$__config}setUrl(e){this.$__url=e}getUrl(){return this.$__url}setAuthToken(e){this.$__headers.set("X-Auth-Token",e||"")}getAuthToken(){return this.$__headers.get("X-Auth-Token")||""}async send(e,t={}){e.headers.extend(t),this.$__headers.extend(e.headers.asObject());for(let e in this.$__needHeaders)this.$__headers.set(e,this.$__needHeaders[e]);this.setAuthToken(this.getAuthToken());const s=new m(e,this.$__config);return s.headers.delete("content-length"),await p(s)}}class he extends B{constructor(e="GraphQL did not provide a valid response.",t=null,s=null){super(e,t,s),this.name="InvalidResponseException"}}class de extends B{constructor(e="Authorization token missing or invalid.",t=null,s=null){super(e,t,s),this.name="UnauthenticatedException"}}class me{constructor({query:e,json:t}){if(this.dataKey=null,this.errorKey="exception",this.$__payload=null,this.$__query=e,this.$__originResponse=t,this.$__response=t,void 0===this.$__response||null===this.$__response)throw new he;if(ie.has(this.$__response,this.errorKey)){const e=ie.get(this.$__response,this.errorKey);if(String(e).includes("Unauthenticated"))throw new de;throw new he}this.init()}data(){if(!this.dataKey)return this.response();if(!ie.has(this.response(),this.dataKey))throw new he;return ie.get(this.response(),this.dataKey)}response(){return this.$__response}payload(){return null}query(){return this.$__query}init(){return null}}class pe{constructor(e){this.client=e,this.$__fields=null,this.$__variables=null,this.$__request=null,this.$__response=null,this.$__query=null}request(){return this.$__request}response(){return this.$__response}createRequest({variables:e=null,fields:t=null}){return this.$__variables=this.compiledVariables(e),new m(this.url(),{body:JSON.stringify({query:this.compiledQuery(t),variables:this.variables()})})}compiledVariables(e=null){return e||{}}compiledQuery(e=null){return null!==e&&(this.$__fields=e),this.$__query.replace(new RegExp("@fields","g"),this.compiledFields(this.$__fields))}compiledFields(e){const t=[];for(let s of Object.keys(e))t.push(e[s]?`${s} ${this.compiledFields(e[s])}`:`${s}`);return`{ ${t.join(", ")} }`}async execute({variables:e=null,fields:t=null}){this.$__request=this.createRequest({variables:e,fields:t});let s=await this.client.send(this.$__request);return this.$__response=await this.createResponseRaw(s),this.$__response}async createResponseRaw(e){return this.createResponse(JSON.parse(await e.text()))}createResponse(e){return new me({query:this,response:e})}url(){return this.client.getUrl()}variables(){return this.$__variables}}class ye extends me{constructor({query:e,json:t}){super({query:e,json:t}),this.dataKey="data.ContinuId",this.init()}payload(){let e=null;const t=this.data();return t&&(e=new j({secret:null,token:t.tokenSlug}),e.address=t.address,e.position=t.position,e.bundle=t.bundleHash,e.batchId=t.batchId,e.characters=t.characters,e.pubkey=t.pubkey,e.balance=1*t.amount),e}}class ge extends pe{constructor(e){super(e),this.$__query="query ($bundle: String!) { ContinuId(bundle: $bundle) @fields }",this.$__fields={address:null,bundleHash:null,tokenSlug:null,position:null,batchId:null,characters:null,pubkey:null,amount:null,createdAt:null}}createResponse(e){return new ye({query:this,response:e})}}class fe extends me{constructor({query:e,json:t}){super({query:e,json:t}),this.dataKey="data.WalletBundle",this.init()}payload(){const e=this.data();if(!e||0===e.length)return null;const t={};return e.forEach((e=>{e.metas=x.aggregateMeta(e.metas),t[e.bundleHash]=e})),t}}class ke extends pe{constructor(e){super(e),this.$__query="query( $bundleHash: String, $bundleHashes: [ String! ], $key: String, $keys: [ String! ], $value: String, $values: [ String! ], $keys_values: [ MetaInput ], $latest: Boolean, $limit: Int, $order: String ) { WalletBundle( bundleHash: $bundleHash, bundleHashes: $bundleHashes, key: $key, keys: $keys, value: $value, values: $values, keys_values: $keys_values, latest: $latest, limit: $limit, order: $order ) @fields }",this.$__fields={bundleHash:null,metas:{molecularHash:null,position:null,key:null,value:null,createdAt:null},createdAt:null}}createResponse(e){return new fe({query:this,response:e})}static createVariables({bundleHash:e=null,key:t=null,value:s=null,latest:n=!0}){const l={latest:n};return e&&(l["string"==typeof e?"bundleHash":"bundleHashes"]=e),t&&(l["string"==typeof t?"key":"keys"]=t),s&&(l["string"==typeof s?"value":"values"]=s),l}}class we extends me{constructor({query:e,json:t}){super({query:e,json:t}),this.dataKey="data.Wallet",this.init()}static toClientWallet({data:e,secret:t=null}){let s;return null===e.position||void 0===e.position?s=j.create({secretOrBundle:e.bundleHash,token:e.tokenSlug,batchId:e.batchId,characters:e.characters}):(s=new j({secret:t,token:e.tokenSlug,position:e.position,batchId:e.batchId,characters:e.characters}),s.address=e.address,s.bundle=e.bundleHash),e.token&&(s.tokenName=e.token.name,s.tokenSupply=e.token.amount),s.molecules=e.molecules,s.balance=Number(e.amount),s.pubkey=e.pubkey,s.createdAt=e.createdAt,s}getWallets(e=null){const t=this.data();if(!t)return null;const s=[];for(let n of t)s.push(we.toClientWallet({data:n,secret:e}));return s}payload(){const e=this.data();if(!e)return null;const t=[];for(let s of e)t.push(we.toClientWallet(s));return t}}class be extends pe{constructor(e){super(e),this.$__query="query( $address: String, $bundleHash: String, $token: String, $position: String, $unspent: Boolean ) { Wallet( address: $address, bundleHash: $bundleHash, token: $token, position: $position, unspent: $unspent ) @fields }",this.$__fields={address:null,bundleHash:null,token:{name:null,amount:null},molecules:{molecularHash:null,createdAt:null},tokenSlug:null,batchId:null,position:null,amount:null,characters:null,pubkey:null,createdAt:null}}createResponse(e){return new we({query:this,response:e})}}class _e extends me{constructor({query:e,json:t}){super({query:e,json:t}),this.dataKey="data.Balance",this.init()}payload(){const e=this.data();return e&&e.bundleHash&&e.tokenSlug?we.toClientWallet(e):null}}class $e extends pe{constructor(e){super(e),this.$__query="query( $address: String, $bundleHash: String, $token: String, $position: String ) { Balance( address: $address, bundleHash: $bundleHash, token: $token, position: $position ) @fields }",this.$__fields={address:null,bundleHash:null,tokenSlug:null,batchId:null,position:null,amount:null,characters:null,pubkey:null,createdAt:null}}createResponse(e){return new _e({query:this,response:e})}}class Ie extends me{constructor({query:e,json:t}){super({query:e,json:t}),this.dataKey="data.MetaType",this.init()}payload(){const e=this.data();return e&&0!==e.length?e.pop().instances:null}}class xe extends pe{constructor(e){super(e),this.$__query="query( $metaType: String, $metaTypes: [ String! ], $metaId: String, $metaIds: [ String! ], $key: String, $keys: [ String! ], $value: String, $values: [ String! ], $count: String, $latest: Boolean, $filter: [ MetaFilter! ], $latestMetas: Boolean, $limit: Int, $offset: Int ) { MetaType( metaType: $metaType, metaTypes: $metaTypes, metaId: $metaId, metaIds: $metaIds, key: $key, keys: $keys, value: $value, values: $values, count: $count, filter: $filter, latestMetas: $latestMetas, limit: $limit, offset: $offset ) @fields }",this.$__fields={metaType:null,instances:{metaType:null,metaId:null,createdAt:null,"metas(latest:$latest)":{molecularHash:null,position:null,key:null,value:null,createdAt:null}},paginatorInfo:{currentPage:null,lastPage:null}}}createResponse(e){return new Ie({query:this,response:e})}static createVariables({metaType:e=null,metaId:t=null,key:s=null,value:n=null,latest:l=null,filter:a=null,latestMetas:r=!0,limit:i=15,offset:o=null}){const u={};return e&&(u["string"==typeof e?"metaType":"metaTypes"]=e),t&&(u["string"==typeof t?"metaId":"metaIds"]=t),s&&(u["string"==typeof s?"key":"keys"]=s),n&&(u["string"==typeof n?"value":"values"]=n),l&&(u.latest=!!l),r&&(u.latestMetas=!!r),a&&(u.filter=a),i&&(u.limit=i),o&&(u.offset=o),u}}class We extends me{constructor({query:e,json:t}){super({query:e,json:t}),this.dataKey="data.ProposeMolecule",this.$__clientMolecule=e.molecule(),this.init()}init(){const e=ie.get(this.data(),"payload");try{this.$__payload=JSON.parse(e)}catch(e){this.$__payload=null}}clientMolecule(){return this.$__clientMolecule}molecule(){const e=this.data();if(!e)return null;const t=new le;return t.molecularHash=ie.get(e,"molecularHash"),t.status=ie.get(e,"status"),t.status=ie.get(e,"createdAt"),t}success(){return"accepted"===this.status()}status(){return ie.get(this.data(),"status","rejected")}reason(){return ie.get(this.data(),"reason","Invalid response from server")}payload(){return this.$__payload}}class Se extends pe{}const Me=require("lodash.merge");class ve extends Se{constructor(e,t=null){super(e),this.$__molecule=t,this.$__remainderWallet=null,this.$__query="mutation( $molecule: MoleculeInput! ) { ProposeMolecule( molecule: $molecule ) @fields }",this.$__fields={molecularHash:null,height:null,depth:null,status:null,reason:null,payload:null,createdAt:null,receivedAt:null,processedAt:null,broadcastedAt:null}}compiledVariables(e){const t=super.compiledVariables(e);return Me(t,{molecule:this.molecule()})}createResponse(e){return new We({query:this,response:e})}async execute({variables:e=null,fields:t=null}){return await super.execute({variables:Me(e||{},{molecule:this.molecule()}),fields:t})}remainderWallet(){return this.$__remainderWallet}molecule(){return this.$__molecule}}class Ae extends We{payloadKey(e){if(!ie.has(this.payload(),e))throw new he(`ResponseAuthorization: '${e}' key is not found in the payload.`);return ie.get(this.payload(),e)}token(){return this.payloadKey("token")}time(){return this.payloadKey("time")}}class Te extends ve{fillMolecule(){this.$__molecule.initAuthorization(),this.$__molecule.sign({}),this.$__molecule.check()}createResponse(e){return new Ae({query:this,response:e})}}class qe extends We{}class Ce extends ve{fillMolecule({recipientWallet:e,amount:t,meta:s=null}){this.$__molecule.initTokenCreation({recipientWallet:e,amount:t,meta:s||{}}),this.$__molecule.sign({}),this.$__molecule.check()}createResponse(e){return new qe({query:this,response:e})}}class Oe extends We{}class He extends ve{fillMolecule({token:e,requestedAmount:t,metaType:s,metaId:n,meta:l=null}){this.$__molecule.initTokenRequest({token:e,requestedAmount:t,metaType:s,metaId:n,meta:l||{}}),this.$__molecule.sign({}),this.$__molecule.check()}createResponse(e){return new Oe({query:this,response:e})}}class Re extends We{payload(){const e={reason:null,status:null},t=this.data();return e.reason=void 0===t.reason?"Invalid response from server":t.reason,e.status=void 0===t.status?"rejected":t.status,e}}class Ke extends ve{fillMolecule({toWallet:e,value:t}){this.$__molecule.initValue({recipientWallet:e,value:t}),this.$__molecule.sign({}),this.$__molecule.check(this.$__molecule.sourceWallet)}createResponse(e){return new Re({query:this,response:e})}}class je extends We{}class Be extends ve{fillMolecule({type:e,contact:t,code:s}){this.$__molecule.initIdentifierCreation({type:e,contact:t,code:s}),this.$__molecule.sign({}),this.$__molecule.check()}createResponse(e){return new je({query:this,response:e})}}class Ee extends We{}class Ue extends ve{fillMolecule({token:e,batchId:t}){let s=j.create({secretOrBundle:this.$__molecule.secret,token:e,batchId:t});this.$__molecule.initShadowWalletClaim({token:e,wallet:s}),this.$__molecule.sign({}),this.$__molecule.check()}createResponse(e){return new Ee({query:this,response:e})}}class Pe extends B{constructor(e="Code exception",t=null,s=null){super(e,t,s),this.name="CodeException"}}class Qe extends B{constructor(e="The shadow wallet does not exist",t=null,s=null){super(e,t,s),this.name="WalletShadowException"}}class Ne extends We{}class Ve extends ve{fillMolecule({metaType:e,metaId:t,meta:s}){this.$__molecule.initMeta({meta:s,metaType:e,metaId:t}),this.$__molecule.sign({}),this.$__molecule.check()}createResponse(e){return new Ne({query:this,response:e})}}class Fe extends We{}class ze extends ve{fillMolecule(e){this.$__molecule.initWalletCreation(e),this.$__molecule.sign({}),this.$__molecule.check()}createResponse(e){return new Fe({query:this,response:e})}}class Je{constructor({url:e,client:t=null,serverSdkVersion:s=3,logging:n=!1}){this.initialize({url:e,client:t,serverSdkVersion:s,logging:n})}initialize({url:e,client:t=null,serverSdkVersion:s=3,logging:n=!1}){this.$__logging=n,this.$__logging&&console.info(`KnishIOClient::initialize() - Initializing new Knish.IO client session for SDK version ${s}...`),this.reset(),this.$__client=t||new ce(e),this.$__serverSdkVersion=s}deinitialize(){this.$__logging&&console.info("KnishIOClient::deinitialize() - Clearing the Knish.IO client session..."),this.reset()}getServerSdkVersion(){return this.$__serverSdkVersion}reset(){this.$__secret="",this.$__bundle="",this.remainderWallet=null}cellSlug(){return this.$__cellSlug||null}setCellSlug(e){this.$__cellSlug=e}url(){return this.client().getUrl()}client(){return this.$__client}hasSecret(){return!!this.$__secret}setSecret(e){this.$__secret=e,this.$__bundle=A(e)}secret(){if(!this.$__secret)throw new de("KnishIOClient::secret() - Unable to find a stored secret!");return this.$__secret}bundle(){if(!this.$__bundle)throw new de("KnishIOClient::bundle() - Unable to find a stored bundle!");return this.$__bundle}async getSourceWallet(){let e=(await this.queryContinuId(this.bundle())).payload();return e||(e=new j({secret:this.secret()})),e}getRemainderWallet(){return this.remainderWallet}async createMolecule({secret:e=null,sourceWallet:t=null,remainderWallet:s=null}){this.$__logging&&console.info("KnishIOClient::createMolecule() - Creating a new molecule...");const n=e||this.secret();let l=t;return!t&&this.lastMoleculeQuery&&"AUTH"!==this.getRemainderWallet().token&&this.lastMoleculeQuery&&this.lastMoleculeQuery.response()&&this.lastMoleculeQuery.response().success()&&(l=this.getRemainderWallet()),null===l&&(l=await this.getSourceWallet()),this.remainderWallet=s||j.create({secretOrBundle:n,token:l.token,batchId:l.batchId,characters:l.characters}),new re({secret:n,sourceWallet:l,remainderWallet:this.getRemainderWallet(),cellSlug:this.cellSlug()})}createQuery(e){return new e(this.client())}async createMoleculeMutation({mutationClass:e,molecule:t=null}){this.$__logging&&console.info(`KnishIOClient::createMoleculeQuery() - Creating a new ${e.name} query...`);let s=t||await this.createMolecule({});const n=new e(this.client(),s);if(!(n instanceof ve))throw new Pe(`${this.constructor.name}::createMoleculeMutation - required class instance of MutationProposeMolecule.`);return this.lastMoleculeQuery=n,n}async requestAuthToken({secret:e,cellSlug:t=null}){if(this.$__logging&&console.info("KnishIOClient::requestAuthToken() - Requesting authorization token..."),this.setSecret(e),this.$__cellSlug=t||this.cellSlug(),this.$__serverSdkVersion>2){let e=await this.createMolecule({secret:this.secret(),sourceWallet:new j({secret:this.secret(),token:"AUTH"})});const t=await this.createMoleculeMutation({mutationClass:Te,molecule:e});t.fillMolecule();const s=await t.execute({});if(!s.success())throw this.$__logging&&console.warn("KnishIOClient::requestAuthToken() - Unable to retrieve auth token..."),new de(s.reason());{const e=s.token();this.client().setAuthToken(e),this.$__logging&&console.info(`KnishIOClient::requestAuthToken() - Successfully retrieved auth token ${s.token()}...`)}return s}this.$__logging&&console.warn("KnishIOClient::requestAuthToken() - Server SDK version does not require an auth token...")}async queryBalance({token:e,bundleHash:t=null}){const s=this.createQuery($e);return await s.execute({variables:{bundleHash:t||this.bundle(),token:e}})}queryMeta({metaType:e,metaId:t=null,key:s=null,value:n=null,latest:l=null,fields:a=null,filter:r=null}){this.$__logging&&console.info(`KnishIOClient::queryMeta() - Querying metaType: ${e}, metaId: ${t}...`);const i=this.createQuery(xe),o=xe.createVariables({metaType:e,metaId:t,key:s,value:n,latest:l,filter:r});return i.execute({variables:o,fields:a}).then((e=>e.payload()))}async createWallet(e){const t=new j({secret:this.secret(),token:e}),s=await this.createMoleculeMutation(ze);return s.fillMolecule(t),await s.execute({})}async createToken({token:e,amount:t,tokenMetadata:s=null}){const n=new j({secret:this.secret(),token:e});"stackable"===ie.get(s||{},"fungibility")&&(n.batchId=T());const l=await this.createMoleculeMutation({mutationClass:Ce});return l.fillMolecule({recipientWallet:n,amount:t,meta:s||{}}),await l.execute({})}async createMeta({metaType:e,metaId:t,meta:s=null}){const n=await this.createMoleculeMutation({mutationClass:Ve,molecule:await this.createMolecule({secret:this.secret(),sourceWallet:await this.getSourceWallet()})});return n.fillMolecule({metaType:e,metaId:t,meta:s}),await n.execute({})}async createIdentifier({type:e,contact:t,code:s}){const n=await this.createMoleculeMutation(Be);return n.fillMolecule({type:e,contact:t,code:s}),await n.execute({})}queryWallets({bundleHash:e=null,unspent:t=!0}){this.$__logging&&console.info(`KnishIOClient::queryWallets() - Querying wallets${e?` for ${e}`:""}...`);return this.createQuery(be).execute({variables:{bundleHash:e||this.bundle(),unspent:t}}).then((e=>e.getWallets()))}queryShadowWallets({tokenSlug:e="KNISH",bundleHash:t=null}){t=t||this.bundle(),this.$__logging&&console.info(`KnishIOClient::queryShadowWallets() - Querying ${e} shadow wallets for ${t}...`);return this.createQuery(be).execute({variables:{bundleHash:t,token:e}}).then((e=>e.payload()))}queryBundle({bundleHash:e=null,key:t=null,value:s=null,latest:n=!0,fields:l=null}){this.$__logging&&console.info(`KnishIOClient::queryBundle() - Querying wallet bundle metadata${e?` for ${e}`:""}...`);const a=this.createQuery(ke),r=ke.createVariables({bundleHash:null!==e?e:this.bundle(),key:t,value:s,latest:n});return a.execute({variables:r,fields:l}).then((e=>e.payload()))}async queryContinuId(e){const t=this.createQuery(ge);return await t.execute({fields:{bundle:e}})}async requestTokens({token:e,requestedAmount:t,to:s,meta:n=null}){let l,a;s?("[object String]"===Object.prototype.toString.call(s)&&(j.isBundleHash(s)?(l="walletBundle",a=s):s=j.create({secretOrBundle:s,token:e})),s instanceof j&&(l="wallet",n=re.mergeMetas(n||{},{position:s.position,bundle:s.bundle}),a=s.address)):(l="walletBundle",a=this.bundle());const r=await this.createMoleculeMutation(He);return r.fillMolecule({token:e,requestedAmount:t,metaType:l,metaId:a,meta:n}),await r.execute({})}async claimShadowWallet({token:e,batchId:t=null,molecule:s=null}){const n=await this.createMoleculeMutation({mutationClass:Ue,molecule:s});return n.fillMolecule({token:e,batchId:t}),await n.execute({})}async claimShadowWallets(e){const t=await this.queryShadowWallets(e);if(!t||!Array.isArray(t))throw new Qe;t.forEach((e=>{if(!e.isShadow())throw new Qe}));let s=[];for(const n of t)s.push(await this.claimShadowWallet({token:e,batchId:n.batchId}));return s}async transferToken({walletObjectOrBundleHash:e,token:t,amount:s}){const n=(await this.queryBalance({token:t})).payload();if(null===n||oe.cmp(n.balance,s)<0)throw new F;let l=e instanceof j?e:(await this.queryBalance({token:t,bundleHash:e})).payload();null===l&&(l=j.create({secretOrBundle:e,token:t})),l.initBatchId({senderWallet:n,amount:s}),this.remainderWallet=j.create({secretOrBundle:this.secret(),token:t,batchId:l.batchId,characters:n.characters});const a=await this.createMolecule({sourceWallet:n,remainderWallet:j.create({secretOrBundle:this.secret(),token:t,batchId:l.batchId,characters:n.characters})}),r=await this.createMoleculeMutation({mutationClass:Ke,molecule:a});return r.fillMolecule({toWallet:l,value:s}),await r.execute({})}}class De{constructor(e){this.secrets=[v(),v()],this.tokenSlugs=["TESTTOKEN","UTENVSTACKABLE"],this.graphqlUrl=e,this.clients={}}async testAll(){await this.client(this.secrets[0]),await this.client(this.secrets[1]),await this.testCreateToken(),await this.testCreateWallet(),await this.testCreateMeta(),await this.testCreateIdentifier(),await this.testRequestTokens(),await this.testTransferToken(),await this.testClaimShadowWallet(),await this.testQueryMeta(),await this.testQueryWallets(),await this.testQueryShadowWallets(),await this.testQueryBundle(),await this.testQueryBalance()}testCreateToken(){let e=this.tokenSlugs[0];return this.client(this.secrets[0]).createToken({token:e,amount:1e3,tokenMetadata:{name:e,fungibility:"stackable",supply:"limited",decimals:0,icon:"icon"}}).then((e=>{this.checkResponse(e,"testCreateToken")}))}testCreateWallet(){return this.client(this.secrets[0]).createWallet(this.tokenSlugs[1]).then((e=>{this.checkResponse(e,"testCreateWallet")}))}testCreateMeta(){return this.client(this.secrets[0]).createMeta({metaType:"metaType",metaId:"metaId",meta:{key1:"value1",key2:"value2"}}).then((e=>{this.checkResponse(e,"testCreateMeta")}))}testCreateIdentifier(){return this.client(this.secrets[0]).createIdentifier({type:"email",contact:"test@test.com",code:"1234"}).then((e=>{this.checkResponse(e,"testCreateIdentifier")}))}testRequestTokens(){return this.client(this.secrets[0]).requestTokens({token:this.tokenSlugs[1],requestedAmount:10,to:this.secrets[0]}).then((e=>{this.checkResponse(e,"testRequestTokens")}))}testTransferToken(){let e=A(this.secrets[1]);return this.client(this.secrets[0]).transferToken({walletObjectOrBundleHash:e,token:this.tokenSlugs[0],amount:10}).then((e=>{this.checkResponse(e,"testTransferToken")}))}testClaimShadowWallet(){return this.client(this.secrets[1]).claimShadowWallet({token:this.tokenSlugs[0]}).then((e=>{this.checkResponse(e,"testClaimShadowWallet")}))}testQueryMeta(){return this.client(this.secrets[0]).queryMeta({metaType:"metaType",metaId:"metaId"}).then((e=>{this.checkResponse(e,"testQueryMeta")}))}testQueryWallets(){return this.client(this.secrets[0]).queryWallets({}).then((e=>{this.checkResponse(e,"testQueryWallets")}))}testQueryShadowWallets(){return this.client(this.secrets[1]).queryShadowWallets({tokenSlug:this.tokenSlugs[0]}).then((e=>{this.checkResponse(e,"testQueryShadowWallets")}))}testQueryBundle(){return this.client(this.secrets[0]).queryBundle({}).then((e=>{this.checkResponse(e,"testQueryBundle")}))}testQueryContinuId(){let e=A(this.secrets[0]);return this.client(this.secrets[0]).queryContinuId(e).then((e=>{this.checkResponse(e,"testQueryContinuId")}))}testQueryBalance(){return this.client(this.secrets[0]).queryBalance({token:this.tokenSlugs[0]}).then((e=>{this.checkResponse(e,"testQueryBalance")}))}client(e,t="unit_test"){return this.clients[e]?this.clients[e]:(this.clients[e]=new Je(this.graphqlUrl),this.clients[e].requestAuthToken({secret:e,cellSlug:t}).then((e=>{this.checkResponse(e,"requestAuthToken")})))}checkResponse(e,t){console.log(" ############### "+t+" ###############"),console.log(e),e instanceof We?(e.success()||this.debug(e),console.assert("accepted"===e.status(),e)):this.debug(e)}debug(e){e.data&&ie.get(e.data()||{},"reason")?console.log(e.data().reason):console.log(e)}}export{W as Atom,Je as KnishIOClient,x as Meta,re as Molecule,De as Test,j as Wallet,$ as base64ToHex,w as bufferToHexString,k as charsetBaseConvert,g as chunkSubstr,O as decryptMessage,C as encryptMessage,A as generateBundleHash,H as generateEncPrivateKey,R as generateEncPublicKey,v as generateSecret,K as hashShare,b as hexStringToBuffer,_ as hexToBase64,I as isHex,f as randomString};
