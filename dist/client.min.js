var KnishIO=function(e,t,s,n,l,r,a,i,o,u,c,h){"use strict";function d(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var p=d(s),m=d(l),y=d(r);class f{static toHex(e,t){const s=(e,t)=>{const s=t?["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F"]:["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"];return s[Math.floor(e/16)]+s[e%16]},n=Object.assign({grouping:0,rowlength:0,uppercase:!1},t||{});let l="",r=0,a=0;for(let t=0;t<e.length&&(l+=s(e[t],n.uppercase),t!==e.length-1);++t)n.grouping>0&&++r===n.grouping&&(r=0,n.rowlength>0&&++a===n.rowlength?(a=0,l+="\n"):l+=" ");return l}static toUint8Array(e){let t=e.toLowerCase().replace(/\s/g,"");t.length%2==1&&(t="0"+t);let s=new Uint8Array(Math.floor(t.length/2)),n=-1;for(let e=0;e<t.length;++e){let l=t[e],r=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"].indexOf(l);if(-1===r)throw Error("unexpected character");-1===n?n=16*r:(s[Math.floor(e/2)]=n+r,n=-1)}return s}}function g(e,t){const s=Math.ceil(e.length/t),n=new Array(s);for(let l=0,r=0;l<s;++l,r+=t)n[l]=e.substr(r,t);return n}function b(e=256,t="abcdef0123456789"){let s=new Uint8Array(e);return(window.crypto||window.msCrypto).getRandomValues(s),s=s.map(e=>t.charCodeAt(e%t.length)),String.fromCharCode.apply(null,s)}function w(e,t,s,n,l){if(n=n||"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz~`!@#$%^&*()-_=+[{]}\\|;:'\",<.>/?¿¡",l=l||n,t>n.length||s>l.length)return console.warn("Can't convert",e,"to base",s,"greater than symbol table length. src-table:",n.length,"dest-table:",l.length),!1;let r=p.default(0);for(let s=0;s<e.length;s++)r=r.multiply(t).add(n.indexOf(e.charAt(s)));if(r.lesser(0))return 0;let a=r.mod(s),i=l.charAt(a),o=r.divide(s);for(;!o.equals(0);)a=o.mod(s),o=o.divide(s),i=l.charAt(a)+i;return i}function k(e){return n.encode(f.toUint8Array(e))}function _(e){return f.toHex(n.decode(e))}function $(e){return/^[A-F0-9]+$/i.test(e)}String.prototype.trim||(String.prototype.trim=function(){return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")});class x{constructor(e,t,s,n=null){this.modelType=e,this.modelId=t,this.meta=s,this.snapshotMolecule=n,this.createdAt=+new Date}static normalizeMeta(e){if("[object Object]"===Object.prototype.toString.call(e)){const t=[];for(const s in e)e.hasOwnProperty(s)&&t.push({key:s,value:e[s]});return t}return e}static aggregateMeta(e){const t={};if("[object Array]"===Object.prototype.toString.call(e))for(let s of e)t[s.key]=s.value;return Object.keys(t).length>0?t:e}}class I{constructor(e,t,s,n=null,l=null,r=null,a=null,i=null,o=null,u=null,c=null){this.position=e,this.walletAddress=t,this.isotope=s,this.token=n,this.value=null!==l?String(l):null,this.batchId=r,this.metaType=a,this.metaId=i,this.meta=o?x.normalizeMeta(o):[],this.index=c,this.otsFragment=u,this.createdAt=String(+new Date)}static jsonToObject(e){const t=Object.assign(new I(null,null,null),JSON.parse(e)),s=Object.keys(new I(null,null,null));for(const e in t)t.hasOwnProperty(e)&&!s.includes(e)&&delete t[e];return t}static hashAtoms(e,s="base17"){const n=t.shake256.create(256),l=e.length,r=I.sortAtoms(e);for(const e of r){n.update(String(l));for(const t in e)if(e.hasOwnProperty(t)){if(["batchId"].includes(t)&&null===e[t])continue;if(["otsFragment","index"].includes(t))continue;if("meta"===t){e[t]=x.normalizeMeta(e[t]);for(const s of e[t])void 0!==s.value&&null!==s.value&&(n.update(String(s.key)),n.update(String(s.value)));continue}if(["position","walletAddress","isotope"].includes(t)){n.update(String(e[t]));continue}null!==e[t]&&n.update(String(e[t]))}}switch(s){case"hex":return n.hex();case"array":return n.array();default:return w(n.hex(),16,17,"0123456789abcdef","0123456789abcdefg").padStart(64,"0")}}static sortAtoms(e){const t=[...e];return t.sort((e,t)=>e.index===t.index?0:e.index<t.index?-1:1),t}}class W{constructor(e={}){this.$options=Object.assign({characters:"GMP"},e),this.$encoder=y.default(this[this.$options.characters]||this.GMP)}encode(e){return this.$encoder.encode(a.Buffer.from(e))}decode(e){return this.$encoder.decode(e)}get GMP(){return"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuv"}get BITCOIN(){return"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}get FLICKR(){return"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}get RIPPLE(){return"rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz"}get IPFS(){return"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}}const S=10**18;class M{static val(e){return Math.abs(e*S)<1?0:e}static cmp(e,t,s=!1){const n=M.val(e)*S,l=M.val(t)*S;return Math.abs(n-l)<1?0:n>l?1:-1}static equal(e,t){return 0===M.cmp(e,t)}}class v{constructor(e=null){this.base=new W(e)}encrypt(e,t){return this.encode(o.seal(u.encode(JSON.stringify(e)),this.decode(t)))}decrypt(e,t,s){try{return JSON.parse(u.decode(o.open(this.decode(e),this.decode(s),this.decode(t))))}catch(e){return null}}generatePrivateKey(e){const s=t.shake256.create(8*i.box.secretKeyLength);return s.update(e),this.base.encode(a.Buffer.from(s.digest()))}generatePublicKey(e){const t=i.box.keyPair.fromSecretKey(this.decode(e));return this.encode(t.publicKey)}shortHash(e){const s=t.shake256.create(64);return s.update(e),this.base.encode(a.Buffer.from(s.digest()))}decode(e){return this.base.decode(e)}encode(e){return this.base.encode(e)}}function A(e){console.info("Crypto::bundle() - Computing wallet bundle from secret...");const s=t.shake256.create(256);return s.update(e),s.hex()}function T(e,t,s=null){return new v(s).encrypt(e,t)}function H(e,t,s,n=null){return new v(n).decrypt(e,t,s)}function O(e,t=null){return new v(t).generatePrivateKey(e)}function C(e,t=null){return new v(t).generatePublicKey(e)}function K(e,t=null){return new v(t).shortHash(e)}class q{constructor(e,t=null,s=null,n=null){this.token=t||"USER",this.balance=0,this.molecules={},this.bundle=e,this.batchId=s,this.characters="undefined"!==(new W)[n]?n:null,this.key=null,this.address=null,this.position=null,this.privkey=null,this.pubkey=null}}class R{constructor(e=null,t="USER",s=null,n=64,l=null){this.position=s||b(n,"abcdef0123456789"),this.token=t,this.balance=0,this.molecules={},this.batchId=null,this.characters="undefined"!==(new W)[l]?l:null,this.key=null,this.address=null,this.bundle=null,this.privkey=null,this.pubkey=null,e&&this.prepareKeys(e)}static create(e,t,s=null,n=null){if(R.isBundleHash(e))return new q(e,t,s,n);const l=new R(e,t);return l.batchId=s,l.characters="undefined"!==(new W)[n]?n:null,l}static isBundleHash(e){return"string"==typeof e&&(64===e.length&&$(e))}prepareKeys(e){null===this.key&&null===this.address&&null===this.bundle&&(this.key=R.generatePrivateKey(e,this.token,this.position),this.address=R.generatePublicKey(this.key),this.bundle=A(e),this.getMyEncPrivateKey(),this.getMyEncPublicKey())}static generateBatchId(){return b(64)}initBatchId(e,t){e.batchId&&(this.batchId=!this.batchId&&M.cmp(e.balance,t)>0?R.generateBatchId():e.batchId)}getMyEncPrivateKey(){return null===this.privkey&&null!==this.key&&(this.privkey=O(this.key,this.characters)),this.privkey}getMyEncPublicKey(){const e=this.getMyEncPrivateKey();return null===this.pubkey&&null!==e&&(this.pubkey=C(e,this.characters)),this.pubkey}encryptMyMessage(e){const t={};for(let s=1,n=arguments.length;s<n;s++)t[K(arguments[s],this.characters)]=T(e,arguments[s],this.characters);return t}decryptMyMessage(e){const t=this.getMyEncPublicKey();let s=e;return null!==e&&"object"==typeof e&&"[object Object]"===Object.prototype.toString.call(e)&&(s=e[K(t,this.characters)]||""),H(s,this.getMyEncPrivateKey(),t,this.characters)}static generatePrivateKey(e,s,n){const l=m.default(e,16).add(m.default(n,16)),r=t.shake256.create(8192);return r.update(l.toString(16)),s&&r.update(s),t.shake256.create(8192).update(r.hex()).hex()}static generatePublicKey(e){const s=g(e,128),n=t.shake256.create(8192);for(const e in s){let l=s[e];for(let e=1;e<=16;e++)l=t.shake256.create(512).update(l).hex();n.update(l)}return t.shake256.create(256).update(n.hex()).hex()}}class E extends TypeError{constructor(e=null,t=null,s=null){if(super(e,t,s),null===e)throw new this("Unknown "+this.constructor.name);this.name="BaseException"}toString(){return`${this.name}: ${this.message}.\nStack:\n${this.stack}`}}class B extends E{constructor(e="There is an atom without an index",t=null,s=null){super(e,t,s),this.name="AtomIndexException"}}class U extends E{constructor(e="The molecule does not contain atoms",t=null,s=null){super(e,t,s),this.name="AtomsMissingException"}}class P extends E{constructor(e="The molecular hash does not match",t=null,s=null){super(e,t,s),this.name="MolecularHashMismatchException"}}class j extends E{constructor(e="The molecular hash is missing",t=null,s=null){super(e,t,s),this.name="MolecularHashMissingException"}}class N extends E{constructor(e="OTS malformed",t=null,s=null){super(e,t,s),this.name="SignatureMalformedException"}}class V extends E{constructor(e="One-time signature (OTS) does not match!",t=null,s=null){super(e,t,s),this.name="SignatureMismatchException"}}class F extends E{constructor(e="Insufficient balance to make transfer",t=null,s=null){super(e,t,s),this.name="TransferBalanceException"}}class z extends E{constructor(e="Token transfer atoms are malformed",t,s){super(e,t,s),this.name="TransferMalformedException"}}class Q extends E{constructor(e="Token slugs for wallets in transfer do not match!",t=null,s=null){super(e,t,s),this.name="TransferMismatchedException"}}class D extends E{constructor(e="Invalid remainder provided",t=null,s=null){super(e,t,s),this.name="TransferRemainderException"}}class J extends E{constructor(e="Sender and recipient(s) cannot be the same",t=null,s=null){super(e,t,s),this.name="TransferToSelfException"}}class L extends E{constructor(e="Token transfer atoms are unbalanced",t=null,s=null){super(e,t,s),this.name="TransferUnbalancedException"}}class G extends E{constructor(e="Empty meta data.",t=null,s=null){super(e,t,s),this.name="MetaMissingException"}}class X extends E{constructor(e="Wrong type of token for this isotope",t=null,s=null){super(e,t,s),this.name="WrongTokenTypeException"}}class Y{static continuId(e){Y.missing(e);if("USER"===e.atoms[0].token&&Y.isotopeFilter("I",e.atoms).length<1)throw new U("Missing atom ContinuID");return!0}static isotopeI(e){Y.missing(e);for(let t of Y.isotopeFilter("I",e.atoms)){if("USER"!==t.token)throw new X(`Invalid token name for "${t.isotope}" isotope`);if(0===t.index)throw new B(`Invalid isotope "${t.isotope}" index`)}return!0}static isotopeU(e){Y.missing(e);for(let t of Y.isotopeFilter("U",e.atoms)){if("AUTH"!==t.token)throw new X(`Invalid token name for "${t.isotope}" isotope`);if(0!==t.index)throw new B(`Invalid isotope "${t.isotope}" index`)}return!0}static isotopeM(e){Y.missing(e);for(let t of Y.isotopeFilter("M",e.atoms)){if(t.meta.length<1)throw new G;if("USER"!==t.token)throw new X(`Invalid token name for "${t.isotope}" isotope`)}return!0}static isotopeC(e){Y.missing(e);for(let t of Y.isotopeFilter("C",e.atoms)){if("USER"!==t.token)throw new X(`Invalid token name for "${t.isotope}" isotope`);if(0!==t.index)throw new B(`Invalid isotope "${t.isotope}" index`)}return!0}static isotopeT(e){Y.missing(e);for(let t of Y.isotopeFilter("T",e.atoms)){const e=x.aggregateMeta(x.normalizeMeta(t.meta));if("wallet"===String(t.metaType).toLowerCase())for(let t of["position","bundle"])if(!e.hasOwnProperty(t)||!Boolean(e[t]))throw new G(`No or not defined "${t}" in meta`);for(let t of["token"])if(!e.hasOwnProperty(t)||!Boolean(e[t]))throw new G(`No or not defined "${t}" in meta`);if("USER"!==t.token)throw new X(`Invalid token name for "${$atom.isotope}" isotope`);if(0!==t.index)throw new B(`Invalid isotope "${t.isotope}" index`)}return!0}static isotopeV(e,t=null){Y.missing(e);const s=Y.isotopeFilter("V",e.atoms);if(0===s.length)return!0;const n=e.atoms[0];if("V"===n.isotope&&2===s.length){const e=s[s.length-1];if(n.token!==e.token)throw new Q;if(e.value<0)throw new z;return!0}let l=0,r=0;for(let t in e.atoms)if(e.atoms.hasOwnProperty(t)){const s=e.atoms[t];if("V"!==s.isotope)continue;if(r=1*s.value,Number.isNaN(r))throw new TypeError('Invalid isotope "V" values');if(s.token!==n.token)throw new Q;if(t>0){if(r<0)throw new z;if(s.walletAddress===n.walletAddress)throw new J}l+=r}if(l!==r)throw new L;if(t){if(r=1*n.value,Number.isNaN(r))throw new TypeError('Invalid isotope "V" values');const e=1*t.balance+r;if(e<0)throw new F;if(e!==l)throw new D}else if(0!==r)throw new D;return!0}static molecularHash(e){if(Y.missing(e),e.molecularHash!==I.hashAtoms(e.atoms))throw new P;return!0}static ots(e){Y.missing(e);const s=e.atoms[0].walletAddress,n=Y.normalizedHash(e.molecularHash);let l=e.atoms.map(e=>e.otsFragment).reduce((e,t)=>e+t);if(2048!==l.length&&(l=_(l),2048!==l.length))throw new N;const r=g(l,128);let a="";for(const e in r){let s=r[e];for(let l=0,r=8+n[e];l<r;l++)s=t.shake256.create(512).update(s).hex();a+=s}const i=t.shake256.create(8192).update(a).hex();if(t.shake256.create(256).update(i).hex()!==s)throw new V;return!0}static index(e){Y.missing(e);for(let t of e.atoms)if(null===t.index)throw new B;return!0}static isotopeFilter(e,t){return(t=t||[]).filter(t=>e===t.isotope)}static normalizedHash(e){return Y.normalize(Y.enumerate(e))}static enumerate(e){const t={0:-8,1:-7,2:-6,3:-5,4:-4,5:-3,6:-2,7:-1,8:0,9:1,a:2,b:3,c:4,d:5,e:6,f:7,g:8},s=[],n=e.toLowerCase().split("");for(let e=0,l=n.length;e<l;++e){const l=n[e];void 0!==t[l]&&(s[e]=t[l])}return s}static normalize(e){let t=e.reduce((e,t)=>e+t);const s=t<0;for(;t<0||t>0;)for(const n of Object.keys(e)){if(s?e[n]<8:e[n]>-8){s?(++e[n],++t):(--e[n],--t);if(0===t)break}}return e}static missing(e){if(null===e.molecularHash)throw new j;if(1>e.atoms.length)throw new U}}class Z extends E{constructor(e="Insufficient balance for requested transfer",t=null,s=null){super(e,t,s),this.name="BalanceInsufficientException"}}class ee extends E{constructor(e="Amount cannot be negative!",t=null,s=null){super(e,t,s),this.name="NegativeAmountException"}}const te=require("lodash.clonedeep"),se=require("lodash.merge");class ne{constructor(e=null){this.cellSlugOrigin=this.cellSlug=e}get cellSlugDelimiter(){return"."}cellSlugBase(){return(this.cellSlug||"").split(this.cellSlugDelimiter)[0]}toJSON(){let e=te(this);for(let t of["remainderWallet","secret","sourceWallet","cellSlugOrigin"])e.hasOwnProperty(t)&&delete e[t];return e}check(e=null){return ne.verify(this,e)}static verify(e,t=null){return Y.molecularHash(e)&&Y.ots(e)&&Y.index(e)&&Y.continuId(e)&&Y.isotopeM(e)&&Y.isotopeT(e)&&Y.isotopeC(e)&&Y.isotopeU(e)&&Y.isotopeI(e)&&Y.isotopeV(e,t)}static jsonToObject(e){const t=se(new this,JSON.parse(e)),s=Object.keys(new this);if(!Array.isArray(t.atoms))throw new U;for(const e in Object.keys(t.atoms)){t.atoms[e]=I.jsonToObject(JSON.stringify(t.atoms[e]));for(const s of["position","walletAddress","isotope"])if(void 0===t.atoms[e][s]||null===t.atoms[e][s])throw new U("The required properties of the atom are not filled.")}for(const e in t)t.hasOwnProperty(e)&&!s.includes(e)&&delete t[e];return t.atoms=I.sortAtoms(t.atoms),t}}const le=require("lodash.merge");class re extends ne{constructor(e,t=null,s=null,n=null){super(n),this.secret=e,this.sourceWallet=t,this.atoms=[],(s||t)&&(this.remainderWallet=s||R.create(e,t.batchId,t.characters)),this.clear()}static mergeMetas(e,t={}){return le(e||{},t)}static verify(e,t=null){return Y.molecularHash(e)&&Y.ots(e)&&Y.index(e)&&Y.continuId(e)&&Y.isotopeM(e)&&Y.isotopeT(e)&&Y.isotopeC(e)&&Y.isotopeU(e)&&Y.isotopeI(e)&&Y.isotopeV(e,t)}static generateNextAtomIndex(e){const t=e.length-1;return t>-1?e[t].index+1:0}continuIdMetaType(){return"walletBundle"}fill(e){for(let t in Object.keys(e))this[t]=e[t]}encryptMessage(e,t=[]){const s=[e,this.sourceWallet.pubkey];for(let e of t)s.push(e.pubkey);return this.sourceWallet.encryptMessage(...s)}addAtom(e){return this.molecularHash=null,this.atoms.push(e),this.atoms=I.sortAtoms(this.atoms),this}replenishTokens(e,t,s){const n=x.aggregateMeta(x.normalizeMeta(s));n.action="add";for(let e of["address","position","batchId"])if(void 0===n[e])throw new G(`Missing ${e} in meta`);return this.molecularHash=null,this.atoms.push(new I(this.sourceWallet.position,this.sourceWallet.address,"C",this.sourceWallet.token,e,this.sourceWallet.batchId,"token",t,re.mergeMetas({pubkey:this.sourceWallet.pubkey,characters:this.sourceWallet.characters},n),null,this.generateIndex())),this.addUserRemainderAtom(this.remainderWallet),this.atoms=I.sortAtoms(this.atoms),this}addUserRemainderAtom(e){return this.molecularHash=null,this.atoms.push(new I(e.position,e.address,"I",e.token,null,null,"walletBundle",e.bundle,{pubkey:e.pubkey,characters:e.characters},null,this.generateIndex())),this.atoms=I.sortAtoms(this.atoms),this}burnTokens(e,t=null){if(e<0)throw new ee("Amount to burn must be positive!");if(this.sourceWallet.balance-e<0)throw new Z;return this.molecularHash=null,this.atoms.push(new I(this.sourceWallet.position,this.sourceWallet.address,"V",this.sourceWallet.token,-e,this.sourceWallet.batchId,null,null,{pubkey:this.sourceWallet.pubkey,characters:this.sourceWallet.characters},null,this.generateIndex())),this.atoms.push(new I(this.remainderWallet.position,this.remainderWallet.address,"V",this.sourceWallet.token,this.sourceWallet.balance-e,this.remainderWallet.batchId,t?"walletBundle":null,t,{pubkey:this.remainderWallet.pubkey,characters:this.remainderWallet.characters},null,this.generateIndex())),this.atoms=I.sortAtoms(this.atoms),this}initValue(e,t){if(this.sourceWallet.balance-t<0)throw new Z;return this.molecularHash=null,this.atoms.push(new I(this.sourceWallet.position,this.sourceWallet.address,"V",this.sourceWallet.token,-t,this.sourceWallet.batchId,null,null,{pubkey:this.sourceWallet.pubkey,characters:this.sourceWallet.characters},null,this.generateIndex())),this.atoms.push(new I(e.position,e.address,"V",this.sourceWallet.token,t,e.batchId,"walletBundle",e.bundle,{pubkey:e.pubkey,characters:e.characters},null,this.generateIndex())),this.atoms.push(new I(this.remainderWallet.position,this.remainderWallet.address,"V",this.sourceWallet.token,this.sourceWallet.balance-t,this.remainderWallet.batchId,"walletBundle",this.sourceWallet.bundle,{pubkey:this.remainderWallet.pubkey,characters:this.remainderWallet.characters},null,this.generateIndex())),this.atoms=I.sortAtoms(this.atoms),this}initWalletCreation(e){this.molecularHash=null;const t={address:e.address,token:e.token,bundle:e.bundle,position:e.position,amount:0,batch_id:e.batchId,pubkey:e.pubkey,characters:e.characters};return this.atoms.push(new I(this.sourceWallet.position,this.sourceWallet.address,"C",this.sourceWallet.token,null,this.sourceWallet.batchId,"wallet",e.address,t,null,this.generateIndex())),this.addUserRemainderAtom(this.remainderWallet),this.atoms=I.sortAtoms(this.atoms),this}initIdentifierCreation(e,t,s){return this.molecularHash=null,this.atoms.push(new I(this.sourceWallet.position,this.sourceWallet.address,"C",this.sourceWallet.token,null,null,"identifier",e,{pubkey:this.sourceWallet.pubkey,characters:this.sourceWallet.characters,code:s,hash:A(source.trim())},null,this.generateIndex())),this.addUserRemainderAtom(this.remainderWallet),this.atoms=I.sortAtoms(this.atoms),this}initTokenCreation(e,t,s){this.molecularHash=null;for(const t of["walletAddress","walletPosition","walletPubkey","walletCharacters"])s[t]||(s[t]=e[t.toLowerCase().substr(6)]);return s.pubkey=this.sourceWallet.pubkey,s.characters=this.sourceWallet.characters,this.atoms.push(new I(this.sourceWallet.position,this.sourceWallet.address,"C",this.sourceWallet.token,t,e.batchId,"token",e.token,s,null,this.generateIndex())),this.addUserRemainderAtom(this.remainderWallet),this.atoms=I.sortAtoms(this.atoms),this}initShadowWalletClaim(e,t={}){return this.molecularHash=null,this.atoms.push(new I(this.sourceWallet.position,this.sourceWallet.address,"C",this.sourceWallet.token,null,e.batchId,"shadowWallet",e.token,re.mergeMetas({pubkey:this.sourceWallet.pubkey,characters:this.sourceWallet.characters},t),null,this.generateIndex())),this.addUserRemainderAtom(this.remainderWallet),this.atoms=I.sortAtoms(this.atoms),this}initMeta(e,t,s){return this.molecularHash=null,this.atoms.push(new I(this.sourceWallet.position,this.sourceWallet.address,"M",this.sourceWallet.token,null,this.sourceWallet.batchId,t,s,re.mergeMetas({pubkey:this.sourceWallet.pubkey,characters:this.sourceWallet.characters},e),null,this.generateIndex())),this.addUserRemainderAtom(this.remainderWallet),this.atoms=I.sortAtoms(this.atoms),this}initTokenRequest(e,t,s,n,l={}){return this.molecularHash=null,this.atoms.push(new I(this.sourceWallet.position,this.sourceWallet.address,"T",this.sourceWallet.token,t,null,s,n,re.mergeMetas({pubkey:this.sourceWallet.pubkey,characters:this.sourceWallet.characters,token:e},l),null,this.generateIndex())),this.addUserRemainderAtom(this.remainderWallet),this.atoms=I.sortAtoms(this.atoms),this}initAuthorization(){return this.molecularHash=null,this.atoms.push(new I(this.sourceWallet.position,this.sourceWallet.address,"U",this.sourceWallet.token,null,this.sourceWallet.batchId,null,null,{pubkey:this.sourceWallet.pubkey,characters:this.sourceWallet.characters},null,this.generateIndex())),this.atoms=I.sortAtoms(this.atoms),this}clear(){return this.molecularHash=null,this.bundle=null,this.status=null,this.createdAt=String(+new Date),this.atoms=[],this}sign(e=!1,s=!0){if(0===this.atoms.length||0!==this.atoms.filter(e=>!(e instanceof I)).length)throw new U;e||(this.bundle=A(this.secret)),this.molecularHash=I.hashAtoms(this.atoms);const n=this.atoms[0],l=g(R.generatePrivateKey(this.secret,n.token,n.position),128),r=Y.normalizedHash(this.molecularHash);let a="";for(const e in l){let s=l[e];for(let n=0,l=8-r[e];n<l;n++)s=t.shake256.create(512).update(s).hex();a+=s}s&&(a=k(a));const i=g(a,Math.ceil(a.length/this.atoms.length));let o=null;for(let e=0,t=i.length;e<t;e++)this.atoms[e].otsFragment=i[e],o=this.atoms[e].position;return o}check(e=null){return re.verify(this,e)}generateIndex(){return re.generateNextAtomIndex(this.atoms)}}class ae{static __init(e,t){this.arr=[],this.key=null,this.arr=String(t).split("."),this.key=this.arr.shift();const s=Number(this.key);Number.isInteger(s)&&(this.key=s),this.__nextKey=this.arr.length,this.__next=this.__tic(e)}static __tic(e){return!!(Array.isArray(e)||e instanceof Object)&&void 0!==e[this.key]}static has(e,t){return this.__init(e,t),!!this.__next&&(0===this.__nextKey||this.has(e[this.key],this.arr.join(".")))}static get(e,t,s=null){return this.__init(e,t),this.__next?0===this.__nextKey?e[this.key]:this.get(e[this.key],this.arr.join("."),s):s}}const ie=require("lodash.merge");class oe{constructor(e,t={}){this.$__headers=new c.Headers(t.headers||{}),this.$__config=ie(t,{method:"POST",headers:this.$__headers}),this.setUrl(e)}getConfig(){return this.$__config}setUrl(e){this.$__url=e}getUrl(){return this.$__url}setAuthToken(e){this.$__headers.set("X-Auth-Token",e||"")}getAuthToken(){return this.$__headers.get("X-Auth-Token")||""}async send(e,t={}){e.headers.extend(t),this.$__headers.extend(e.headers.asObject()),this.$__headers.delete("content-type"),this.$__headers.append("Accept","application/json"),this.$__headers.append("Content-Type","application/json;charset=UTF-8"),this.setAuthToken(this.getAuthToken());const s=new c.Request(e,this.$__config);return s.headers.delete("content-length"),await h.fetch(s)}}class ue extends E{constructor(e="GraphQL did not provide a valid response.",t=null,s=null){super(e,t,s),this.name="InvalidResponseException"}}class ce extends E{constructor(e="Authorization token missing or invalid.",t=null,s=null){super(e,t,s),this.name="UnauthenticatedException"}}class he{constructor(e,t){if(this.dataKey=null,this.errorKey="exception",this.$__payload=null,this.$__query=e,this.$__originResponse=t,this.$__response=t,void 0===this.$__response||null===this.$__response)throw new ue;if(ae.has(this.$__response,this.errorKey)){const e=ae.get(this.$__response,this.errorKey);if(String(e).includes("Unauthenticated"))throw new ce;throw new ue}this.init()}data(){if(!this.dataKey)return this.response();if(!ae.has(this.response(),this.dataKey))throw new ue;return ae.get(this.response(),this.dataKey)}response(){return this.$__response}payload(){return null}query(){return this.$__query}init(){return null}}class de{constructor(e){this.knishIO=e,this.$__fields=null,this.$__variables=null,this.$__request=null,this.$__response=null,this.$__query=null}request(){return this.$__request}response(){return this.$__response}client(){return this.knishIO.client()}createRequest(e=null,t=null){return this.$__variables=this.compiledVariables(e),new c.Request(this.url(),{body:JSON.stringify({query:this.compiledQuery(t),variables:this.variables()})})}compiledVariables(e=null){return e||{}}compiledQuery(e=null){return null!==e&&(this.$__fields=e),this.$__query.replace(new RegExp("@fields","g"),this.compiledFields(this.$__fields))}compiledFields(e){const t=[];for(let s of Object.keys(e))t.push(e[s]?`${s} ${this.compiledFields(e[s])}`:""+s);return`{ ${t.join(", ")} }`}async execute(e=null,t=null){this.$__request=this.createRequest(e,t);let s=await this.client().send(this.$__request);return this.knishIO.$__serverSdkVersion>2&&"MutationRequestAuthorization"!==this.constructor.name&&401===s.status&&(await this.knishIO.requestAuthToken(),s=await this.client().send(this.$__request)),this.$__response=await this.createResponseRaw(s),this.$__response}async createResponseRaw(e){return this.createResponse(JSON.parse(await e.text()))}createResponse(e){return new he(this,e)}url(){return this.knishIO.client().getUrl()}variables(){return this.$__variables}}class pe extends he{constructor(e,t){super(e,t),this.dataKey="data.ContinuId",this.init()}payload(){let e=null;const t=this.data();return t&&(e=new R(null,t.tokenSlug),e.address=t.address,e.position=t.position,e.bundle=t.bundleHash,e.batchId=t.batchId,e.characters=t.characters,e.pubkey=t.pubkey,e.balance=1*t.amount),e}}class me extends de{constructor(e){super(e),this.$__query="query ($bundle: String!) { ContinuId(bundle: $bundle) @fields }",this.$__fields={address:null,bundleHash:null,tokenSlug:null,position:null,batchId:null,characters:null,pubkey:null,amount:null,createdAt:null}}createResponse(e){return new pe(this,e)}}class ye extends he{constructor(e,t){super(e,t),this.dataKey="data.WalletBundle",this.init()}payload(){const e=this.data();if(!e||0===e.length)return null;const t={};return e.forEach(e=>{e.metas=x.aggregateMeta(e.metas),t[e.bundleHash]=e}),t}}class fe extends de{constructor(e){super(e),this.$__query="query( $bundleHash: String, $bundleHashes: [ String! ], $key: String, $keys: [ String! ], $value: String, $values: [ String! ], $keys_values: [ MetaInput ], $latest: Boolean, $limit: Int, $skip: Int, $order: String ) { WalletBundle( bundleHash: $bundleHash, bundleHashes: $bundleHashes, key: $key, keys: $keys, value: $value, values: $values, keys_values: $keys_values, latest: $latest, limit: $limit, skip: $skip, order: $order ) @fields }",this.$__fields={bundleHash:null,metas:{molecularHash:null,position:null,key:null,value:null,createdAt:null},createdAt:null}}createResponse(e){return new ye(this,e)}static createVariables(e=null,t=null,s=null,n=!0){const l={latest:n};return e&&(l["string"==typeof e?"bundleHash":"bundleHashes"]=e),t&&(l["string"==typeof t?"key":"keys"]=t),s&&(l["string"==typeof s?"value":"values"]=s),l}}class ge extends he{constructor(e,t){super(e,t),this.dataKey="data.Wallet",this.init()}toClientWallet(e){let t;return null===e.position||void 0===e.position?t=new q(e.bundleHash,e.tokenSlug,e.batchId):(t=new R(null,e.tokenSlug),t.address=e.address,t.position=e.position,t.bundle=e.bundleHash,t.batchId=e.batchId,t.characters=e.characters,t.pubkey=e.pubkey,t.createdAt=e.createdAt),t.balance=e.amount,t}payload(){const e=this.data();if(!e)return null;const t=[];for(let s of e)t.push(this.toClientWallet(s));return t}}class be extends de{constructor(e){super(e),this.$__query="query( $address: String, $bundleHash: String, $token: String, $position: String, $unspent: Boolean ) { Wallet( address: $address, bundleHash: $bundleHash, token: $token, position: $position, unspent: $unspent ) @fields }",this.$__fields={address:null,bundleHash:null,tokenSlug:null,batchId:null,position:null,amount:null,characters:null,pubkey:null,createdAt:null}}createResponse(e){return new ge(this,e)}}class we extends he{constructor(e,t){super(e,t),this.dataKey="data.Balance",this.init()}payload(){const e=this.data();if(!e)return null;let t=null;return null===e.position?t=new q(e.bundleHash,e.tokenSlug,e.batchId):(t=new R(null,e.tokenSlug),t.address=e.address,t.position=e.position,t.bundle=e.bundleHash,t.batchId=e.batchId,t.characters=e.characters,t.pubkey=e.pubkey),t.balance=e.amount,t}}class ke extends de{constructor(e){super(e),this.$__query="query( $address: String, $bundleHash: String, $token: String, $position: String ) { Balance( address: $address, bundleHash: $bundleHash, token: $token, position: $position ) @fields }",this.$__fields={address:null,bundleHash:null,tokenSlug:null,batchId:null,position:null,amount:null,characters:null,pubkey:null,createdAt:null}}createResponse(e){return new we(this,e)}}class _e extends he{constructor(e,t){super(e,t),this.dataKey="data.MetaType",this.init()}payload(){const e=this.data();if(!e||0===e.length)return null;const t=[];return e.pop().instances.forEach(e=>{e.metas=x.aggregateMeta(e.metas),t.push(e)}),t}}class $e extends de{constructor(e){super(e),this.$__query="query( $metaType: String, $metaTypes: [ String! ], $metaId: String, $metaIds: [ String! ], $key: String, $keys: [ String! ], $value: String, $values: [ String! ], $count: String, $latest: Boolean ) { MetaType( metaType: $metaType, metaTypes: $metaTypes, metaId: $metaId, metaIds: $metaIds, key: $key, keys: $keys, value: $value, values: $values, count: $count ) @fields }",this.$__fields={metaType:null,instances:{metaType:null,metaId:null,createdAt:null,"metas(latest:$latest)":{molecularHash:null,position:null,key:null,value:null,createdAt:null}},metas:{molecularHash:null,position:null,key:null,value:null,createdAt:null},createdAt:null}}createResponse(e){return new _e(this,e)}static createVariables(e=null,t=null,s=null,n=null,l=null){const r={};return e&&(r["string"==typeof e?"metaType":"metaTypes"]=e),t&&(r["string"==typeof t?"metaId":"metaIds"]=t),s&&(r["string"==typeof s?"key":"keys"]=s),n&&(r["string"==typeof n?"value":"values"]=n),l&&(r.latest=!!l),r}}class xe extends he{constructor(e,t){super(e,t),this.dataKey="data.ProposeMolecule",this.init()}init(){const e=ae.get(this.data(),"payload");try{this.$__payload=JSON.parse(e)}catch(e){this.$__payload=null}}molecule(){const e=this.data();if(!e)return null;const t=new ne;return t.molecularHash=ae.get(e,"molecularHash"),t.status=ae.get(e,"status"),t.status=ae.get(e,"createdAt"),t}success(){return"accepted"===this.status()}status(){return ae.get(this.data(),"status","rejected")}reason(){return ae.get(this.data(),"reason","Invalid response from server")}payload(){return this.$__payload}}class Ie extends de{}const We=require("lodash.merge");class Se extends Ie{constructor(e,t=null){super(e),this.$__molecule=t,this.$__remainderWallet=null,this.$__query="mutation( $molecule: MoleculeInput! ) { ProposeMolecule( molecule: $molecule ) @fields }",this.$__fields={molecularHash:null,height:null,depth:null,status:null,reason:null,payload:null,createdAt:null,receivedAt:null,processedAt:null,broadcastedAt:null}}compiledVariables(e){const t=super.compiledVariables(e);return We(t,{molecule:this.molecule()})}createResponse(e){return new xe(this,e)}async execute(e=null,t=null){return await super.execute(We(e||{},{molecule:this.molecule()}),t)}remainderWallet(){return this.$__remainderWallet}molecule(){return this.$__molecule}}class Me extends xe{payloadKey(e){if(!ae.has(this.payload(),e))throw new ue(`ResponseAuthorization: '${e}' key is not found in the payload.`);return ae.get(this.payload(),e)}token(){return this.payloadKey("token")}time(){return this.payloadKey("time")}}class ve extends Se{fillMolecule(){this.$__molecule.initAuthorization(),this.$__molecule.sign(),this.$__molecule.check()}createResponse(e){return new Me(this,e)}}class Ae extends xe{}class Te extends Se{fillMolecule(e,t,s=null){this.$__molecule.initTokenCreation(e,t,s||{}),this.$__molecule.sign(),this.$__molecule.check()}createResponse(e){return new Ae(this,e)}}class He extends Se{fillMolecule(e,t,s,n,l=null){this.$__molecule.initTokenRequest(e,t,s,n,l||{}),this.$__molecule.sign(),this.$__molecule.check()}}class Oe extends xe{payload(){const e={reason:null,status:null},t=this.data();return e.reason=void 0===t.reason?"Invalid response from server":t.reason,e.status=void 0===t.status?"rejected":t.status,e}}class Ce extends Se{fillMolecule(e,t){this.$__molecule.initValue(e,t),this.$__molecule.sign(),this.$__molecule.check(this.$__molecule.sourceWallet())}createResponse(e){return new Oe(this,e)}}class Ke extends Se{fillMolecule(e,t,s){this.$__molecule.initIdentifierCreation(e,t,s),this.$__molecule.sign(),this.$__molecule.check()}}class qe extends Se{fillMolecule(e,t){const s=[];for(let n of t)s.push(R.create(this.$__molecule.secret(),e,n.batchId));this.$__molecule.initShadowWalletClaimAtom(e,s),this.$__molecule.sign(),this.$__molecule.check()}}class Re extends E{constructor(e="Code exception",t=null,s=null){super(e,t,s),this.name="CodeException"}}class Ee extends xe{}class Be extends Se{fillMolecule(e,t,s){this.$__molecule.initMeta(s,e,t),this.$__molecule.sign(),this.$__molecule.check()}createResponse(e){return new Ee(this,e)}}return e.Atom=I,e.KnishIOClient=class{constructor(e,t=null,s=3){this.initialize(e,t,s)}initialize(e,t=null,s=3){console.info(`KnishIOClient::initialize() - Initializing new Knish.IO client session for SDK version ${s}...`),this.$__url=e,this.$__secret="",this.$__bundle="",this.$__client=t||new oe(this.$__url),this.$__serverSdkVersion=s,this.remainderWallet=null}deinitialize(){console.info("KnishIOClient::deinitialize() - Clearing the Knish.IO client session..."),this.$__secret="",this.$__bundle="",this.remainderWallet=null}cellSlug(){return this.$__cellSlug||null}setCellSlug(e){this.$__cellSlug=e}setAuthToken(e){this.client().setAuthToken(e)}getAuthToken(){return this.client().getAuthToken()}getUrl(){return this.client().getUrl()}client(){return this.$__client}async createMolecule(e=null,t=null,s=null){console.info("KnishIOClient::createMolecule() - Creating a new molecule...");const n=e||this.secret();let l=t;return!t&&this.lastMoleculeQuery&&"AUTH"!==this.getRemainderWallet().token&&this.lastMoleculeQuery.response()&&this.lastMoleculeQuery.response().success()&&(l=this.getRemainderWallet()),null===l&&(l=await this.getSourceWallet()),this.remainderWallet=s||R.create(n,l.token,l.batchId,l.characters),new re(n,l,this.getRemainderWallet(),this.cellSlug())}createQuery(e){return new e(this)}async createMoleculeMutation(e,t=null){console.info(`KnishIOClient::createMoleculeQuery() - Creating a new ${e.name} query...`);let s=t;null===s&&(s=e.name===ve.name?await this.createMolecule(this.secret(),new R(this.secret(),"AUTH")):await this.createMolecule());const n=new e(this,s);if(!(n instanceof Se))throw new Re(this.constructor.name+"::createMoleculeMutation - required class instance of MutationProposeMolecule.");return this.lastMoleculeQuery=n,n}async requestAuthToken(e=null,t=null){if(console.info("KnishIOClient::requestAuthToken() - Requesting authorization token..."),this.$__secret=e||this.secret(),this.$__bundle=A(this.$__secret),this.$__cellSlug=t||this.cellSlug(),this.$__serverSdkVersion>2){const e=await this.createMoleculeMutation(ve);e.fillMolecule();const t=await e.execute();if(!t.success())throw console.warn("KnishIOClient::requestAuthToken() - Unable to retrieve auth token..."),new ce(t.reason());{const e=t.token();this.client().setAuthToken(e),console.info(`KnishIOClient::requestAuthToken() - Successfully retrieved auth token ${t.token()}...`)}return t}console.warn("KnishIOClient::requestAuthToken() - Server SDK version does not require an auth token...")}async queryBalance(e,t){const s=this.createQuery(ke);return await s.execute({bundleHash:R.isBundleHash(e)?e:A(e),token:t})}queryMeta(e,t=null,s=null,n=null,l=null,r=null){console.info(`KnishIOClient::queryMeta() - Querying meta type data for metaType: ${e}, metaId: ${t}, key: ${s}, value: ${n}...`);const a=this.createQuery($e),i=$e.createVariables(e,t,s,n,l);return a.execute(i,r).then(e=>e.payload())}hasSecret(){return!!this.$__secret}secret(){if(!this.$__secret)throw new ce("KnishIOClient::secret() - Unable to find a stored secret!");return this.$__secret}bundle(){if(!this.$__bundle)throw new ce("KnishIOClient::bundle() - Unable to find a stored bundle!");return this.$__bundle}async createToken(e,t,s=null){const n=new R(this.secret(),e);"stackable"===ae.get(s||{},"fungibility")&&(n.batchId=R.generateBatchId());const l=await this.createMoleculeMutation(Te);return l.fillMolecule(n,t,s||{}),await l.execute()}async createMeta(e,t,s=null){const n=await this.createMoleculeMutation(Be);return n.fillMolecule(e,t,s),await n.execute()}async createIdentifier(e,t,s){const n=await this.createMoleculeMutation(Ke);return n.fillMolecule(e,t,s),await n.execute()}queryWallets(e=null){console.info(`KnishIOClient::queryWallets() - Querying wallets${e?" for "+e:""}...`);return this.createQuery(be).execute({bundleHash:e||this.bundle(),unspent:!0}).then(e=>{const t=e.payload(),s=[];return console.info(`KnishIOClient::getWallets() - Discovered ${t.length} remote wallets...`),t.forEach(e=>{const t=e.tokenSlug;let n=null;e.address?(console.info(`KnishIOClient::getWallets() - Restoring ${e.token} wallet with balance of ${e.balance}...`),n=new R(this.$__secret,e.token,e.position),n.balance=Number(e.balance),n.molecules=e.molecules,n.createdAt=e.createdAt,n.tokenName=e.tokenName,n.tokenIcon=e.tokenIcon):(console.info(`Wallet::import() - Restoring ${t} shadow wallet...`),n=new R(this.$__secret,t,""),n.balance=e.balance,n.createdAt=e.createdAt),e.remote=!0,s.push(n)}),s})}queryShadowWallets(e="KNISH",t=null){console.info(`KnishIOClient::queryShadowWallets() - Querying shadow wallets${t?" for "+t:""}...`);return this.createQuery(be).execute({bundleHash:t||this.bundle(),token:e}).then(e=>e.payload())}queryBundle(e=null,t=null,s=null,n=!0,l=null){console.info(`KnishIOClient::queryBundle() - Querying wallet bundle metadata${e?" for "+e:""}...`);const r=this.createQuery(fe),a=fe.createVariables(null!==e?e:this.bundle(),t,s,n);return r.execute(a,l).then(e=>e.payload())}async requestTokens(e,t,s,n=null){let l,r;"[object String]"===Object.prototype.toString.call(s)&&(R.isBundleHash(s)?(l="walletbundle",r=s):s=R.create(s,e)),s instanceof R&&(l="wallet",n=re.mergeMetas(n||{},{position:s.position,bundle:s.bundle}),r=s.address);const a=await this.createMoleculeMutation(He);return a.fillMolecule(e,t,l,r,n),await a.execute()}async claimShadowWallet(e,t=null){const s=this.queryShadowWallets(e),n=await this.createMoleculeMutation(qe,t);return n.fillMolecule(e,s),await n.execute()}async transferToken(e,t,s){const n=(await this.queryBalance(this.secret(),t)).payload();if(null===n||M.cmp(n.balance,s)<0)throw new F;let l=e instanceof R?e:(await this.queryBalance(e,t)).payload();null===l&&(l=R.create(e,t)),"function"==typeof l.initBatchId&&l.initBatchId(n,s),this.remainderWallet=R.create(this.secret(),t,l.batchId,n.characters);const r=await this.createMolecule(null,n,this.getRemainderWallet()),a=await this.createMoleculeMutation(Ce,r);return a.fillMolecule(l,s),await a.execute()}async getSourceWallet(){let e=(await this.queryContinuId(this.bundle())).payload();return e||(e=new R(this.secret())),e}async queryContinuId(e){return await this.createQuery(me).execute({bundle:e})}getRemainderWallet(){return this.remainderWallet}},e.Meta=x,e.Molecule=re,e.Wallet=R,e.WalletShadow=q,e.base64ToHex=_,e.bufferToHexString=function(e){return f.toHex(e)},e.charsetBaseConvert=w,e.chunkSubstr=g,e.decryptMessage=H,e.encryptMessage=T,e.generateBundleHash=A,e.generateEncPrivateKey=O,e.generateEncPublicKey=C,e.generateSecret=function(e=null,s=2048){if(console.info(`Crypto::generateSecret() - Computing new secret${e?" from existing seed":""}...`),e){const n=t.shake256.create(2*s);return n.update(e),n.hex()}return b(s)},e.hashShare=K,e.hexStringToBuffer=function(e){return f.toUint8Array(e)},e.hexToBase64=k,e.isHex=$,e.randomString=b,e}({},jsSha3,bigInt,base64,bigIntB,baseX,buffer,tweetnacl,tweetnaclSealedboxJs,utf8,servie,popsicle);
